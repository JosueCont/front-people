{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Form, Input, Layout, Modal, DatePicker, Button, Space, Select, message, Row, Col } from \"antd\";\nimport Axios from \"axios\";\nimport { API_URL } from \"../../config/config\";\nimport { useState, useEffect } from \"react\";\n\nconst FormPerson = props => {\n  const [form] = Form.useForm();\n  const {\n    0: groups,\n    1: setGroups\n  } = useState([]);\n  const {\n    0: personType,\n    1: setPersonType\n  } = useState([]);\n  const {\n    0: jobs,\n    1: setJobs\n  } = useState([]);\n  const {\n    0: date,\n    1: setDate\n  } = useState(\"\");\n  const {\n    0: departments,\n    1: setDepartments\n  } = useState(\"\");\n  useEffect(() => {\n    const company_id = \"5f417a53c37f6275fb614104\";\n\n    if (company_id !== undefined) {\n      getValueSelects(company_id);\n    }\n  }, []);\n\n  const onFinish = value => {\n    if (date !== \"\") {\n      value.birth_date = date;\n    }\n\n    createPerson(value);\n  };\n\n  const getValueSelects = async id => {\n    const headers = {\n      \"client-id\": \"5f417a53c37f6275fb614104\",\n      \"Content-Type\": \"application/json\"\n    }; /////PERMSS GROUPS\n\n    Axios.get(\"https://khonnect.hiumanlab.com/group/list/\", {\n      headers: headers\n    }).then(response => {\n      if (response.status === 200) {\n        let group = response.data.data;\n        group = group.map(a => {\n          return {\n            label: a.name,\n            value: a.id\n          };\n        });\n        setGroups(group);\n      }\n    }).catch(e => {\n      console.log(e);\n    }); /////PERSON TYPE\n\n    Axios.get(API_URL + `/person/person-type/`).then(response => {\n      if (response.status === 200) {\n        let typesPerson = response.data.results;\n        typesPerson = typesPerson.map(a => {\n          return {\n            label: a.name,\n            value: a.id\n          };\n        });\n        setPersonType(typesPerson);\n      }\n    }).catch(e => {\n      console.log(e);\n    }); /////DEPARTMENTS\n\n    Axios.get(API_URL + `/business/department/`).then(response => {\n      if (response.status === 200) {\n        let dep = response.data.results;\n        dep = dep.map(a => {\n          return {\n            label: a.name,\n            value: a.id\n          };\n        });\n        setDepartments(dep);\n      }\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  const createPerson = value => {\n    Axios.post(API_URL + `/person/person/`, value).then(response => {\n      message.success(\"Agregado correctamente\");\n      form.resetFields();\n      props.close(false);\n    }).catch(response => {\n      message.error(\"Error al agregar, intente de nuevo\");\n    });\n  };\n\n  const genders = [{\n    label: \"Maculino\",\n    value: 1\n  }, {\n    label: \"Femenino\",\n    value: 2\n  }, {\n    label: \"Otro\",\n    value: 3\n  }];\n  const ruleEmail = {\n    type: \"email\",\n    message: \"Ingrese un correo electronico valido\"\n  };\n\n  function onChange(date, dateString) {\n    setDate(dateString);\n  }\n\n  const onChangeDepartment = value => {\n    ////JOBS\n    Axios.get(API_URL + `/business/department/${value}/job_for_department/`).then(response => {\n      if (response.status === 200) {\n        let job = response.data;\n        job = job.map(a => {\n          return {\n            label: a.name,\n            value: a.id\n          };\n        });\n        setJobs(job);\n      }\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  const closeDialog = () => {\n    props.close(false);\n    form.resetFields();\n  };\n\n  const ruleRequired = {\n    required: true,\n    message: \"Este campo es requerido\"\n  };\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/_jsx(Layout, {\n      children: /*#__PURE__*/_jsx(Modal, {\n        maskClosable: false,\n        title: \"Alta de personas\",\n        centered: true,\n        visible: props.visible,\n        onCancel: () => closeDialog(),\n        footer: null,\n        width: \"60%\",\n        children: /*#__PURE__*/_jsx(Form, {\n          onFinish: onFinish,\n          form: form,\n          children: /*#__PURE__*/_jsxs(Row, {\n            children: [/*#__PURE__*/_jsx(Col, {\n              lg: 7,\n              xs: 22,\n              offset: 1,\n              children: /*#__PURE__*/_jsx(Form.Item, {\n                name: \"person_type\",\n                children: /*#__PURE__*/_jsx(Select, {\n                  options: personType,\n                  placeholder: \"Tipo de persona\"\n                })\n              })\n            }), /*#__PURE__*/_jsx(Col, {\n              lg: 7,\n              xs: 22,\n              offset: 1,\n              children: /*#__PURE__*/_jsx(Form.Item, {\n                name: \"department\",\n                children: /*#__PURE__*/_jsx(Select, {\n                  options: departments,\n                  onChange: onChangeDepartment,\n                  placeholder: \"Departamento\"\n                })\n              })\n            }), /*#__PURE__*/_jsx(Col, {\n              lg: 7,\n              xs: 22,\n              offset: 1,\n              children: /*#__PURE__*/_jsx(Form.Item, {\n                name: \"job\",\n                children: /*#__PURE__*/_jsx(Select, {\n                  options: jobs,\n                  placeholder: \"Puesto de trabajo\"\n                })\n              })\n            }), /*#__PURE__*/_jsx(Col, {\n              lg: 7,\n              xs: 22,\n              offset: 1,\n              children: /*#__PURE__*/_jsx(Form.Item, {\n                rules: [ruleRequired],\n                name: \"first_name\",\n                children: /*#__PURE__*/_jsx(Input, {\n                  type: \"text\",\n                  placeholder: \"Nombre\"\n                })\n              })\n            }), /*#__PURE__*/_jsx(Col, {\n              lg: 7,\n              xs: 22,\n              offset: 1,\n              children: /*#__PURE__*/_jsx(Form.Item, {\n                rules: [ruleRequired],\n                name: \"flast_name\",\n                children: /*#__PURE__*/_jsx(Input, {\n                  type: \"text\",\n                  placeholder: \"Apellido paterno\"\n                })\n              })\n            }), /*#__PURE__*/_jsx(Col, {\n              lg: 7,\n              xs: 22,\n              offset: 1,\n              children: /*#__PURE__*/_jsx(Form.Item, {\n                name: \"mlast_name\",\n                children: /*#__PURE__*/_jsx(Input, {\n                  type: \"text\",\n                  placeholder: \"Apellido materno\"\n                })\n              })\n            }), /*#__PURE__*/_jsx(Col, {\n              lg: 7,\n              xs: 22,\n              offset: 1,\n              children: /*#__PURE__*/_jsx(Form.Item, {\n                name: \"gender\",\n                children: /*#__PURE__*/_jsx(Select, {\n                  options: genders,\n                  placeholder: \"G\\xE9nero\"\n                })\n              })\n            }), /*#__PURE__*/_jsx(Col, {\n              lg: 7,\n              xs: 22,\n              offset: 1,\n              children: /*#__PURE__*/_jsx(Form.Item, {\n                children: /*#__PURE__*/_jsx(DatePicker, {\n                  style: {\n                    width: \"100%\"\n                  },\n                  onChange: onChange,\n                  moment: \"YYYY-MM-DD\",\n                  placeholder: \"Fecha de nacimiento\"\n                })\n              })\n            }), /*#__PURE__*/_jsx(Col, {\n              lg: 7,\n              xs: 22,\n              offset: 1,\n              children: /*#__PURE__*/_jsx(Form.Item, {\n                rules: [ruleEmail, ruleRequired],\n                name: \"email\",\n                children: /*#__PURE__*/_jsx(Input, {\n                  type: \"email\",\n                  placeholder: \"E-mail\"\n                })\n              })\n            }), /*#__PURE__*/_jsx(Col, {\n              lg: 7,\n              xs: 22,\n              offset: 1,\n              children: /*#__PURE__*/_jsx(Form.Item, {\n                rules: [ruleRequired],\n                name: \"password\",\n                children: /*#__PURE__*/_jsx(Input.Password, {\n                  type: \"text\",\n                  placeholder: \"Contrase\\xF1a\"\n                })\n              })\n            }), /*#__PURE__*/_jsx(Col, {\n              lg: 15,\n              xs: 22,\n              offset: 1,\n              children: /*#__PURE__*/_jsx(Form.Item, {\n                name: \"groups\",\n                children: /*#__PURE__*/_jsx(Select, {\n                  mode: \"multiple\",\n                  options: groups,\n                  showArrow: true,\n                  style: {\n                    width: \"100%\"\n                  },\n                  placeholder: \"Permisos\"\n                })\n              })\n            }), /*#__PURE__*/_jsx(Col, {\n              lg: 22,\n              xs: 22,\n              offset: 1,\n              children: /*#__PURE__*/_jsx(Form.Item, {\n                labelAlign: \"right\",\n                children: /*#__PURE__*/_jsxs(Space, {\n                  style: {\n                    float: \"right\"\n                  },\n                  children: [/*#__PURE__*/_jsx(Button, {\n                    type: \"danger\",\n                    onClick: () => closeDialog(),\n                    children: \"Cancelar\"\n                  }), /*#__PURE__*/_jsx(Button, {\n                    type: \"primary\",\n                    htmlType: \"submit\",\n                    children: \"Guardar\"\n                  })]\n                })\n              })\n            })]\n          })\n        })\n      })\n    })\n  });\n};\n\nexport default FormPerson;","map":null,"metadata":{},"sourceType":"module"}