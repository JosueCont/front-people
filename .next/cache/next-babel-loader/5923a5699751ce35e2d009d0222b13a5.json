{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport React, { useEffect, useState, useRef } from \"react\";\nimport MainLayout from \"../../../../layout/MainLayout\";\nimport { Row, Col, Typography, Table, Breadcrumb, Button, Form, Input, Select, DatePicker, notification, Space, Switch } from \"antd\";\nimport { useRouter } from \"next/router\";\nimport axiosApi from \"../../../../libs/axiosApi\";\nimport cookie from \"js-cookie\";\nimport Axios from \"axios\";\nimport { API_URL } from \"../../../../config/config\";\nimport \"froala-editor/css/froala_style.min.css\";\nimport \"froala-editor/css/froala_editor.pkgd.min.css\"; // import { FroalaEditorComponent } from \"react-froala-wysiwyg\";\n\nimport dynamic from \"next/dynamic\";\nconst FroalaEditorComponent = dynamic(() => import(\"react-froala-wysiwyg\"), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak(\"react-froala-wysiwyg\")],\n    modules: [\"react-froala-wysiwyg\"]\n  }\n});\n\nconst Newrelease = () => {\n  let userToken = cookie.get(\"userToken\") ? cookie.get(\"userToken\") : null;\n  const [form] = Form.useForm();\n  const {\n    Title\n  } = Typography;\n  const {\n    TextArea\n  } = Input;\n  const route = useRouter();\n  const {\n    0: message,\n    1: setMessage\n  } = useState(null);\n  const {\n    0: sending,\n    1: setSending\n  } = useState(false);\n  const {\n    0: userId,\n    1: setUserId\n  } = useState(null);\n  const {\n    0: bussinessList,\n    1: setBusinessList\n  } = useState(null);\n  const {\n    0: personType,\n    1: setPersonType\n  } = useState([]);\n  const {\n    0: jobs,\n    1: setJobs\n  } = useState([]);\n  const {\n    0: departments,\n    1: setDepartments\n  } = useState([]);\n  let json = JSON.parse(userToken);\n  useEffect(() => {\n    if (json) {\n      setUserId(json.user_i);\n      /* getBussiness(); */\n\n      getValueSelects();\n    }\n  }, []);\n\n  const saveNotification = async values => {\n    values['khonnect_id'] = userId;\n    values['created_by'] = userId; //setSending(true);\n\n    try {\n      let response = await axiosApi.post(`/noticenter/notification/`, values);\n      let data = response.data;\n      notification[\"success\"]({\n        message: \"Notification Title\",\n        description: \"InformaciÃ³n enviada correctamente.\"\n      });\n      route.push(\"/comunication/releases\");\n      console.log(\"res\", response.data);\n    } catch (error) {\n      console.log(\"error\", error);\n    } finally {\n      setSending(false);\n    }\n  };\n\n  const getBussiness = async () => {\n    try {\n      let response = await axiosApi.get(`/business/node/`);\n      let data = response.data.results;\n      console.log(\"data\", data);\n      let options = [];\n      data.map(item => {\n        options.push({\n          id: item.id,\n          name: item.name\n        });\n      });\n      console.log();\n      setBusinessList(options); //  notification['success']({\n      //           message: 'Notification Title',\n      //           description:\n      //             'This is the content of the notification. This is the content of the notification. This is the content of the notification.',\n      //         });\n      //         route.push('/comunication/releases');\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  };\n\n  const onCancel = () => {\n    route.push(\"/comunication/releases\");\n  };\n\n  const genders = [{\n    label: \"Maculino\",\n    value: 1\n  }, {\n    label: \"Femenino\",\n    value: 2\n  }, {\n    label: \"Otro\",\n    value: 3\n  }];\n  const typeMessage = [{\n    label: \"Noticias\",\n    value: \"Noticia\"\n  }, {\n    label: \"Aviso\",\n    value: \"Aviso\"\n  }]; /////GET DATA SELCTS\n\n  const getValueSelects = async id => {\n    /////PERSON TYPE\n    Axios.get(API_URL + `/person/person-type/`).then(response => {\n      if (response.status === 200) {\n        let typesPerson = response.data.results;\n        typesPerson = typesPerson.map(a => {\n          return {\n            label: a.name,\n            value: a.id\n          };\n        });\n        setPersonType(typesPerson);\n      }\n    }).catch(e => {\n      console.log(e);\n    }); /////Companies\n\n    try {\n      let response = await axiosApi.get(`/business/node/`);\n      let data = response.data.results;\n      console.log(\"data\", data);\n      let options = [];\n      data.map(item => {\n        options.push({\n          value: item.id,\n          label: item.name\n        });\n      });\n      setBusinessList(options);\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n\n    Axios.get(API_URL + `/business/department/`).then(response => {\n      if (response.status === 200) {\n        let dep = response.data.results;\n        dep = dep.map(a => {\n          return {\n            label: a.name,\n            value: a.id\n          };\n        });\n        setDepartments(dep);\n      }\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  const onChangecompany = value => {\n    console.log(value);\n  };\n\n  const onChangeDepartment = value => {\n    ////JOBS\n    form.setFieldsValue({\n      target_job: null\n    });\n    /* console.log(API_URL + `/business/department/${value}/job_for_department/`) */\n\n    Axios.get(API_URL + `/business/department/${value}/job_for_department/`).then(response => {\n      if (response.status === 200) {\n        let job = response.data;\n        job = job.map(a => {\n          return {\n            label: a.name,\n            value: a.id\n          };\n        });\n        setJobs(job);\n      } else {\n        setJobs([]);\n      }\n    }).catch(e => {\n      console.log(e);\n      setJobs([]);\n    });\n  };\n\n  return /*#__PURE__*/_jsxs(MainLayout, {\n    currentKey: \"4.1\",\n    children: [/*#__PURE__*/_jsxs(Breadcrumb, {\n      children: [/*#__PURE__*/_jsx(Breadcrumb.Item, {\n        children: \"Home\"\n      }), /*#__PURE__*/_jsx(Breadcrumb.Item, {\n        children: \"Comunicados\"\n      }), /*#__PURE__*/_jsx(Breadcrumb.Item, {\n        children: \"Nuevo\"\n      })]\n    }, \"Breadcrumb\"), /*#__PURE__*/_jsx(\"div\", {\n      className: \"container back-white\",\n      style: {\n        width: \"100%\"\n      },\n      children: /*#__PURE__*/_jsx(Row, {\n        justify: \"center\",\n        children: /*#__PURE__*/_jsx(Col, {\n          span: \"23\",\n          style: {\n            padding: \"20px 0 30px 0\"\n          },\n          children: /*#__PURE__*/_jsx(Form, {\n            form: form,\n            layout: \"horizontal\",\n            labelCol: {\n              xs: 24,\n              sm: 24,\n              md: 5\n            },\n            onFinish: saveNotification,\n            children: /*#__PURE__*/_jsxs(Row, {\n              children: [/*#__PURE__*/_jsx(Col, {\n                span: 24,\n                children: /*#__PURE__*/_jsx(Title, {\n                  level: 3,\n                  children: \"Datos Generales\"\n                }, \"dats_gnrl\")\n              }), /*#__PURE__*/_jsxs(Col, {\n                xs: 24,\n                sm: 24,\n                md: 13,\n                lg: 13,\n                xl: 13,\n                children: [/*#__PURE__*/_jsx(Form.Item, {\n                  name: \"category\",\n                  label: \"Categoria\",\n                  labelAlign: 'left',\n                  children: /*#__PURE__*/_jsx(Select, {\n                    style: {\n                      width: 250\n                    },\n                    options: typeMessage\n                  })\n                }), /*#__PURE__*/_jsx(Form.Item, {\n                  label: \"Titulo\",\n                  name: \"title\",\n                  labelAlign: 'left',\n                  children: /*#__PURE__*/_jsx(Input, {\n                    className: 'formItemPayment'\n                  })\n                }), /*#__PURE__*/_jsx(Form.Item, {\n                  name: \"message\",\n                  label: \"Mensaje\",\n                  labelAlign: \"left\",\n                  children: /*#__PURE__*/_jsx(FroalaEditorComponent, {\n                    tag: \"textarea\",\n                    model: message,\n                    onModelChange: setMessage\n                  }, \"message\")\n                })]\n              }), /*#__PURE__*/_jsx(Col, {\n                span: 24,\n                children: /*#__PURE__*/_jsx(Title, {\n                  level: 3,\n                  children: \"Segmentaci\\xF3n\"\n                }, \"segmentacion\")\n              }), /*#__PURE__*/_jsx(Col, {\n                xs: 24,\n                sm: 24,\n                md: 13,\n                lg: 13,\n                xl: 13,\n                children: /*#__PURE__*/_jsx(Form.Item, {\n                  name: \"send_to_all\",\n                  label: \"Enviar a todos\",\n                  labelAlign: \"left\",\n                  children: /*#__PURE__*/_jsx(Switch, {})\n                })\n              }), /*#__PURE__*/_jsx(Col, {\n                xs: 24,\n                sm: 24,\n                md: 13,\n                lg: 13,\n                xl: 13,\n                children: /*#__PURE__*/_jsxs(Row, {\n                  children: [/*#__PURE__*/_jsxs(Col, {\n                    xs: 24,\n                    sm: 24,\n                    md: 12,\n                    lg: 12,\n                    xl: 12,\n                    children: [/*#__PURE__*/_jsx(Form.Item, {\n                      name: \"company\",\n                      label: \"Empresa\",\n                      labelCol: {\n                        span: 10\n                      },\n                      children: /*#__PURE__*/_jsx(Select, {\n                        options: bussinessList,\n                        onChange: onChangecompany,\n                        placeholder: \"Empresa\"\n                      })\n                    }), /*#__PURE__*/_jsx(Form.Item, {\n                      name: \"departament\",\n                      label: \"Departamento\",\n                      labelCol: {\n                        span: 10\n                      },\n                      children: /*#__PURE__*/_jsx(Select, {\n                        options: departments,\n                        onChange: onChangeDepartment,\n                        placeholder: \"Departamento\"\n                      })\n                    }), /*#__PURE__*/_jsx(Form.Item, {\n                      name: \"target_job\",\n                      label: \"Puesto de trabajo\",\n                      labelCol: {\n                        span: 10\n                      },\n                      children: /*#__PURE__*/_jsx(Select, {\n                        options: jobs\n                      })\n                    })]\n                  }), /*#__PURE__*/_jsxs(Col, {\n                    xs: 24,\n                    sm: 24,\n                    md: 12,\n                    lg: 12,\n                    xl: 12,\n                    children: [/*#__PURE__*/_jsx(Form.Item, {\n                      name: \"target_person_type\",\n                      label: \"Tipo de persona\",\n                      labelCol: {\n                        span: 10\n                      },\n                      children: /*#__PURE__*/_jsx(Select, {\n                        options: personType\n                      })\n                    }), /*#__PURE__*/_jsx(Form.Item, {\n                      name: \"target_gender\",\n                      label: \"Genero\",\n                      labelCol: {\n                        span: 10\n                      },\n                      children: /*#__PURE__*/_jsx(Select, {\n                        options: genders\n                      })\n                    })]\n                  })]\n                })\n              }), /*#__PURE__*/_jsxs(Col, {\n                span: 24,\n                style: {\n                  textAlign: 'right'\n                },\n                children: [/*#__PURE__*/_jsx(Button, {\n                  onClick: () => onCancel(),\n                  disabled: sending,\n                  style: {\n                    padding: \"0 50px\",\n                    margin: \"0 10px\"\n                  },\n                  children: \"Cancelar\"\n                }, \"cancel\"), /*#__PURE__*/_jsx(Button, {\n                  htmlType: \"submit\",\n                  loading: sending,\n                  type: \"primary\",\n                  style: {\n                    padding: \"0 50px\",\n                    margin: \"0 10px\"\n                  },\n                  children: \"Enviar\"\n                }, \"save\")]\n              })]\n            })\n          })\n        })\n      })\n    })]\n  });\n};\n\nexport default Newrelease;","map":null,"metadata":{},"sourceType":"module"}