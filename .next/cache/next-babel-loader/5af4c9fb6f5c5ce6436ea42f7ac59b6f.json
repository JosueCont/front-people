{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { Form, Modal, message, Layout, Select, Upload, Button, Space } from \"antd\";\nimport TextArea from \"antd/lib/input/TextArea\";\nimport { useCallback, useEffect, useState, useRef } from \"react\";\nimport { UploadOutlined, CloudUploadOutlined, CloseCircleOutlined } from \"@ant-design/icons\";\nimport Axios from \"axios\";\nimport { API_URL } from \"../../config/config\";\n\nconst documentModal = props => {\n  const [form] = Form.useForm();\n  const {\n    0: file,\n    1: setFile\n  } = useState();\n  const {\n    0: disabled,\n    1: setDisabled\n  } = useState(true);\n  const {\n    0: documentType,\n    1: setDocumentType\n  } = useState([]);\n  const inputFileRef = useRef(null);\n  const {\n    0: fileName,\n    1: setfileName\n  } = useState(\"\");\n\n  const closeDialog = () => {\n    props.close(false);\n    form.resetFields();\n  };\n\n  useEffect(() => {\n    Axios.get(API_URL + \"/setup/document-type/\").then(response => {\n      let dt = response.data.results;\n      dt = dt.map(a => {\n        return {\n          label: a.name,\n          value: a.id\n        };\n      });\n      setDocumentType(dt);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n\n  const selectedFile = file => {\n    if (file.target.files.length > 0) {\n      setDisabled(false);\n      setFile(file.target.files[0]);\n      setfileName(file.target.files[0].name);\n    } else {\n      setDisabled(true);\n      setFile(null);\n      setfileName(null);\n    }\n  };\n\n  const onFinish = value => {\n    let data = new FormData();\n    data.append(\"document\", file);\n    data.append(\"person\", props.person);\n    data.append(\"document_type\", value.document_type);\n    data.append(\"description\", value.description);\n    uploadDocument(data);\n  };\n\n  const uploadDocument = data => {\n    Axios.post(API_URL + \"/person/document/\", data).then(response => {\n      message.success({\n        content: \"Cargado correctamente.\",\n        className: \"custom-class\"\n      });\n      closeDialog();\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  const deleteFileSelect = () => {\n    setFile(null);\n    setDisabled(true);\n    setfileName(null);\n  };\n\n  const ruleRequired = {\n    required: true,\n    message: \"Este campo es requerido\"\n  };\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/_jsx(Layout, {\n      children: /*#__PURE__*/_jsx(Modal, {\n        maskClosable: false,\n        title: \"Subir documemnto\",\n        centered: true,\n        visible: props.visible,\n        onCancel: () => closeDialog(),\n        footer: null,\n        children: /*#__PURE__*/_jsxs(Form, {\n          onFinish: onFinish,\n          form: form,\n          children: [/*#__PURE__*/_jsx(Form.Item, {\n            name: \"document_type\",\n            rules: [ruleRequired],\n            children: /*#__PURE__*/_jsx(Select, {\n              options: documentType,\n              placeholder: \"Tipo de documento\"\n            })\n          }), /*#__PURE__*/_jsxs(Form.Item, {\n            children: [/*#__PURE__*/_jsx(Button, {\n              onClick: () => {\n                inputFileRef.current.click();\n              },\n              icon: /*#__PURE__*/_jsx(UploadOutlined, {}),\n              children: \"Cargar documento\"\n            }), disabled ? \"\" : /*#__PURE__*/_jsxs(\"span\", {\n              style: {\n                marginLeft: 8,\n                border: \"1px blue solid\"\n              },\n              children: [fileName + \"  \", /*#__PURE__*/_jsx(CloseCircleOutlined, {\n                onClick: () => deleteFileSelect(),\n                style: {\n                  color: \"red\"\n                }\n              })]\n            }), /*#__PURE__*/_jsx(\"input\", {\n              ref: inputFileRef,\n              type: \"file\",\n              style: {\n                display: \"none\"\n              },\n              onChange: e => selectedFile(e)\n            })]\n          }), /*#__PURE__*/_jsx(Form.Item, {\n            name: \"description\",\n            rules: [ruleRequired],\n            children: /*#__PURE__*/_jsx(TextArea, {\n              type: \"text\",\n              placeholder: \"Descripci\\xF3n\"\n            })\n          }), /*#__PURE__*/_jsx(Form.Item, {\n            labelAlign: \"right\",\n            children: /*#__PURE__*/_jsxs(Space, {\n              style: {\n                float: \"right\"\n              },\n              children: [/*#__PURE__*/_jsx(Button, {\n                type: \"danger\",\n                onClick: () => closeDialog(),\n                children: \"Cancelar\"\n              }), /*#__PURE__*/_jsx(Button, {\n                disabled: disabled,\n                icon: /*#__PURE__*/_jsx(CloudUploadOutlined, {}),\n                type: \"primary\",\n                htmlType: \"submit\",\n                children: \"Subir\"\n              })]\n            })\n          })]\n        })\n      })\n    })\n  });\n};\n\nexport default documentModal;","map":null,"metadata":{},"sourceType":"module"}