{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useState, useEffect, forwardRef, useImperativeHandle } from \"react\";\nimport { Row, Col, Button, Typography, Form, Input, Modal, notification } from \"antd\";\nimport { injectIntl } from \"react-intl\";\nimport { FormattedMessage } from \"react-intl\";\nimport { useRouter } from \"next/router\";\nimport axiosApi from \"../../libs/axiosApi\";\nvar ModalCreateNotification = /*#__PURE__*/forwardRef(function (props, ref) {\n  var router = useRouter();\n  var Title = Typography.Title;\n\n  var _Form$useForm = Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0];\n  /* const [loading, setLoading] = useState(false); */\n\n\n  var _useState = useState(false),\n      visible = _useState[0],\n      setVisible = _useState[1];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  useImperativeHandle(ref, function () {\n    return {\n      getAlert: function getAlert() {\n        alert(\"getAlert from Child\");\n      },\n      showModal: function showModal() {\n        setVisible(true);\n      }\n    };\n  });\n\n  var handleOk = function handleOk(values) {\n    form.submit();\n  };\n\n  var onReset = function onReset() {\n    form.resetFields();\n  };\n\n  var submitForm = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values) {\n      var response, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              values[\"created_by\"] = \"d25d4447bbd5423bbf2d5603cf553b81\";\n              _context.prev = 1;\n              _context.next = 4;\n              return axiosApi.post(\"/noticenter/notification/\", values);\n\n            case 4:\n              response = _context.sent;\n              data = response.data;\n              onReset();\n              setVisible(false);\n              notification[\"success\"]({\n                message: \"Notification Title\",\n                description: \"This is the content of the notification. This is the content of the notification. This is the content of the notification.\"\n              });\n              props.reloadData();\n              _context.next = 15;\n              break;\n\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](1);\n              console.log(_context.t0);\n\n            case 15:\n              _context.prev = 15;\n              setLoading(false);\n              return _context.finish(15);\n\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 12, 15, 18]]);\n    }));\n\n    return function submitForm(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var handleCancel = function handleCancel() {\n    setVisible(false);\n    onReset();\n  };\n\n  return /*#__PURE__*/_jsx(Modal, {\n    visible: visible,\n    title: \"Title\",\n    footer: [/*#__PURE__*/_jsx(Button, {\n      onClick: handleCancel,\n      children: \"Return\"\n    }, \"back\"), /*#__PURE__*/_jsx(Button, {\n      loading: loading,\n      type: \"primary\",\n      onClick: handleOk,\n      children: \"Submit\"\n    }, \"submit\")],\n    children: /*#__PURE__*/_jsxs(Form, {\n      layout: \"vertical\",\n      form: form,\n      onFinish: submitForm,\n      children: [/*#__PURE__*/_jsx(Form.Item, {\n        label: \"Titulo\",\n        name: \"title\",\n        children: /*#__PURE__*/_jsx(Input, {\n          className: \"formItemPayment\"\n        })\n      }), /*#__PURE__*/_jsx(Form.Item, {\n        label: \"Mensaje\",\n        name: \"message\",\n        children: /*#__PURE__*/_jsx(Input.TextArea, {})\n      })]\n    })\n  });\n});\nexport default ModalCreateNotification;","map":null,"metadata":{},"sourceType":"module"}