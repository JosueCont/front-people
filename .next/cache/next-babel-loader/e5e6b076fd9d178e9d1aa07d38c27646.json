{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { Form, Input, Layout, Modal, DatePicker, Button, Space, Select, message } from \"antd\";\nimport Axios from \"axios\";\nimport { API_URL } from \"../../config/config\";\nimport { useState, useEffect } from \"react\";\n\nvar FormPerson = function FormPerson(props) {\n  var _Form$useForm = Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0];\n\n  var _useState = useState([]),\n      groups = _useState[0],\n      setGroups = _useState[1];\n\n  var _useState2 = useState([]),\n      personType = _useState2[0],\n      setPersonType = _useState2[1];\n\n  var _useState3 = useState([]),\n      jobs = _useState3[0],\n      setJobs = _useState3[1];\n\n  var _useState4 = useState(\"\"),\n      date = _useState4[0],\n      setDate = _useState4[1];\n\n  useEffect(function () {\n    var company_id = \"5f417a53c37f6275fb614104\";\n\n    if (company_id !== undefined) {\n      getValueSelects(company_id);\n    }\n  }, []);\n\n  var onFinish = function onFinish(value) {\n    if (date !== \"\") {\n      value.birth_date = date;\n    }\n\n    createPerson(value);\n  };\n\n  var getValueSelects = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(id) {\n      var headers;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              headers = {\n                \"client-id\": \"5f417a53c37f6275fb614104\",\n                \"Content-Type\": \"application/json\"\n              };\n              Axios.get(\"https://khonnect.hiumanlab.com/group/list/\", {\n                headers: headers\n              }).then(function (response) {\n                if (response.status === 200) {\n                  var group = response.data.data;\n                  group = group.map(function (a) {\n                    return {\n                      label: a.name,\n                      value: a.id\n                    };\n                  });\n                  setGroups(group);\n                }\n              })[\"catch\"](function (e) {\n                console.log(e);\n              });\n              Axios.get(API_URL + \"/person/person-type/\").then(function (response) {\n                if (response.status === 200) {\n                  var typesPerson = response.data.results;\n                  typesPerson = typesPerson.map(function (a) {\n                    return {\n                      label: a.name,\n                      value: a.id\n                    };\n                  });\n                  setPersonType(typesPerson);\n                }\n              })[\"catch\"](function (e) {\n                console.log(e);\n              });\n              Axios.get(API_URL + \"/person/job\").then(function (response) {\n                if (response.status === 200) {\n                  var job = response.data.results;\n                  job = job.map(function (a) {\n                    return {\n                      label: a.name,\n                      value: a.id\n                    };\n                  });\n                  setJobs(job);\n                }\n              })[\"catch\"](function (e) {\n                console.log(e);\n              });\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getValueSelects(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var createPerson = function createPerson(value) {\n    Axios.post(API_URL + \"/person/person/\", value).then(function (response) {\n      message.success(\"Agregado correctamente\");\n      form.resetFields();\n      props.close(false);\n    })[\"catch\"](function (response) {\n      message.error(\"Error al agregar, intente de nuevo\");\n    });\n  };\n\n  var genders = [{\n    label: \"Maculino\",\n    value: 1\n  }, {\n    label: \"Femenino\",\n    value: 2\n  }, {\n    label: \"Otro\",\n    value: 3\n  }];\n  var ruleEmail = {\n    type: \"email\",\n    message: \"Ingrese un correo electronico valido\"\n  };\n\n  function onChange(date, dateString) {\n    setDate(dateString);\n  }\n\n  var ruleRequired = {\n    required: true,\n    message: \"Este campo es requerido\"\n  };\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/_jsx(Layout, {\n      children: /*#__PURE__*/_jsx(Modal, {\n        maskClosable: false,\n        title: \"Alta de personas\",\n        centered: true,\n        visible: props.visible,\n        onOk: function onOk() {\n          return props.close(false);\n        },\n        onCancel: (function () {\n          return props.close(false);\n        }, form.resetFields()),\n        footer: null,\n        children: /*#__PURE__*/_jsxs(Form, {\n          onFinish: onFinish,\n          form: form,\n          initialValues: {\n            name: \"\",\n            flast_name: \"\",\n            mlast_name: \"\",\n            birth_date: \"\",\n            perms: [],\n            email: \"\",\n            password: \"\"\n          },\n          children: [/*#__PURE__*/_jsxs(Space, {\n            children: [/*#__PURE__*/_jsx(Form.Item, {\n              name: \"person_type\",\n              children: /*#__PURE__*/_jsx(Select, {\n                options: personType,\n                placeholder: \"Tipo de persona\"\n              })\n            }), /*#__PURE__*/_jsx(Form.Item, {\n              name: \"job\",\n              children: /*#__PURE__*/_jsx(Select, {\n                options: jobs,\n                placeholder: \"Puesto de trabajo\"\n              })\n            })]\n          }), /*#__PURE__*/_jsx(Form.Item, {\n            rules: [ruleRequired],\n            name: \"first_name\",\n            children: /*#__PURE__*/_jsx(Input, {\n              type: \"text\",\n              placeholder: \"Nombre\"\n            })\n          }), /*#__PURE__*/_jsx(Form.Item, {\n            rules: [ruleRequired],\n            name: \"flast_name\",\n            children: /*#__PURE__*/_jsx(Input, {\n              type: \"text\",\n              placeholder: \"Apellido paterno...\"\n            })\n          }), /*#__PURE__*/_jsx(Form.Item, {\n            name: \"mlast_name\",\n            children: /*#__PURE__*/_jsx(Input, {\n              type: \"text\",\n              placeholder: \"Apellido materno...\"\n            })\n          }), /*#__PURE__*/_jsxs(Space, {\n            children: [/*#__PURE__*/_jsx(Form.Item, {\n              name: \"gender\",\n              children: /*#__PURE__*/_jsx(Select, {\n                options: genders,\n                placeholder: \"G\\xE9nero\"\n              })\n            }), /*#__PURE__*/_jsx(Form.Item, {\n              children: /*#__PURE__*/_jsx(DatePicker, {\n                onChange: onChange,\n                moment: \"YYYY-MM-DD\",\n                placeholder: \"Fecha de nacimiento\"\n              })\n            })]\n          }), /*#__PURE__*/_jsx(Form.Item, {\n            rules: [ruleEmail, ruleRequired],\n            name: \"email\",\n            children: /*#__PURE__*/_jsx(Input, {\n              type: \"email\",\n              placeholder: \"E-mail\"\n            })\n          }), /*#__PURE__*/_jsx(Form.Item, {\n            rules: [ruleRequired],\n            name: \"password\",\n            children: /*#__PURE__*/_jsx(Input.Password, {\n              type: \"text\",\n              placeholder: \"Contrase\\xF1a\"\n            })\n          }), /*#__PURE__*/_jsx(Form.Item, {\n            name: \"groups\",\n            children: /*#__PURE__*/_jsx(Select, {\n              mode: \"multiple\",\n              options: groups,\n              showArrow: true,\n              style: {\n                width: \"100%\"\n              },\n              placeholder: \"Permisos...\"\n            })\n          }), /*#__PURE__*/_jsx(Form.Item, {\n            labelAlign: \"right\",\n            children: /*#__PURE__*/_jsxs(Space, {\n              style: {\n                \"float\": \"right\"\n              },\n              children: [/*#__PURE__*/_jsx(Button, {\n                type: \"danger\",\n                onClick: function onClick() {\n                  return props.close(false);\n                },\n                children: \"Cancelar\"\n              }), /*#__PURE__*/_jsx(Button, {\n                type: \"primary\",\n                htmlType: \"submit\",\n                children: \"Guardar\"\n              })]\n            })\n          })]\n        })\n      })\n    })\n  });\n};\n\nexport default FormPerson;","map":null,"metadata":{},"sourceType":"module"}