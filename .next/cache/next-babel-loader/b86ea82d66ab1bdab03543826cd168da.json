{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Layout, Breadcrumb, Tabs, Form, Input, Modal, Space, Row, Col, Spin, Card, Typography, Select, DatePicker, Button, Image, Switch, Collapse, message, Checkbox, Alert, Table, Upload } from \"antd\";\nimport HeaderCustom from \"../../components/Header\";\nimport Axios from \"axios\";\nimport { API_URL } from \"../../config/config\";\nimport { useEffect, useState } from \"react\";\nimport { WarningOutlined, EditOutlined, DeleteOutlined, ArrowLeftOutlined, InboxOutlined, UploadOutlined } from \"@ant-design/icons\";\nvar Content = Layout.Content;\nvar TabPane = Tabs.TabPane;\nimport { useRouter } from \"next/router\";\nimport Router from \"next/router\";\nvar Option = Select.Option;\nimport moment from \"moment\";\nimport TextArea from \"antd/lib/input/TextArea\";\nvar Panel = Collapse.Panel;\nvar Meta = Card.Meta;\nvar RangePicker = DatePicker.RangePicker;\nvar Dragger = Upload.Dragger;\n\nvar userDetailForm = function userDetailForm() {\n  var router = useRouter();\n  var Title = Typography.Title;\n\n  var _useState = useState(true),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var _useState2 = useState(true),\n      loadingTable = _useState2[0],\n      setLoadingTable = _useState2[1];\n\n  var _useState3 = useState(false),\n      modal = _useState3[0],\n      setModal = _useState3[1];\n\n  var _useState4 = useState(\"\"),\n      personFullName = _useState4[0],\n      setPersonFullName = _useState4[1];\n\n  var _useState5 = useState(false),\n      status = _useState5[0],\n      setStatus = _useState5[1];\n\n  var _useState6 = useState(\"\"),\n      photo = _useState6[0],\n      setPhoto = _useState6[1];\n\n  var _useState7 = useState(\"1\"),\n      numberPanle = _useState7[0],\n      setNumberPanel = _useState7[1];\n\n  var _useState8 = useState(\"\"),\n      idGeneralP = _useState8[0],\n      setIdGeneralP = _useState8[1];\n\n  var _useState9 = useState({}),\n      deleted = _useState9[0],\n      setDeleted = _useState9[1]; ////STATE BOLEAN SWITCH AND CHECKBOX\n\n\n  var _useState10 = useState(false),\n      currenlyStuding = _useState10[0],\n      setCurrenlyStuding = _useState10[1]; /////ID UPDATE\n\n\n  var _useState11 = useState(\"\"),\n      idBankAcc = _useState11[0],\n      setIdBankAcc = _useState11[1];\n\n  var _useState12 = useState(false),\n      upBankAcc = _useState12[0],\n      setUpBankAcc = _useState12[1];\n\n  var _useState13 = useState(\"\"),\n      idPhone = _useState13[0],\n      setIdPhone = _useState13[1];\n\n  var _useState14 = useState(false),\n      upPhone = _useState14[0],\n      setUpPhone = _useState14[1];\n\n  var _useState15 = useState(\"\"),\n      idContEm = _useState15[0],\n      setIdContEm = _useState15[1];\n\n  var _useState16 = useState(false),\n      upContEm = _useState16[0],\n      setUpContEm = _useState16[1];\n\n  var _useState17 = useState(\"\"),\n      idFamily = _useState17[0],\n      setIdFamily = _useState17[1];\n\n  var _useState18 = useState(false),\n      upFamily = _useState18[0],\n      setUpFamily = _useState18[1];\n\n  var _useState19 = useState(\"\"),\n      idTraining = _useState19[0],\n      setIdTraining = _useState19[1];\n\n  var _useState20 = useState(false),\n      upTraining = _useState20[0],\n      setUpTraining = _useState20[1];\n\n  var _useState21 = useState(\"\"),\n      idExperienceJob = _useState21[0],\n      setIdExperienceJob = _useState21[1];\n\n  var _useState22 = useState(false),\n      upExperienceJob = _useState22[0],\n      setUpExperienceJob = _useState22[1]; ////FORMS\n\n\n  var _Form$useForm = Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      formPerson = _Form$useForm2[0];\n\n  var _Form$useForm3 = Form.useForm(),\n      _Form$useForm4 = _slicedToArray(_Form$useForm3, 1),\n      formGeneralTab = _Form$useForm4[0];\n\n  var _Form$useForm5 = Form.useForm(),\n      _Form$useForm6 = _slicedToArray(_Form$useForm5, 1),\n      formPhone = _Form$useForm6[0];\n\n  var _Form$useForm7 = Form.useForm(),\n      _Form$useForm8 = _slicedToArray(_Form$useForm7, 1),\n      formFamily = _Form$useForm8[0];\n\n  var _Form$useForm9 = Form.useForm(),\n      _Form$useForm10 = _slicedToArray(_Form$useForm9, 1),\n      formContactEmergency = _Form$useForm10[0];\n\n  var _Form$useForm11 = Form.useForm(),\n      _Form$useForm12 = _slicedToArray(_Form$useForm11, 1),\n      formTraining = _Form$useForm12[0];\n\n  var _Form$useForm13 = Form.useForm(),\n      _Form$useForm14 = _slicedToArray(_Form$useForm13, 1),\n      formExperiencejob = _Form$useForm14[0];\n\n  var _Form$useForm15 = Form.useForm(),\n      _Form$useForm16 = _slicedToArray(_Form$useForm15, 1),\n      formBank = _Form$useForm16[0]; ////STATE SELECTS\n\n\n  var _useState23 = useState([]),\n      jobs = _useState23[0],\n      setJobs = _useState23[1];\n\n  var _useState24 = useState([]),\n      treatments = _useState24[0],\n      setTreatments = _useState24[1];\n\n  var _useState25 = useState([]),\n      personType = _useState25[0],\n      setPersonType = _useState25[1];\n\n  var _useState26 = useState([]),\n      groups = _useState26[0],\n      setGroups = _useState26[1];\n\n  var _useState27 = useState([]),\n      banks = _useState27[0],\n      setBanks = _useState27[1];\n\n  var _useState28 = useState([]),\n      relationship = _useState28[0],\n      setRelationship = _useState28[1];\n\n  var _useState29 = useState([]),\n      experienceType = _useState29[0],\n      setExperienceType = _useState29[1];\n\n  var _useState30 = useState([]),\n      reasonSeparation = _useState30[0],\n      setReasonSeparation = _useState30[1];\n\n  var _useState31 = useState([]),\n      laborRelationship = _useState31[0],\n      setLaborRelationship = _useState31[1]; ////STATE TABLES\n\n\n  var _useState32 = useState([]),\n      phones = _useState32[0],\n      setPhones = _useState32[1];\n\n  var _useState33 = useState([]),\n      family = _useState33[0],\n      setFamily = _useState33[1];\n\n  var _useState34 = useState([]),\n      contactEmergency = _useState34[0],\n      setContactEmergency = _useState34[1];\n\n  var _useState35 = useState([]),\n      training = _useState35[0],\n      setTraining = _useState35[1];\n\n  var _useState36 = useState([]),\n      experineceJob = _useState36[0],\n      setExperienceJob = _useState36[1];\n\n  var _useState37 = useState([]),\n      bankAccounts = _useState37[0],\n      setBankAccounts = _useState37[1]; /////STATE DATE\n\n\n  var _useState38 = useState(\"\"),\n      birthDate = _useState38[0],\n      setBirthDate = _useState38[1];\n\n  var _useState39 = useState(\"\"),\n      birthDateFam = _useState39[0],\n      setBirthDateFam = _useState39[1];\n\n  var _useState40 = useState(\"\"),\n      dateAdmission = _useState40[0],\n      setDateAdmission = _useState40[1];\n\n  var _useState41 = useState(\"\"),\n      dateTraining = _useState41[0],\n      setDateTraining = _useState41[1];\n\n  var _useState42 = useState(\"\"),\n      dateExpjob = _useState42[0],\n      setDateExpjob = _useState42[1]; /////STATE CHECKBOX\n\n\n  var _useState43 = useState(false),\n      checkedTravel = _useState43[0],\n      setCheckedTravel = _useState43[1];\n\n  var _useState44 = useState(false),\n      checkedResidence = _useState44[0],\n      setCheckedResidence = _useState44[1]; ////DEFAULT SELECT\n\n\n  var layout = {\n    labelCol: {\n      span: 5\n    },\n    wrapperCol: {\n      span: 10\n    }\n  };\n  var genders = [{\n    label: \"Maculino\",\n    value: 1\n  }, {\n    label: \"Femenino\",\n    value: 2\n  }, {\n    label: \"Otro\",\n    value: 3\n  }];\n  var civilStatus = [{\n    label: \"Soltero(a)\",\n    value: 1\n  }, {\n    label: \"Casado(a)\",\n    value: 2\n  }, {\n    label: \"Viudo(a)\",\n    value: 3\n  }];\n  var typePhones = [{\n    label: \"Alterno\",\n    value: \"1\"\n  }, {\n    label: \"Principal\",\n    value: \"2\"\n  }, {\n    label: \"Recados\",\n    value: \"3\"\n  }];\n  var typeLines = [{\n    label: \"Celular\",\n    value: \"1\"\n  }, {\n    label: \"Fijo\",\n    value: \"2\"\n  }]; ////CHANGE DATE\n\n  var onChangeBirthDate = function onChangeBirthDate(date, dateString) {\n    setBirthDate(dateString);\n  };\n\n  var onChangeDateAdmission = function onChangeDateAdmission(date, dateString) {\n    setDateAdmission(dateString);\n  };\n\n  var onChangeBDFamily = function onChangeBDFamily(date, dateString) {\n    setBirthDateFam(dateString);\n  };\n\n  var onChangeDateTrainig = function onChangeDateTrainig(date, dateString) {\n    setDateTraining(dateString);\n  };\n\n  var onChangeDExJ = function onChangeDExJ(date, dateString) {\n    setDateExpjob(dateString);\n  }; /////CHANGE CHECKBOX\n\n\n  var checkTravel = function checkTravel() {\n    console.log(checkedTravel);\n    checkTravel ? setCheckedTravel(false) : setCheckedTravel(true);\n    console.log(checkedTravel);\n  };\n\n  var checkResidence = function checkResidence() {\n    console.log(checkedResidence);\n    checkedResidence ? setCheckedResidence(false) : setCheckedResidence(true);\n    console.log(checkedResidence);\n  };\n\n  var changeCurreStud = function changeCurreStud() {\n    console.log(currenlyStuding);\n    currenlyStuding ? setCurrenlyStuding(false) : setCurrenlyStuding(true);\n    console.log(currenlyStuding);\n  }; ////LOAD PAGE\n\n\n  useEffect(function () {\n    getValueSelects();\n\n    if (router.query.id) {\n      ///GET PERSON\n      Axios.get(API_URL + \"/person/person/\".concat(router.query.id)).then(function (response) {\n        formPerson.setFieldsValue({\n          first_name: response.data.first_name,\n          flast_name: response.data.flast_name,\n          mlast_name: response.data.mlast_name,\n          gender: response.data.gender,\n          email: response.data.email,\n          curp: response.data.curp,\n          rfc: response.data.rfc,\n          imss: response.data.imss,\n          is_active: response.data.is_active,\n          photo: response.data.photo,\n          civil_status: response.data.civil_status\n        });\n        if (response.data.person_type) formPerson.setFieldsValue({\n          person_type: response.data.person_type.id\n        });\n        if (response.data.job) formPerson.setFieldsValue({\n          job: response.data.job.id\n        }); // if (response.data.date_of_admission)\n        //   formPerson.setFieldsValue({\n        //     date_of_admission: moment(response.data.date_of_admission),\n        //   });\n\n        if (response.data.birth_date) formPerson.setFieldsValue({\n          birth_date: moment(response.data.birth_date)\n        });\n        setBirthDate(response.data.birth_date);\n        setStatus(response.data.is_active);\n        if (response.data.photo) setPhoto(response.data.photo);else setPhoto(\"https://khorplus.s3.amazonaws.com/demo/people/person/images/photo-profile/1412021224859/placeholder-profile-sq.jpg\");\n        setLoading(false);\n        setPersonFullName(response.data.first_name + \" \" + response.data.flast_name + \" \" + response.data.mlast_name);\n      })[\"catch\"](function (e) {\n        console.log(e);\n        setLoading(false);\n      }); ///GET GENERAL PERSON\n\n      Axios.get(API_URL + \"/person/person/\".concat(router.query.id, \"/general_person/\")).then(function (response) {\n        formGeneralTab.setFieldsValue({\n          place_birth: response.data.place_birth,\n          nationality: response.data.nationality,\n          other_nationality: response.data.other_nationality,\n          availability_travel: response.data.availability_travel,\n          availability_change_residence: response.data.availability_change_residence,\n          allergies: response.data.allergies,\n          blood_type: response.data.blood_type\n        });\n        if (response.data.availability_travel) setCheckedTravel(response.data.availability_travel);\n        if (response.data.availability_change_residence) setCheckedResidence(response.data.availability_change_residence);\n        setIdGeneralP(response.data.id);\n        setLoading(false);\n      })[\"catch\"](function (e) {\n        console.log(e);\n        setLoading(false);\n      }); ///PHONE\n\n      Axios.get(API_URL + \"/person/person/\".concat(router.query.id, \"/phone_person/\")).then(function (response) {\n        setPhones(response.data);\n        setLoading(false);\n        setLoadingTable(false);\n      })[\"catch\"](function (e) {\n        console.log(e);\n        setLoading(false);\n        setLoadingTable(false);\n      }); ///FAMILY\n\n      Axios.get(API_URL + \"/person/person/\".concat(router.query.id, \"/family_person/\")).then(function (response) {\n        response.data.map(function (a) {\n          a.relation = a.relationship.name;\n          a.fullname = a.name + \" \" + a.flast_name + \" \" + a.mlast_name;\n        });\n        setFamily(response.data);\n        setLoading(false);\n        setLoadingTable(false);\n      })[\"catch\"](function (e) {\n        console.log(e);\n        setLoading(false);\n        setLoadingTable(false);\n      }); ///CONTACT EMERGENCY\n\n      Axios.get(API_URL + \"/person/person/\".concat(router.query.id, \"/contact_emergency_person/\")).then(function (response) {\n        setContactEmergency(response.data);\n        setLoading(false);\n        setLoadingTable(false);\n      })[\"catch\"](function (e) {\n        console.log(e);\n        setLoading(false);\n        setLoadingTable(false);\n      }); ///TRAINIG\n\n      Axios.get(API_URL + \"/person/person/\".concat(router.query.id, \"/training_person/\")).then(function (response) {\n        setTraining(response.data);\n        setLoading(false);\n        setLoadingTable(false);\n      })[\"catch\"](function (e) {\n        console.log(e);\n        setLoading(false);\n        setLoadingTable(false);\n      }); ///JOB EXPERIENCE\n\n      Axios.get(API_URL + \"/person/person/\".concat(router.query.id, \"/job_experience_person/\")).then(function (response) {\n        setExperienceJob(response.data);\n        setLoading(false);\n        setLoadingTable(false);\n      })[\"catch\"](function (e) {\n        console.log(e);\n        setLoading(false);\n        setLoadingTable(false);\n      }); ///GET BANK ACCOUNTS\n\n      Axios.get(API_URL + \"/person/person/\".concat(router.query.id, \"/bank_account_person/\")).then(function (response) {\n        setBankAccounts(response.data);\n        setLoading(false);\n        setLoadingTable(false);\n      })[\"catch\"](function (e) {\n        console.log(e);\n        setLoading(false);\n        setLoadingTable(false);\n      });\n    }\n  }, [router.query.id]); /////GET DATA SELCTS\n\n  var getValueSelects = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(id) {\n      var headers;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              headers = {\n                \"client-id\": \"5f417a53c37f6275fb614104\",\n                \"Content-Type\": \"application/json\"\n              }; ///GROUPS\n\n              Axios.get(\"https://khonnect.hiumanlab.com/group/list/\", {\n                headers: headers\n              }).then(function (response) {\n                if (response.status === 200) {\n                  var group = response.data.data;\n                  group = group.map(function (a) {\n                    return {\n                      label: a.name,\n                      value: a.id\n                    };\n                  });\n                  setGroups(group);\n                }\n              })[\"catch\"](function (e) {\n                console.log(e);\n              }); /////PERSON TYPE\n\n              Axios.get(API_URL + \"/person/person-type/\").then(function (response) {\n                if (response.status === 200) {\n                  var typesPerson = response.data.results;\n                  typesPerson = typesPerson.map(function (a) {\n                    return {\n                      label: a.name,\n                      value: a.id\n                    };\n                  });\n                  setPersonType(typesPerson);\n                }\n              })[\"catch\"](function (e) {\n                console.log(e);\n              }); /////JOB\n\n              Axios.get(API_URL + \"/person/job/\").then(function (response) {\n                if (response.status === 200) {\n                  var job = response.data.results;\n                  job = job.map(function (a) {\n                    return {\n                      label: a.name,\n                      value: a.id\n                    };\n                  });\n                  setJobs(job);\n                }\n              })[\"catch\"](function (e) {\n                console.log(e);\n              }); ////BANK\n\n              Axios.get(API_URL + \"/setup/banks/\").then(function (response) {\n                if (response.status === 200) {\n                  var bank = response.data.results;\n                  bank = bank.map(function (a) {\n                    return {\n                      label: a.name,\n                      value: a.id\n                    };\n                  });\n                  setBanks(bank);\n                }\n              })[\"catch\"](function (e) {\n                console.log(e);\n              }); ////RELATIONSHIP\n\n              Axios.get(API_URL + \"/setup/relationship/\").then(function (response) {\n                if (response.status === 200) {\n                  var relation = response.data.results;\n                  relation = relation.map(function (a) {\n                    return {\n                      label: a.name,\n                      value: a.id\n                    };\n                  });\n                  setRelationship(relation);\n                }\n              })[\"catch\"](function (e) {\n                console.log(e);\n              }); ////LABOR RELATIONSHIP\n\n              Axios.get(API_URL + \"/setup/labor-relationship/\").then(function (response) {\n                if (response.status === 200) {\n                  var relation = response.data.results;\n                  relation = relation.map(function (a) {\n                    return {\n                      label: a.name,\n                      value: a.id\n                    };\n                  });\n                  setLaborRelationship(relation);\n                }\n              })[\"catch\"](function (e) {\n                console.log(e);\n              }); ////RELATIONSHIP\n\n              Axios.get(API_URL + \"/setup/experience-type/\").then(function (response) {\n                if (response.status === 200) {\n                  var experinece = response.data.results;\n                  experinece = experinece.map(function (a) {\n                    return {\n                      label: a.name,\n                      value: a.id\n                    };\n                  });\n                  setExperienceType(experinece);\n                }\n              })[\"catch\"](function (e) {\n                console.log(e);\n              }); ////REASON SEPARATION\n\n              Axios.get(API_URL + \"/setup/reason-separation/\").then(function (response) {\n                if (response.status === 200) {\n                  var reason = response.data.results;\n                  reason = reason.map(function (a) {\n                    return {\n                      label: a.name,\n                      value: a.id\n                    };\n                  });\n                  setReasonSeparation(reason);\n                }\n              })[\"catch\"](function (e) {\n                console.log(e);\n              });\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getValueSelects(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }(); ////PERSON\n\n\n  var onFinishPerson = function onFinishPerson(value) {\n    value.birth_date = birthDate; // value.date_of_admission = admissionDate;\n\n    value.id = router.query.id;\n    updatePerson(value);\n  };\n\n  var updatePerson = function updatePerson(value) {\n    setLoading(true);\n    Axios.put(\"http://demo.localhost:8000/person/person/\".concat(router.query.id, \"/\"), value).then(function (response) {\n      formPerson.setFieldsValue({\n        first_name: response.data.first_name,\n        flast_name: response.data.flast_name,\n        mlast_name: response.data.mlast_name,\n        gender: response.data.gender,\n        email: response.data.email,\n        birth_date: moment(response.data.birth_date),\n        curp: response.data.curp,\n        rfc: response.data.rfc,\n        imss: response.data.imss,\n        is_active: response.data.is_active,\n        civil_status: response.data.civil_status,\n        date_of_admission: null\n      });\n      if (response.data.person_type) formPerson.setFieldsValue({\n        person_type: response.data.person_type.id\n      });\n      if (response.data.job) formPerson.setFieldsValue({\n        job: response.data.job.id\n      }); // if (response.data.date_of_admission)\n      //   formPerson.setFieldsValue({\n      //     date_of_admission: moment(response.data.date_of_admission),\n      //   });\n\n      if (response.data.birth_date) formPerson.setFieldsValue({\n        birth_date: moment(response.data.birth_date)\n      });\n      setBirthDate(response.data.birth_date);\n      setStatus(response.data.is_active);\n      if (response.data.photo) setPhoto(response.data.photo);\n      setLoading(false);\n      message.success({\n        content: \"Actualizado correctamente.\",\n        className: \"custom-class\"\n      });\n    })[\"catch\"](function (e) {\n      setLoading(false);\n      message.error(\"Error al actualizar, intente de nuevo.\");\n      console.log(e);\n    });\n  }; //////DATOS GENERALES\n\n\n  var formGeneralData = function formGeneralData(value) {\n    if (idGeneralP != \"\" && idGeneralP != undefined) {\n      value.availability_travel = checkedTravel;\n      value.availability_change_residence = checkedResidence;\n      updateGeneralData(value);\n    } else {\n      value.person = router.query.id;\n      value.availability_travel = checkedTravel;\n      value.availability_change_residence = checkedResidence;\n      saveGeneralData(value);\n    }\n  };\n\n  var saveGeneralData = function saveGeneralData(data) {\n    setLoading(true);\n    Axios.post(API_URL + \"/person/general-person/\", data).then(function (response) {\n      message.success({\n        content: \"Guardado correctamente.\",\n        className: \"custom-class\"\n      });\n      setLoading(false);\n    })[\"catch\"](function (error) {\n      setLoading(false);\n      console.log(error);\n    });\n  };\n\n  var updateGeneralData = function updateGeneralData(data) {\n    setLoading(true);\n    Axios.put(API_URL + \"/person/general-person/\".concat(idGeneralP, \"/\"), data).then(function (response) {\n      message.success({\n        content: \"Actualizado correctamente.\",\n        className: \"custom-class\"\n      });\n      setLoading(false);\n    })[\"catch\"](function (error) {\n      setLoading(false);\n      console.log(error);\n    });\n  }; /////TELEFONO\n\n\n  var getPhone = function getPhone() {\n    Axios.get(API_URL + \"/person/person/\".concat(router.query.id, \"/phone_person/\")).then(function (response) {\n      setPhones(response.data);\n      setLoading(false);\n      setTimeout(function () {\n        setLoadingTable(false);\n      }, 1000);\n    })[\"catch\"](function (e) {\n      console.log(e);\n      setLoading(false);\n      setLoadingTable(false);\n      setTimeout(function () {\n        setLoadingTable(false);\n      }, 1000);\n    });\n  };\n\n  var formFinishPhone = function formFinishPhone(value) {\n    if (upPhone) {\n      value.id = idPhone;\n      value.person = router.query.id;\n      updatePhone(value);\n    } else {\n      value.person = router.query.id;\n      savePhone(value);\n    }\n  };\n\n  var updateFormPhone = function updateFormPhone(item) {\n    formPhone.setFieldsValue({\n      country_code: item.country_code,\n      international_code: item.international_code,\n      line_type: item.line_type,\n      national_code: item.national_code,\n      phone: item.phone,\n      phone_type: item.phone_type\n    });\n    setIdPhone(item.id);\n    setUpPhone(true);\n  };\n\n  var savePhone = function savePhone(data) {\n    Axios.post(API_URL + \"/person/phone/\", data).then(function (response) {\n      message.success({\n        content: \"Guardado correctamente.\",\n        className: \"custom-class\"\n      });\n      setLoading(false);\n      getPhone();\n      formPhone.resetFields();\n    })[\"catch\"](function (error) {\n      console.log(error);\n      setLoading(false);\n    });\n  };\n\n  var updatePhone = function updatePhone(data) {\n    setLoading(true);\n    setLoadingTable(true);\n    Axios.put(API_URL + \"/person/phone/\".concat(data.id, \"/\"), data).then(function (response) {\n      message.success({\n        content: \"Actualizado correctamente.\",\n        className: \"custom-class\"\n      });\n      setLoading(false);\n      setUpPhone(false);\n      setIdPhone(null);\n      formPhone.resetFields();\n      getPhone();\n      setTimeout(function () {\n        setLoadingTable(false);\n      }, 1000);\n    })[\"catch\"](function (error) {\n      setLoading(false);\n      console.log(error);\n      setTimeout(function () {\n        setLoadingTable(false);\n      }, 1000);\n    });\n  };\n\n  var deletePhone = function deletePhone(data) {\n    setLoadingTable(true);\n    Axios[\"delete\"](API_URL + \"/person/phone/\".concat(data, \"/\")).then(function (response) {\n      message.success({\n        content: \"Eliminado con exito.\",\n        className: \"custom-class\"\n      });\n      setLoading(false);\n      showModal();\n      getPhone();\n      setTimeout(function () {\n        setLoadingTable(false);\n      }, 1000);\n    })[\"catch\"](function (error) {\n      setLoading(false);\n      console.log(error);\n      setTimeout(function () {\n        setLoadingTable(false);\n      }, 1000);\n    });\n  };\n\n  var colPhone = [{\n    title: \"Codigo de pais\",\n    dataIndex: \"national_code\"\n  }, {\n    title: \"Numero\",\n    dataIndex: \"phone\"\n  }, {\n    title: \"Opciones\",\n    render: function render(item) {\n      return /*#__PURE__*/_jsx(\"div\", {\n        children: /*#__PURE__*/_jsxs(Row, {\n          gutter: 16,\n          children: [/*#__PURE__*/_jsx(Col, {\n            className: \"gutter-row\",\n            span: 6,\n            children: /*#__PURE__*/_jsx(EditOutlined, {\n              onClick: function onClick() {\n                return updateFormPhone(item);\n              }\n            })\n          }), /*#__PURE__*/_jsx(Col, {\n            className: \"gutter-row\",\n            span: 6,\n            children: /*#__PURE__*/_jsx(DeleteOutlined, {\n              onClick: function onClick() {\n                setDeleteRegister({\n                  id: item.id,\n                  api: \"deletePhone\"\n                });\n              }\n            })\n          })]\n        })\n      });\n    }\n  }]; /////FAMILIA\n\n  var getFamily = function getFamily() {\n    Axios.get(API_URL + \"/person/person/\".concat(router.query.id, \"/family_person/\")).then(function (response) {\n      response.data.map(function (a) {\n        a.relation = a.relationship.name;\n        a.fullname = a.name + \" \" + a.flast_name + \" \" + a.mlast_name;\n      });\n      setFamily(response.data);\n      setLoading(false);\n      setTimeout(function () {\n        setLoadingTable(false);\n      }, 1000);\n    })[\"catch\"](function (e) {\n      console.log(e);\n      setLoading(false);\n      setTimeout(function () {\n        setLoadingTable(false);\n      }, 1000);\n    });\n  };\n\n  var formFinishFamily = function formFinishFamily(value) {\n    if (upFamily) {\n      value.person = router.query.id;\n      value.id = idFamily;\n      value.birth_date = birthDateFam;\n      updateFamily(value);\n    } else {\n      value.person = router.query.id;\n      value.birth_date = birthDateFam;\n      saveFamily(value);\n    }\n  };\n\n  var updateFormFamily = function updateFormFamily(item) {\n    formFamily.setFieldsValue({\n      relationship: item.relationship.id,\n      name: item.name,\n      flast_name: item.flast_name,\n      mlast_name: item.mlast_name,\n      gender: item.gender,\n      life: item.life,\n      benefit: item.benefit,\n      place_birth: item.place_birth,\n      nationality: item.nationality,\n      other_nationality: item.other_nationality\n    });\n    if (item.birth_date) formFamily.setFieldsValue({\n      birth_date: moment(item.birth_date)\n    });\n    if (item.job) formFamily.setFieldsValue({\n      job: item.job.id\n    });\n    setIdFamily(item.id);\n    setUpFamily(true);\n  };\n\n  var saveFamily = function saveFamily(data) {\n    setLoading(true);\n    Axios.post(API_URL + \"/person/family/\", data).then(function (response) {\n      message.success({\n        content: \"Guardado correctamente.\",\n        className: \"custom-class\"\n      });\n      setLoading(false);\n      getFamily();\n      formFamily.resetFields();\n    })[\"catch\"](function (error) {\n      setLoading(false);\n      console.log(error);\n    });\n  };\n\n  var updateFamily = function updateFamily(data) {\n    setLoading(true);\n    setLoadingTable(true);\n    Axios.put(API_URL + \"/person/family/\".concat(data.id, \"/\"), data).then(function (response) {\n      message.success({\n        content: \"Actualizado correctamente.\",\n        className: \"custom-class\"\n      });\n      setLoading(false);\n      setUpFamily(false);\n      setIdFamily(null);\n      formFamily.resetFields();\n      getFamily();\n      setTimeout(function () {\n        setLoadingTable(false);\n      }, 1000);\n    })[\"catch\"](function (error) {\n      setLoading(false);\n      console.log(error);\n      setTimeout(function () {\n        setLoadingTable(false);\n      }, 1000);\n    });\n  };\n\n  var deleteFamily = function deleteFamily(data) {\n    setLoadingTable(true);\n    Axios[\"delete\"](API_URL + \"/person/family/\".concat(data, \"/\")).then(function (response) {\n      message.success({\n        content: \"Eliminado con exito.\",\n        className: \"custom-class\"\n      });\n      setLoading(false);\n      showModal();\n      getFamily();\n      setTimeout(function () {\n        setLoadingTable(false);\n      }, 1000);\n    })[\"catch\"](function (error) {\n      setLoading(false);\n      console.log(error);\n      setTimeout(function () {\n        setLoadingTable(false);\n      }, 1000);\n    });\n  };\n\n  var colFamily = [{\n    title: \"Nombre\",\n    dataIndex: \"fullname\"\n  }, {\n    title: \"Parentesco\",\n    dataIndex: \"relation\"\n  }, {\n    title: \"Beneficio\",\n    dataIndex: \"benefit\"\n  }, {\n    title: \"Opciones\",\n    render: function render(item) {\n      return /*#__PURE__*/_jsx(\"div\", {\n        children: /*#__PURE__*/_jsxs(Row, {\n          gutter: 16,\n          children: [/*#__PURE__*/_jsx(Col, {\n            className: \"gutter-row\",\n            span: 6,\n            children: /*#__PURE__*/_jsx(EditOutlined, {\n              onClick: function onClick() {\n                return updateFormFamily(item);\n              }\n            })\n          }), /*#__PURE__*/_jsx(Col, {\n            className: \"gutter-row\",\n            span: 6,\n            children: /*#__PURE__*/_jsx(DeleteOutlined, {\n              onClick: function onClick() {\n                setDeleteRegister({\n                  id: item.id,\n                  api: \"deleteFamily\"\n                });\n              }\n            })\n          })]\n        })\n      });\n    }\n  }]; /////CONTACTO DE EMERGENCIA\n\n  var getContactEmergency = function getContactEmergency() {\n    Axios.get(API_URL + \"/person/person/\".concat(router.query.id, \"/contact_emergency_person/\")).then(function (response) {\n      setContactEmergency(response.data);\n      setLoading(false);\n      setTimeout(function () {\n        setLoadingTable(false);\n      }, 1000);\n    })[\"catch\"](function (e) {\n      console.log(e);\n      setLoading(false);\n      setTimeout(function () {\n        setLoadingTable(false);\n      }, 1000);\n    });\n  };\n\n  var formFinishContactE = function formFinishContactE(value) {\n    if (upContEm) {\n      value.id = idContEm;\n      updateContEm(value);\n    } else {\n      value.person = router.query.id;\n      saveContactE(value);\n    }\n  };\n\n  var updateFormContEm = function updateFormContEm(item) {\n    formContactEmergency.setFieldsValue({\n      relationship: item.relationship.id,\n      address: item.address,\n      fullname: item.fullname,\n      phone_one: item.phone_one,\n      phone_two: item.phone_two\n    });\n    setIdContEm(item.id);\n    setUpContEm(true);\n  };\n\n  var saveContactE = function saveContactE(data) {\n    Axios.post(API_URL + \"/person/contact-emergency/\", data).then(function (response) {\n      message.success({\n        content: \"Guardado correctamente.\",\n        className: \"custom-class\"\n      });\n      setLoading(false);\n      getContactEmergency;\n      formContactEmergency.resetFields();\n    })[\"catch\"](function (error) {\n      setLoading(false);\n      console.log(error);\n    });\n  };\n\n  var updateContEm = function updateContEm(data) {\n    setLoading(true);\n    setLoadingTable(true);\n    Axios.put(API_URL + \"/person/contact-emergency/\".concat(data.id, \"/\"), data).then(function (response) {\n      message.success({\n        content: \"Actualizado correctamente.\",\n        className: \"custom-class\"\n      });\n      setLoading(false);\n      setUpContEm(false);\n      setIdContEm(null);\n      getContactEmergency();\n      formContactEmergency.resetFields();\n      setTimeout(function () {\n        setLoadingTable(false);\n      }, 1000);\n    })[\"catch\"](function (error) {\n      setLoading(false);\n      console.log(error);\n      setTimeout(function () {\n        setLoadingTable(false);\n      }, 1000);\n    });\n  };\n\n  var deleteContEm = function deleteContEm(data) {\n    setLoading(true);\n    setLoadingTable(true);\n    Axios[\"delete\"](API_URL + \"/person/contact-emergency/\".concat(data, \"/\")).then(function (response) {\n      message.success({\n        content: \"Eliminado correctamente.\",\n        className: \"custom-class\"\n      });\n      setLoading(false);\n      getContactEmergency;\n      setTimeout(function () {\n        setLoadingTable(false);\n      }, 1000);\n    })[\"catch\"](function (error) {\n      setLoading(false);\n      console.log(error);\n      setTimeout(function () {\n        setLoadingTable(false);\n      }, 1000);\n    });\n  };\n\n  var colContact = [{\n    title: \"Nombre\",\n    dataIndex: \"fullname\"\n  }, {\n    title: \"Telefono 1\",\n    dataIndex: \"phone_one\"\n  }, {\n    title: \"Telefono 2\",\n    dataIndex: \"phone_two\"\n  }, {\n    title: \"Dirección\",\n    dataIndex: \"address\"\n  }, {\n    title: \"Opciones\",\n    render: function render(item) {\n      return /*#__PURE__*/_jsx(\"div\", {\n        children: /*#__PURE__*/_jsxs(Row, {\n          gutter: 16,\n          children: [/*#__PURE__*/_jsx(Col, {\n            className: \"gutter-row\",\n            span: 6,\n            children: /*#__PURE__*/_jsx(EditOutlined, {\n              onClick: function onClick() {\n                return updateFormContEm(item);\n              }\n            })\n          }), /*#__PURE__*/_jsx(Col, {\n            className: \"gutter-row\",\n            span: 6,\n            children: /*#__PURE__*/_jsx(DeleteOutlined, {\n              onClick: function onClick() {\n                setDeleteRegister({\n                  id: item.id,\n                  api: \"deleteContEm\"\n                });\n              }\n            })\n          })]\n        })\n      });\n    }\n  }]; /////FORMACION Y HABILIDADES\n\n  var getTraining = function getTraining() {\n    setLoadingTable(true);\n    Axios.get(API_URL + \"/person/person/\".concat(router.query.id, \"/training_person/\")).then(function (response) {\n      setTraining(response.data);\n      setLoading(false);\n      setTimeout(function () {\n        setLoadingTable(false);\n      }, 1000);\n    })[\"catch\"](function (e) {\n      console.log(e);\n      setLoading(false);\n      setTimeout(function () {\n        setLoadingTable(false);\n      }, 1000);\n    });\n  };\n\n  var formFinishTraining = function formFinishTraining(value) {\n    if (upTraining) {} else {\n      value.since = dateTraining[0];\n      value.until = dateTraining[1];\n      value.currently_studing = currenlyStuding;\n      value.person = router.query.id;\n      saveTraining(value);\n    }\n  };\n\n  var saveTraining = function saveTraining(data) {\n    setLoading(true);\n    Axios.post(API_URL + \"/person/training/\", data).then(function (response) {\n      message.success({\n        content: \"Guardado correctamente.\",\n        className: \"custom-class\"\n      });\n      setLoading(false);\n      getTraining();\n      formTraining.resetFields();\n      setTimeout(function () {\n        setLoadingTable(false);\n      }, 1000);\n    })[\"catch\"](function (error) {\n      setLoading(false);\n      console.log(error);\n      setTimeout(function () {\n        setLoadingTable(false);\n      }, 1000);\n    });\n  };\n\n  var colTraining = [{\n    title: \"Escuela\",\n    dataIndex: \"school\"\n  }, {\n    title: \"Fecha inicio\",\n    dataIndex: \"since\"\n  }, {\n    title: \"Fecha fin\",\n    dataIndex: \"until\"\n  }, {\n    title: \"Documento\",\n    dataIndex: \"accreditation_document\"\n  }]; /////EPERIENCIA LABORAL\n\n  var getJobExperience = function getJobExperience() {\n    Axios.get(API_URL + \"/person/person/\".concat(router.query.id, \"/job_experience_person/\")).then(function (response) {\n      setExperienceJob(response.data);\n      setLoading(false);\n    })[\"catch\"](function (e) {\n      console.log(e);\n      setLoading(false);\n    });\n  };\n\n  var formFinishJobExp = function formFinishJobExp(value) {\n    if (upExperienceJob) {} else {\n      value.person = router.query.id;\n      value.since = dateExpjob[0];\n      value.until = dateExpjob[1];\n      console.log(\"EXPERIENCE JOB-->>> \", value);\n      saveJobExp(value);\n    }\n  };\n\n  var saveJobExp = function saveJobExp(data) {\n    setLoading(true);\n    Axios.post(API_URL + \"/person/experience-job/\", data).then(function (response) {\n      message.success({\n        content: \"Guardado correctamente.\",\n        className: \"custom-class\"\n      });\n      setLoading(false);\n      formExperiencejob.resetFields();\n      getJobExperience;\n    })[\"catch\"](function (error) {\n      setLoading(false);\n      console.log(error);\n    });\n  };\n\n  var colExpJob = [{\n    title: \"Empresa\",\n    dataIndex: \"company\"\n  }, {\n    title: \"Puesto\",\n    dataIndex: \"function\"\n  }]; /////CUENTAS BANCARIAS\n\n  var getBankAccount = function getBankAccount() {\n    setLoadingTable(true);\n    Axios.get(API_URL + \"/person/person/\".concat(router.query.id, \"/bank_account_person/\")).then(function (response) {\n      setBankAccounts(response.data);\n      setLoading(false);\n      setTimeout(function () {\n        setLoadingTable(false);\n      }, 1000);\n    })[\"catch\"](function (e) {\n      console.log(e);\n      setLoading(false);\n      setTimeout(function () {\n        setLoadingTable(false);\n      }, 1000);\n    });\n  };\n\n  var formBankAcc = function formBankAcc(value) {\n    if (upBankAcc) {\n      value.id = idBankAcc;\n      updateBankAcc(value);\n    } else {\n      value.person = router.query.id;\n      saveBankAcc(value);\n    }\n  };\n\n  var updateFormbankAcc = function updateFormbankAcc(item) {\n    formBank.setFieldsValue({\n      bank: item.bank.id,\n      account_number: item.account_number,\n      interbank_key: item.interbank_key\n    });\n    setIdBankAcc(item.id);\n    setUpBankAcc(true);\n  };\n\n  var saveBankAcc = function saveBankAcc(data) {\n    setLoading(true);\n    Axios.post(API_URL + \"/person/bank-account/\", data).then(function (response) {\n      message.success({\n        content: \"Guardado correctamente.\",\n        className: \"custom-class\"\n      });\n      setLoading(false);\n      getBankAccount();\n      formBank.resetFields();\n    })[\"catch\"](function (error) {\n      setLoading(false);\n      console.log(error);\n    }); /////DOCUMENTOS\n\n    var formDoc = function formDoc(value) {};\n\n    var saveDoc = function saveDoc(data) {};\n  };\n\n  var updateBankAcc = function updateBankAcc(data) {\n    setLoading(true);\n    setLoadingTable(true);\n    Axios.put(API_URL + \"/person/bank-account/\".concat(data.id, \"/\"), data).then(function (response) {\n      message.success({\n        content: \"Actualizado correctamente.\",\n        className: \"custom-class\"\n      });\n      console.log(\"UPDATE BANK-->>> \", response.data);\n      setLoading(false);\n      setUpBankAcc(false);\n      setIdBankAcc(null);\n      formBank.resetFields();\n      getBankAccount();\n      setTimeout(function () {\n        setLoadingTable(false);\n      }, 1000);\n    })[\"catch\"](function (error) {\n      setLoading(false);\n      console.log(error);\n      setTimeout(function () {\n        setLoadingTable(false);\n      }, 1000);\n    }); /////DOCUMENTOS\n\n    var formDoc = function formDoc(value) {};\n\n    var saveDoc = function saveDoc(data) {};\n  };\n\n  var deleteBankAcc = function deleteBankAcc(data) {\n    setLoadingTable(true);\n    Axios[\"delete\"](API_URL + \"/person/bank-account/\".concat(data, \"/\")).then(function (response) {\n      message.success({\n        content: \"Eliminado con exito.\",\n        className: \"custom-class\"\n      });\n      setLoading(false);\n      showModal();\n      getBankAccount();\n      setTimeout(function () {\n        setLoadingTable(false);\n      }, 1000);\n    })[\"catch\"](function (error) {\n      setLoading(false);\n      console.log(error);\n      setTimeout(function () {\n        setLoadingTable(false);\n      }, 1000);\n    });\n  };\n\n  var colBank = [{\n    title: \"Banco\",\n    dataIndex: \"name\",\n    key: \"id\"\n  }, {\n    title: \"Numero de cuenta\",\n    dataIndex: \"account_number\",\n    key: \"account_number\"\n  }, {\n    title: \"Clave interbancaria\",\n    dataIndex: \"interbank_key\",\n    key: \"interbank_key\"\n  }, {\n    title: \"Opciones\",\n    render: function render(item) {\n      return /*#__PURE__*/_jsx(\"div\", {\n        children: /*#__PURE__*/_jsxs(Row, {\n          gutter: 16,\n          children: [/*#__PURE__*/_jsx(Col, {\n            className: \"gutter-row\",\n            span: 6,\n            children: /*#__PURE__*/_jsx(EditOutlined, {\n              onClick: function onClick() {\n                return updateFormbankAcc(item);\n              }\n            })\n          }), /*#__PURE__*/_jsx(Col, {\n            className: \"gutter-row\",\n            span: 6,\n            children: /*#__PURE__*/_jsx(DeleteOutlined, {\n              onClick: function onClick() {\n                setDeleteRegister({\n                  id: item.id,\n                  api: \"deleteBankAcc\"\n                });\n              }\n            })\n          })]\n        })\n      });\n    }\n  }]; /////DELETE PERSON\n\n  var deletePerson = function deletePerson(data) {\n    Axios.post(API_URL + \"/person/person/delete_by_ids/\", {\n      persons_id: router.query.id\n    }).then(function (response) {\n      setLoading(false);\n      showModal();\n      Router.push(\"/home\");\n    })[\"catch\"](function (error) {\n      setLoading(false);\n      console.log(error);\n    });\n  }; /////DELETE REGISTER\n\n\n  var setDeleteRegister = function setDeleteRegister(props) {\n    setDeleted(props);\n    showModal();\n  };\n\n  var deleteRegister = function deleteRegister() {\n    if (deleted.api == \"deleteBankAcc\") deleteBankAcc(deleted.id);\n    if (deleted.api == \"deletePerson\") deletePerson();\n    if (deleted.api == \"deletePhone\") deletePhone(deleted.id);\n    if (deleted.api == \"deleteContEm\") deleteContEm(deleted.id);\n    if (deleted.api == \"deleteFamily\") deleteFamily(deleted.id);\n  }; //////SHOW MODAL DELETE\n\n\n  var showModal = function showModal() {\n    modal ? setModal(false) : setModal(true);\n  }; /////CONFIG DRAG\n\n\n  var props = {\n    name: \"file\",\n    multiple: true,\n    onChange: function onChange(info) {\n      var status = info.file.status;\n\n      if (status !== \"uploading\") {\n        console.log(\"Cargados-->> \", info.file, info.fileList);\n      }\n\n      if (status === \"done\") {\n        message.success(\"\".concat(info.file.name, \" file uploaded successfully.\"));\n      } else if (status === \"error\") {\n        message.error(\"\".concat(info.file.name, \" file upload failed.\"));\n      }\n    }\n  };\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/_jsxs(Layout, {\n      children: [/*#__PURE__*/_jsx(HeaderCustom, {}), /*#__PURE__*/_jsxs(Content, {\n        className: \"site-layout\",\n        style: {\n          padding: \"0 50px\",\n          marginTop: 64\n        },\n        children: [/*#__PURE__*/_jsxs(Breadcrumb, {\n          style: {\n            margin: \"16px 0\"\n          },\n          children: [/*#__PURE__*/_jsx(Breadcrumb.Item, {\n            children: \"Home\"\n          }), /*#__PURE__*/_jsx(Breadcrumb.Item, {\n            href: \"/home/\",\n            children: \"Person\"\n          }), /*#__PURE__*/_jsx(Breadcrumb.Item, {\n            children: \"Expediente de empleados\"\n          })]\n        }), /*#__PURE__*/_jsx(Spin, {\n          tip: \"Loading...\",\n          spinning: loading,\n          children: /*#__PURE__*/_jsxs(\"div\", {\n            className: \"site-layout-background\",\n            style: {\n              padding: 24,\n              minHeight: 380,\n              height: \"100%\"\n            },\n            children: [/*#__PURE__*/_jsx(Title, {\n              level: 3,\n              children: \"Informaci\\xF3n Personal\"\n            }), /*#__PURE__*/_jsx(Title, {\n              level: 4,\n              style: {\n                marginTop: 0\n              },\n              children: personFullName\n            }), /*#__PURE__*/_jsxs(Card, {\n              bordered: true,\n              children: [/*#__PURE__*/_jsxs(Form, {\n                onFinish: onFinishPerson,\n                layout: \"vertical\",\n                form: formPerson,\n                children: [/*#__PURE__*/_jsxs(Row, {\n                  children: [/*#__PURE__*/_jsx(Col, {\n                    span: 18,\n                    pull: 1,\n                    children: /*#__PURE__*/_jsxs(Row, {\n                      flex: true,\n                      children: [/*#__PURE__*/_jsx(Col, {\n                        span: 10,\n                        offset: 2,\n                        children: /*#__PURE__*/_jsx(Form.Item, {\n                          name: \"flast_name\",\n                          label: \"Apellido Paterno\",\n                          rules: [{\n                            message: \"Ingresa un apellido paterno\"\n                          }],\n                          children: /*#__PURE__*/_jsx(Input, {\n                            size: \"small\"\n                          })\n                        })\n                      }), /*#__PURE__*/_jsx(Col, {\n                        span: 10,\n                        offset: 2,\n                        children: /*#__PURE__*/_jsx(Form.Item, {\n                          name: \"mlast_name\",\n                          label: \"Apellido Materno\",\n                          rules: [{\n                            message: \"Ingresa un apellido paterno\"\n                          }],\n                          children: /*#__PURE__*/_jsx(Input, {\n                            size: \"small\"\n                          })\n                        })\n                      }), /*#__PURE__*/_jsx(Col, {\n                        span: 10,\n                        offset: 2,\n                        children: /*#__PURE__*/_jsx(Form.Item, {\n                          name: \"first_name\",\n                          label: \"Nombre(s)\",\n                          rules: [{\n                            message: \"Ingresa un nombre\"\n                          }],\n                          children: /*#__PURE__*/_jsx(Input, {\n                            size: \"small\"\n                          })\n                        })\n                      }), /*#__PURE__*/_jsx(Col, {\n                        span: 10,\n                        offset: 2,\n                        children: /*#__PURE__*/_jsx(Form.Item, {\n                          name: \"job\",\n                          label: \"Puesto\",\n                          children: /*#__PURE__*/_jsx(Select, {\n                            options: jobs,\n                            placeholder: \"Selecciona un puesto\",\n                            size: \"small\"\n                          })\n                        })\n                      }), /*#__PURE__*/_jsx(Col, {\n                        span: 10,\n                        offset: 2,\n                        children: /*#__PURE__*/_jsx(Form.Item, {\n                          name: \"node\",\n                          label: \"Unidad organizacional\",\n                          children: /*#__PURE__*/_jsx(Input, {\n                            size: \"small\"\n                          })\n                        })\n                      }), /*#__PURE__*/_jsx(Col, {\n                        span: 10,\n                        offset: 2,\n                        children: /*#__PURE__*/_jsx(Form.Item, {\n                          name: \"unit\",\n                          label: \"Reporta a \",\n                          children: /*#__PURE__*/_jsx(Input, {\n                            size: \"small\"\n                          })\n                        })\n                      })]\n                    })\n                  }), /*#__PURE__*/_jsxs(Col, {\n                    span: 5,\n                    children: [/*#__PURE__*/_jsx(Image, {\n                      width: 200,\n                      src: photo\n                    }), /*#__PURE__*/_jsxs(Row, {\n                      children: [/*#__PURE__*/_jsx(Form.Item, {\n                        name: \"date_of_admission\",\n                        children: /*#__PURE__*/_jsx(DatePicker, {\n                          onChange: onChangeDateAdmission,\n                          moment: \"YYYY-MM-DD\"\n                        })\n                      }), /*#__PURE__*/_jsx(Switch, {\n                        checked: status,\n                        checkedChildren: \"Activo\",\n                        unCheckedChildren: \"Inactivo\"\n                      })]\n                    })]\n                  })]\n                }), /*#__PURE__*/_jsx(Collapse, {\n                  children: /*#__PURE__*/_jsxs(Panel, {\n                    header: \"Informacion adicional\",\n                    children: [/*#__PURE__*/_jsx(Col, {\n                      span: 18,\n                      pull: 1,\n                      children: /*#__PURE__*/_jsxs(Row, {\n                        flex: true,\n                        children: [/*#__PURE__*/_jsx(Col, {\n                          span: 10,\n                          offset: 2,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"email\",\n                            label: \"Direcci\\xF3n de E-Mail\",\n                            rules: [{\n                              message: \"Ingresa un email\"\n                            }],\n                            children: /*#__PURE__*/_jsx(Input, {\n                              disabled: true\n                            })\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          span: 10,\n                          offset: 2,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"birth_date\",\n                            label: \"Fecha de nacimiento\",\n                            children: /*#__PURE__*/_jsx(DatePicker, {\n                              onChange: onChangeBirthDate,\n                              moment: \"YYYY-MM-DD\",\n                              placeholder: \"Fecha de nacimiento\"\n                            })\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          span: 10,\n                          offset: 2,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"civil_status\",\n                            label: \"Estado Civil\",\n                            children: /*#__PURE__*/_jsx(Select, {\n                              options: civilStatus,\n                              size: \"small\"\n                            })\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          span: 10,\n                          offset: 2,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"gender\",\n                            label: \"G\\xE9nero\",\n                            children: /*#__PURE__*/_jsx(Select, {\n                              options: genders\n                            })\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          span: 10,\n                          offset: 2,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"curp\",\n                            label: \"CURP\",\n                            children: /*#__PURE__*/_jsx(Input, {})\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          span: 10,\n                          offset: 2,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"rfc\",\n                            label: \"RFC\",\n                            children: /*#__PURE__*/_jsx(Input, {})\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          span: 10,\n                          offset: 2,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"imss\",\n                            label: \"IMSS\",\n                            children: /*#__PURE__*/_jsx(Input, {})\n                          })\n                        })]\n                      })\n                    }), /*#__PURE__*/_jsx(Row, {\n                      flex: true,\n                      children: /*#__PURE__*/_jsxs(Form.Item, {\n                        children: [/*#__PURE__*/_jsx(Button, {\n                          type: \"primary\",\n                          htmlType: \"submit\",\n                          children: \"Guardar\"\n                        }), /*#__PURE__*/_jsx(Button, {\n                          htmlType: \"button\",\n                          children: \"Regresar\"\n                        })]\n                      })\n                    })]\n                  })\n                })]\n              }), /*#__PURE__*/_jsxs(Collapse, {\n                accordion: true,\n                children: [/*#__PURE__*/_jsx(Panel, {\n                  header: \"Datos generales\",\n                  children: /*#__PURE__*/_jsxs(Form, {\n                    form: formGeneralTab,\n                    onFinish: formGeneralData,\n                    children: [/*#__PURE__*/_jsx(Col, {\n                      span: 18,\n                      pull: 1,\n                      children: /*#__PURE__*/_jsxs(Row, {\n                        flex: true,\n                        children: [/*#__PURE__*/_jsx(Col, {\n                          span: 10,\n                          offset: 2,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"place_birth\",\n                            label: \"Lugar de nacimiento\",\n                            children: /*#__PURE__*/_jsx(Input, {})\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          span: 10,\n                          offset: 2,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"nationality\",\n                            label: \"Nacionalidad\",\n                            children: /*#__PURE__*/_jsx(Input, {})\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          span: 10,\n                          offset: 2,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"other_nationality\",\n                            label: \"Otra nacionalidad\",\n                            children: /*#__PURE__*/_jsx(Input, {})\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          span: 10,\n                          offset: 2,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"availability_travel\",\n                            label: \"Disponibilidad para viajar\",\n                            children: /*#__PURE__*/_jsx(Checkbox, {\n                              onChange: checkTravel,\n                              checked: checkedTravel\n                            })\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          span: 10,\n                          offset: 2,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            label: \"Cambio de residencia\",\n                            children: /*#__PURE__*/_jsx(Checkbox, {\n                              onChange: checkResidence,\n                              checked: checkedResidence\n                            })\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          span: 10,\n                          offset: 2,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"allergies\",\n                            label: \"Alergias\",\n                            children: /*#__PURE__*/_jsx(Input, {})\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          span: 10,\n                          offset: 2,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"blood_type\",\n                            label: \"Tipo de sangre\",\n                            children: /*#__PURE__*/_jsx(Input, {})\n                          })\n                        })]\n                      })\n                    }), /*#__PURE__*/_jsx(Row, {\n                      flex: true,\n                      children: /*#__PURE__*/_jsx(Form.Item, {\n                        children: /*#__PURE__*/_jsx(Button, {\n                          type: \"primary\",\n                          htmlType: \"submit\",\n                          children: \"Guardar\"\n                        })\n                      })\n                    })]\n                  })\n                }), /*#__PURE__*/_jsxs(Panel, {\n                  header: \"Tel\\xE9fono\",\n                  children: [/*#__PURE__*/_jsxs(Form, {\n                    form: formPhone,\n                    onFinish: formFinishPhone,\n                    children: [/*#__PURE__*/_jsx(Col, {\n                      span: 18,\n                      pull: 1,\n                      children: /*#__PURE__*/_jsxs(Row, {\n                        flex: true,\n                        children: [/*#__PURE__*/_jsx(Col, {\n                          span: 10,\n                          offset: 2,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"phone_type\",\n                            label: \"Tipo de telefono\",\n                            children: /*#__PURE__*/_jsx(Select, {\n                              options: typePhones\n                            })\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          span: 10,\n                          offset: 2,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"line_type\",\n                            label: \"Tipo de linea\",\n                            children: /*#__PURE__*/_jsx(Select, {\n                              options: typeLines\n                            })\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          span: 10,\n                          offset: 2,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"international_code\",\n                            label: \"Codigo internacional\",\n                            children: /*#__PURE__*/_jsx(Input, {})\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          span: 10,\n                          offset: 2,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"national_code\",\n                            label: \"Codigo de pais\",\n                            children: /*#__PURE__*/_jsx(Input, {})\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          span: 10,\n                          offset: 2,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"country_code\",\n                            label: \"Codigo de ciudad\",\n                            children: /*#__PURE__*/_jsx(Input, {})\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          span: 10,\n                          offset: 2,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"phone\",\n                            label: \"Numero telefonico\",\n                            children: /*#__PURE__*/_jsx(Input, {})\n                          })\n                        })]\n                      })\n                    }), /*#__PURE__*/_jsx(Row, {\n                      flex: true,\n                      children: /*#__PURE__*/_jsx(Form.Item, {\n                        children: /*#__PURE__*/_jsx(Button, {\n                          type: \"primary\",\n                          htmlType: \"submit\",\n                          children: \"Guardar\"\n                        })\n                      })\n                    })]\n                  }), /*#__PURE__*/_jsx(Spin, {\n                    tip: \"Loading...\",\n                    spinning: loadingTable,\n                    children: /*#__PURE__*/_jsx(Table, {\n                      columns: colPhone,\n                      dataSource: phones\n                    })\n                  })]\n                }), /*#__PURE__*/_jsxs(Panel, {\n                  header: \"Familia\",\n                  children: [/*#__PURE__*/_jsxs(Form, {\n                    form: formFamily,\n                    onFinish: formFinishFamily,\n                    children: [/*#__PURE__*/_jsx(Col, {\n                      span: 18,\n                      pull: 1,\n                      children: /*#__PURE__*/_jsxs(Row, {\n                        flex: true,\n                        children: [/*#__PURE__*/_jsx(Col, {\n                          span: 10,\n                          offset: 2,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"relationship\",\n                            label: \"Parentesco\",\n                            children: /*#__PURE__*/_jsx(Select, {\n                              options: relationship\n                            })\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          span: 10,\n                          offset: 2,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"job\",\n                            label: \"Puesto de trabajo\",\n                            children: /*#__PURE__*/_jsx(Select, {\n                              options: jobs\n                            })\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          span: 10,\n                          offset: 2,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"name\",\n                            label: \"Nombre\",\n                            children: /*#__PURE__*/_jsx(Input, {})\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          span: 10,\n                          offset: 2,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"flast_name\",\n                            label: \"Apellido paterno\",\n                            children: /*#__PURE__*/_jsx(Input, {})\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          span: 10,\n                          offset: 2,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"mlast_name\",\n                            label: \"Apellido materno\",\n                            children: /*#__PURE__*/_jsx(Input, {})\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          span: 10,\n                          offset: 2,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"gender\",\n                            label: \"Genero\",\n                            children: /*#__PURE__*/_jsx(Select, {\n                              options: genders\n                            })\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          span: 10,\n                          offset: 2,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"liffe\",\n                            label: \"\\xBFVive?\",\n                            children: /*#__PURE__*/_jsx(Checkbox, {})\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          span: 10,\n                          offset: 2,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"birth_date\",\n                            label: \"Fecha de nacimiento\",\n                            children: /*#__PURE__*/_jsx(DatePicker, {\n                              onChange: onChangeBDFamily,\n                              moment: \"YYYY-MM-DD\"\n                            })\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          span: 10,\n                          offset: 2,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"place_birth\",\n                            label: \"Lugar de nacimiento\",\n                            children: /*#__PURE__*/_jsx(Input, {})\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          span: 10,\n                          offset: 2,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"nationality\",\n                            label: \"Nacionalidad\",\n                            children: /*#__PURE__*/_jsx(Input, {})\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          span: 10,\n                          offset: 2,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"other_nationality\",\n                            label: \"Otra nacionalidad\",\n                            children: /*#__PURE__*/_jsx(Input, {})\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          span: 10,\n                          offset: 2,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"benefit\",\n                            label: \"% Beneficio\",\n                            children: /*#__PURE__*/_jsx(Input, {})\n                          })\n                        })]\n                      })\n                    }), /*#__PURE__*/_jsx(Row, {\n                      flex: true,\n                      children: /*#__PURE__*/_jsx(Form.Item, {\n                        children: /*#__PURE__*/_jsx(Button, {\n                          type: \"primary\",\n                          htmlType: \"submit\",\n                          children: \"Guardar\"\n                        })\n                      })\n                    })]\n                  }), /*#__PURE__*/_jsx(Spin, {\n                    tip: \"Loading...\",\n                    spinning: loadingTable,\n                    children: /*#__PURE__*/_jsx(Table, {\n                      columns: colFamily,\n                      dataSource: family\n                    })\n                  })]\n                }), /*#__PURE__*/_jsxs(Panel, {\n                  header: \"Contactos de Emergencia\",\n                  children: [/*#__PURE__*/_jsxs(Form, {\n                    form: formContactEmergency,\n                    onFinish: formFinishContactE,\n                    children: [/*#__PURE__*/_jsx(Col, {\n                      span: 18,\n                      pull: 1,\n                      children: /*#__PURE__*/_jsxs(Row, {\n                        flex: true,\n                        children: [/*#__PURE__*/_jsx(Col, {\n                          span: 10,\n                          offset: 2,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"relationship\",\n                            label: \"Parentesco\",\n                            children: /*#__PURE__*/_jsx(Select, {\n                              options: relationship\n                            })\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          span: 10,\n                          offset: 2,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"fullname\",\n                            label: \"Nombre completo\",\n                            children: /*#__PURE__*/_jsx(Input, {})\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          span: 10,\n                          offset: 2,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"phone_one\",\n                            label: \"Telefono 1\",\n                            children: /*#__PURE__*/_jsx(Input, {})\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          span: 10,\n                          offset: 2,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"phone_two\",\n                            label: \"Telefono 2\",\n                            children: /*#__PURE__*/_jsx(Input, {})\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          span: 20,\n                          offset: 2,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"address\",\n                            label: \"Direcci\\xF3n\",\n                            children: /*#__PURE__*/_jsx(Input, {})\n                          })\n                        })]\n                      })\n                    }), /*#__PURE__*/_jsx(Row, {\n                      flex: true,\n                      children: /*#__PURE__*/_jsx(Form.Item, {\n                        children: /*#__PURE__*/_jsx(Button, {\n                          type: \"primary\",\n                          htmlType: \"submit\",\n                          children: \"Guardar\"\n                        })\n                      })\n                    })]\n                  }), /*#__PURE__*/_jsx(Spin, {\n                    tip: \"Loading...\",\n                    spinning: loadingTable,\n                    children: /*#__PURE__*/_jsx(Table, {\n                      columns: colContact,\n                      dataSource: contactEmergency\n                    })\n                  })]\n                }), /*#__PURE__*/_jsxs(Panel, {\n                  header: \"Formaci\\xF3n/Habilidades\",\n                  children: [/*#__PURE__*/_jsxs(Form, {\n                    form: formTraining,\n                    onFinish: formFinishTraining,\n                    children: [/*#__PURE__*/_jsx(Col, {\n                      span: 18,\n                      pull: 1,\n                      children: /*#__PURE__*/_jsxs(Row, {\n                        flex: true,\n                        children: [/*#__PURE__*/_jsx(Col, {\n                          span: 10,\n                          offset: 2,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"school\",\n                            label: \"Escuela\",\n                            children: /*#__PURE__*/_jsx(Input, {})\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          span: 10,\n                          offset: 2,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"since\",\n                            label: \"Fecha Inicio-Fin\",\n                            children: /*#__PURE__*/_jsx(Space, {\n                              direction: \"vertical\",\n                              size: 12,\n                              children: /*#__PURE__*/_jsx(RangePicker, {\n                                onChange: onChangeDateTrainig\n                              })\n                            })\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          span: 10,\n                          offset: 2,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"accreditation_document\",\n                            label: \"Documento de acreditaci\\xF3n\",\n                            children: /*#__PURE__*/_jsx(Input, {})\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          span: 10,\n                          offset: 2,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"currently_studing\",\n                            label: \"Estudia actualmente\",\n                            children: /*#__PURE__*/_jsx(Checkbox, {\n                              onChange: changeCurreStud,\n                              checked: currenlyStuding\n                            })\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          span: 10,\n                          offset: 2,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"completed_period\",\n                            label: \"Periodo completado\",\n                            children: /*#__PURE__*/_jsx(Input, {})\n                          })\n                        })]\n                      })\n                    }), /*#__PURE__*/_jsx(Row, {\n                      flex: true,\n                      children: /*#__PURE__*/_jsx(Form.Item, {\n                        children: /*#__PURE__*/_jsx(Button, {\n                          type: \"primary\",\n                          htmlType: \"submit\",\n                          children: \"Guardar\"\n                        })\n                      })\n                    })]\n                  }), /*#__PURE__*/_jsx(Spin, {\n                    tip: \"Loading...\",\n                    spinning: loadingTable,\n                    children: /*#__PURE__*/_jsx(Table, {\n                      columns: colTraining,\n                      dataSource: training\n                    })\n                  })]\n                }), /*#__PURE__*/_jsxs(Panel, {\n                  header: \"Experiencia laboral\",\n                  children: [/*#__PURE__*/_jsxs(Form, {\n                    form: formExperiencejob,\n                    onFinish: formFinishJobExp,\n                    children: [/*#__PURE__*/_jsx(Col, {\n                      span: 18,\n                      pull: 1,\n                      children: /*#__PURE__*/_jsxs(Row, {\n                        flex: true,\n                        children: [/*#__PURE__*/_jsx(Col, {\n                          span: 10,\n                          offset: 2,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"experience_type\",\n                            label: \"Tipo de experiencia\",\n                            children: /*#__PURE__*/_jsx(Select, {\n                              options: experienceType\n                            })\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          span: 10,\n                          offset: 2,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"labor_relationship\",\n                            label: \"Relaci\\xF3n laboral\",\n                            children: /*#__PURE__*/_jsx(Select, {\n                              options: laborRelationship\n                            })\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          span: 10,\n                          offset: 2,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"reason_separation\",\n                            label: \"Motivo de separaci\\xF3n\",\n                            children: /*#__PURE__*/_jsx(Select, {\n                              options: reasonSeparation\n                            })\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          span: 10,\n                          offset: 2,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"company\",\n                            label: \"Empresa\",\n                            children: /*#__PURE__*/_jsx(Input, {})\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          span: 10,\n                          offset: 2,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"since\",\n                            label: \"Fecha de inicio\",\n                            children: /*#__PURE__*/_jsx(RangePicker, {\n                              onChange: onChangeDExJ\n                            })\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          span: 10,\n                          offset: 2,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"turn\",\n                            label: \"Giro empresarial\",\n                            children: /*#__PURE__*/_jsx(Input, {})\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          span: 10,\n                          offset: 2,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"function\",\n                            label: \"Funciones\",\n                            children: /*#__PURE__*/_jsx(Input, {})\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          span: 10,\n                          offset: 2,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"startin_salary\",\n                            label: \"Salario incial\",\n                            children: /*#__PURE__*/_jsx(Input, {})\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          span: 10,\n                          offset: 2,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"last_salary\",\n                            label: \"Salario final\",\n                            children: /*#__PURE__*/_jsx(Input, {})\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          span: 10,\n                          offset: 2,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"immediate_boos\",\n                            label: \"Jefe inmediato\",\n                            children: /*#__PURE__*/_jsx(Input, {})\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          span: 10,\n                          offset: 2,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"address_company\",\n                            label: \"Direccion de la empresa\",\n                            children: /*#__PURE__*/_jsx(Input, {})\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          span: 10,\n                          offset: 2,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"phone_company\",\n                            label: \"Tel\\xE9fono de la empresa\",\n                            children: /*#__PURE__*/_jsx(Input, {})\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          span: 10,\n                          offset: 2,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"notes\",\n                            label: \"Notas\",\n                            children: /*#__PURE__*/_jsx(TextArea, {})\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          span: 10,\n                          offset: 2,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"cv\",\n                            label: \"Curriculum\",\n                            children: /*#__PURE__*/_jsx(TextArea, {})\n                          })\n                        })]\n                      })\n                    }), /*#__PURE__*/_jsx(Row, {\n                      flex: true,\n                      children: /*#__PURE__*/_jsx(Form.Item, {\n                        children: /*#__PURE__*/_jsx(Button, {\n                          type: \"primary\",\n                          htmlType: \"submit\",\n                          children: \"Guardar\"\n                        })\n                      })\n                    })]\n                  }), /*#__PURE__*/_jsx(Spin, {\n                    tip: \"Loading...\",\n                    spinning: loadingTable,\n                    children: /*#__PURE__*/_jsx(Table, {\n                      columns: colExpJob,\n                      dataSource: experineceJob\n                    })\n                  })]\n                }), /*#__PURE__*/_jsxs(Panel, {\n                  header: \"Cuentas bancarias\",\n                  children: [/*#__PURE__*/_jsxs(Form, {\n                    form: formBank,\n                    onFinish: formBankAcc,\n                    children: [/*#__PURE__*/_jsx(Col, {\n                      span: 18,\n                      pull: 1,\n                      children: /*#__PURE__*/_jsxs(Row, {\n                        flex: true,\n                        children: [/*#__PURE__*/_jsx(Col, {\n                          span: 10,\n                          offset: 2,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"bank\",\n                            label: \"Banco\",\n                            children: /*#__PURE__*/_jsx(Select, {\n                              options: banks\n                            })\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          span: 10,\n                          offset: 2,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"account_number\",\n                            label: \"Numero de cuenta\",\n                            children: /*#__PURE__*/_jsx(Input, {})\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          span: 10,\n                          offset: 2,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"interbank_key\",\n                            label: \"Clave interbancaria\",\n                            children: /*#__PURE__*/_jsx(Input, {})\n                          })\n                        })]\n                      })\n                    }), /*#__PURE__*/_jsx(Row, {\n                      flex: true,\n                      children: /*#__PURE__*/_jsx(Form.Item, {\n                        children: /*#__PURE__*/_jsx(Button, {\n                          type: \"primary\",\n                          htmlType: \"submit\",\n                          children: \"Guardar\"\n                        })\n                      })\n                    })]\n                  }), /*#__PURE__*/_jsx(Spin, {\n                    tip: \"Loading...\",\n                    spinning: loadingTable,\n                    children: /*#__PURE__*/_jsx(Table, {\n                      columns: colBank,\n                      dataSource: bankAccounts\n                    })\n                  })]\n                }), /*#__PURE__*/_jsxs(Panel, {\n                  header: \"Documentos\",\n                  children: [/*#__PURE__*/_jsxs(Dragger, _objectSpread(_objectSpread({}, props), {}, {\n                    children: [/*#__PURE__*/_jsx(\"p\", {\n                      className: \"ant-upload-drag-icon\",\n                      children: /*#__PURE__*/_jsx(InboxOutlined, {})\n                    }), /*#__PURE__*/_jsx(\"p\", {\n                      className: \"ant-upload-text\",\n                      children: \"Click o Arrastra tus doccumentos aqu\\xED.\"\n                    }), /*#__PURE__*/_jsx(\"p\", {\n                      className: \"ant-upload-hint\",\n                      children: \"Soporte para una carga \\xFAnica o masiva. Prohibido estrictamente la carga de datos ajenos a la persona.\"\n                    })]\n                  })), /*#__PURE__*/_jsx(Row, {\n                    flex: true,\n                    children: /*#__PURE__*/_jsx(Col, {\n                      style: {\n                        padding: \"2%\"\n                      },\n                      children: /*#__PURE__*/_jsx(Button, {\n                        icon: /*#__PURE__*/_jsx(UploadOutlined, {}),\n                        type: \"primary\",\n                        onClick: function onClick() {\n                          return \"nada\";\n                        },\n                        children: \"Subir\"\n                      })\n                    })\n                  })]\n                }), /*#__PURE__*/_jsxs(Panel, {\n                  header: \"Eliminar\",\n                  children: [/*#__PURE__*/_jsx(Alert, {\n                    message: \"Warning\",\n                    description: \"Al eliminar a una persona perdera todos los datos relacionados a ella de manera permante.\",\n                    type: \"warning\",\n                    showIcon: true\n                  }), /*#__PURE__*/_jsx(Row, {\n                    style: {\n                      padding: \"2%\"\n                    },\n                    children: /*#__PURE__*/_jsx(Col, {\n                      children: /*#__PURE__*/_jsx(Button, {\n                        type: \"primary\",\n                        danger: true,\n                        icon: /*#__PURE__*/_jsx(WarningOutlined, {}),\n                        onClick: function onClick() {\n                          return setDeleteRegister({\n                            id: \"\",\n                            api: \"deletePerson\"\n                          });\n                        },\n                        children: \"Eliminar persona\"\n                      })\n                    })\n                  })]\n                })]\n              })]\n            }), /*#__PURE__*/_jsx(Row, {\n              flex: true,\n              children: /*#__PURE__*/_jsx(Col, {\n                style: {\n                  padding: \"2%\"\n                },\n                children: /*#__PURE__*/_jsx(Button, {\n                  icon: /*#__PURE__*/_jsx(ArrowLeftOutlined, {}),\n                  type: \"primary\",\n                  onClick: function onClick() {\n                    return Router.push(\"/home\");\n                  },\n                  children: \"Regresar\"\n                })\n              })\n            })]\n          })\n        })]\n      }), /*#__PURE__*/_jsx(Modal, {\n        title: \"Modal\",\n        visible: modal,\n        onOk: deleteRegister,\n        onCancel: showModal,\n        okText: \"Si, Eliminar\",\n        cancelText: \"Cancelar\",\n        children: /*#__PURE__*/_jsx(Alert, {\n          message: \"Warning\",\n          description: \"Al eliminar este registro perdera todos los datos relacionados a el de manera permante. \\xBFEsta seguro de querer eliminarlo?\",\n          type: \"warning\",\n          showIcon: true\n        })\n      })]\n    })\n  });\n};\n\nexport default userDetailForm;","map":null,"metadata":{},"sourceType":"module"}