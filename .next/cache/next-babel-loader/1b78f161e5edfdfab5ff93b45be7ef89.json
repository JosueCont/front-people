{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { Layout, Breadcrumb, Row, Col, Typography, Form, Input, Tooltip, Cascader, Select, Checkbox, Button, AutoComplete, Switch, InputNumber, Spin, message, Divider, Tabs } from \"antd\";\nimport HeaderCustom from \"../../components/header\";\nimport MainLayout from \"../../layout/MainLayout\";\nimport Axios from \"axios\";\nimport { LOGIN_URL, APP_ID } from \"../../config/config\";\nvar Content = Layout.Content;\nvar Title = Typography.Title;\nvar TabPane = Tabs.TabPane;\n\nvar GroupAdd = function GroupAdd() {\n  var _Form$useForm = Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0];\n\n  var router = useRouter();\n\n  var _useState = useState(null),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var _useState2 = useState(false),\n      edit = _useState2[0],\n      setEdit = _useState2[1];\n\n  var _useState3 = useState([]),\n      perms = _useState3[0],\n      setPerms = _useState3[1]; //   const [mostrar, setMostrar] = useState(false);\n\n\n  var _useState4 = useState(false),\n      getperms = _useState4[0],\n      setGetperms = _useState4[1];\n\n  var headers = {\n    \"client-id\": APP_ID,\n    \"Content-Type\": \"application/json\"\n  };\n  var data = {};\n\n  var onFinish = function onFinish(values) {\n    console.log(\"Received values of form: \", values);\n    data = values;\n    data.perms = perms;\n\n    if (!edit) {\n      saveGroup();\n    } else {\n      editGroup();\n    }\n  };\n\n  var saveGroup = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoading(true);\n              Axios.post(LOGIN_URL + \"/group/create/\", data, {\n                headers: headers\n              }).then(function (response) {\n                if (response.status === 200) {\n                  setLoading(false);\n                  form.setFieldsValue({\n                    name: \"\",\n                    perms: []\n                  });\n                  setPerms([]);\n                  router.push({\n                    pathname: \"/groups\"\n                  });\n                  message.success({\n                    content: \"Group saved successfully\",\n                    className: \"custom-class\",\n                    style: {\n                      marginTop: \"20vh\"\n                    }\n                  });\n                }\n              })[\"catch\"](function (error) {\n                message.error({\n                  content: \"An error occurred\",\n                  className: \"custom-class\",\n                  style: {\n                    marginTop: \"20vh\"\n                  }\n                });\n                console.log(error);\n              });\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function saveGroup() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var editGroup = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              setLoading(true);\n              Axios.post(LOGIN_URL + \"/group/edit/\", data, {\n                headers: headers\n              }).then(function (response) {\n                if (response.status === 200) {\n                  setLoading(false);\n                  form.setFieldsValue({\n                    id: \"\",\n                    name: \"\",\n                    perms: []\n                  });\n                  setPerms([]);\n                  router.push({\n                    pathname: \"/groups\"\n                  });\n                  message.success({\n                    content: \"Group saved successfully\",\n                    className: \"custom-class\",\n                    style: {\n                      marginTop: \"20vh\"\n                    }\n                  });\n                }\n              })[\"catch\"](function (error) {\n                message.error({\n                  content: \"An error occurred\",\n                  className: \"custom-class\",\n                  style: {\n                    marginTop: \"20vh\"\n                  }\n                });\n                console.log(error);\n              });\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function editGroup() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var getGroup = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(id) {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              setLoading(true);\n              data = {\n                id: id\n              };\n              Axios.post(LOGIN_URL + \"/group/get/\", data, {\n                headers: headers\n              }).then(function (response) {\n                if (response.status === 200) {\n                  var group = response.data.data;\n                  form.setFieldsValue({\n                    id: group._id.$oid.toString(),\n                    name: group.name,\n                    perms: group.perms\n                  });\n                  setPerms(group.perms);\n                  setLoading(false);\n\n                  if (perms >= 0) {\n                    // setMostrar(true);\n                    setGetperms(true);\n                    checkPerms(group.perms);\n                  }\n\n                  console.log(\"Perms\", perms);\n                }\n              })[\"catch\"](function (e) {\n                console.log(e);\n              });\n\n            case 3:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function getGroup(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    var id = router.query.id;\n    console.log(router.query);\n\n    if (id !== undefined) {\n      getGroup(id);\n      setEdit(true);\n    } else {\n      setEdit(false); //   setMostrar(true);\n    }\n  }, []);\n  var arrayPerms = [];\n\n  function handleClick(e) {\n    console.log(\"The link was clicked.\", e.target.name, e.target.checked);\n\n    if (getperms == false) {\n      var index = perms.indexOf(e.target.name);\n\n      if (index > -1) {\n        if (e.target.checked) {\n          setPerms([].concat(_toConsumableArray(perms), [e.target.name]));\n        } else {\n          perms.splice(index, 1);\n        }\n      } else {\n        if (e.target.checked) {\n          setPerms([].concat(_toConsumableArray(perms), [e.target.name]));\n        }\n      }\n    }\n  }\n\n  var views = [{\n    name: \"person\",\n    value: \"people.person\"\n  }, {\n    name: \"company\",\n    value: \"people.company\"\n  }, {\n    name: \"comunication\",\n    value: \"people.comunication\"\n  }];\n\n  var checkPerms = function checkPerms(perms) {\n    if (perms.length > 0) {\n      perms.forEach(function (element) {\n        var chkBox = document.getElementById(element);\n\n        if (chkBox != \"undefined\") {\n          if (chkBox.checked == false) {\n            chkBox.click();\n          }\n        }\n      });\n      setGetperms(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxs(MainLayout, {\n    currentKey: \"1\",\n    children: [/*#__PURE__*/_jsxs(Breadcrumb, {\n      style: {\n        margin: \"16px 0\"\n      },\n      children: [/*#__PURE__*/_jsx(Breadcrumb.Item, {\n        children: \"Home\"\n      }), /*#__PURE__*/_jsx(Breadcrumb.Item, {\n        children: \"Person\"\n      })]\n    }), /*#__PURE__*/_jsx(Content, {\n      className: \"site-layout\",\n      children: /*#__PURE__*/_jsx(Spin, {\n        tip: \"Loading...\",\n        spinning: loading,\n        children: /*#__PURE__*/_jsx(\"div\", {\n          className: \"site-layout-background\",\n          style: {\n            padding: 24,\n            minHeight: 380,\n            height: \"100%\"\n          },\n          children: /*#__PURE__*/_jsxs(\"div\", {\n            style: {\n              padding: 24\n            },\n            children: [/*#__PURE__*/_jsxs(Row, {\n              children: [/*#__PURE__*/_jsx(Col, {\n                span: 24,\n                children: edit === true ? /*#__PURE__*/_jsx(Title, {\n                  level: 3,\n                  children: \"Editar Grupos\"\n                }) : /*#__PURE__*/_jsx(Title, {\n                  level: 3,\n                  children: \"Crear Grupos\"\n                })\n              }), /*#__PURE__*/_jsx(Divider, {\n                style: {\n                  marginTop: \"2px\"\n                }\n              }), /*#__PURE__*/_jsx(Col, {\n                span: 24,\n                children: /*#__PURE__*/_jsx(Form, {\n                  form: form,\n                  onFinish: onFinish,\n                  layout: \"vertical\",\n                  initialValues: {\n                    id: \"\",\n                    name: \"\",\n                    perms: []\n                  },\n                  scrollToFirstError: true,\n                  children: /*#__PURE__*/_jsxs(Row, {\n                    children: [/*#__PURE__*/_jsx(Col, {\n                      span: 24,\n                      children: /*#__PURE__*/_jsx(\"div\", {\n                        style: {\n                          \"float\": \"right\",\n                          marginBottom: \"5px\"\n                        },\n                        children: /*#__PURE__*/_jsxs(Form.Item, {\n                          span: 24,\n                          children: [/*#__PURE__*/_jsx(Button, {\n                            style: {\n                              marginRight: \"5px\"\n                            },\n                            onClick: function onClick() {\n                              return router.push({\n                                pathname: \"/groups\"\n                              });\n                            },\n                            children: \"Regresar\"\n                          }), /*#__PURE__*/_jsx(Button, {\n                            type: \"primary\",\n                            htmlType: \"submit\",\n                            children: \"Guardar\"\n                          })]\n                        })\n                      })\n                    }), /*#__PURE__*/_jsxs(Col, {\n                      lg: 18,\n                      md: 18,\n                      xs: 24,\n                      children: [edit === true ? /*#__PURE__*/_jsx(Form.Item, {\n                        name: \"id\",\n                        hidden: true,\n                        rules: [{\n                          required: true,\n                          message: \"Please input the name!\"\n                        }],\n                        children: /*#__PURE__*/_jsx(Input, {\n                          placeholder: \"Nombre\"\n                        })\n                      }) : null, /*#__PURE__*/_jsx(Form.Item, {\n                        name: \"name\",\n                        rules: [{\n                          required: true,\n                          message: \"Please input the name!\"\n                        }],\n                        span: 24,\n                        children: /*#__PURE__*/_jsx(Input, {\n                          placeholder: \"Nombre\"\n                        })\n                      })]\n                    })]\n                  })\n                })\n              })]\n            }), /*#__PURE__*/_jsx(Row, {\n              children: /*#__PURE__*/_jsx(Col, {\n                span: 24,\n                children: /*#__PURE__*/_jsx(Tabs, {\n                  type: \"card\",\n                  children: /*#__PURE__*/_jsx(TabPane, {\n                    tab: \"People\",\n                    id: \"tabPeople\",\n                    name: \"tabPeople\",\n                    children: views.map(function (element) {\n                      return /*#__PURE__*/_jsxs(Row, {\n                        style: {\n                          marginTop: \"20px\"\n                        },\n                        children: [/*#__PURE__*/_jsx(Col, {\n                          xl: 12,\n                          md: 4,\n                          xs: 24,\n                          children: element.name\n                        }), /*#__PURE__*/_jsxs(Col, {\n                          xl: 12,\n                          md: 20,\n                          xs: 24,\n                          children: [/*#__PURE__*/_jsx(Checkbox, {\n                            name: element.value + \".can.create\",\n                            id: element.value + \".can.create\",\n                            onClick: handleClick,\n                            children: \"Crear\"\n                          }), /*#__PURE__*/_jsx(Checkbox, {\n                            name: element.value + \".can.edit\",\n                            id: element.value + \".can.edit\",\n                            onClick: handleClick,\n                            children: \"Editar\"\n                          }), /*#__PURE__*/_jsx(Checkbox, {\n                            name: element.value + \".can.delete\",\n                            id: element.value + \".can.delete\",\n                            onClick: handleClick,\n                            children: \"Eliminar\"\n                          }), /*#__PURE__*/_jsx(Checkbox, {\n                            name: element.value + \".can.view\",\n                            id: element.value + \".can.view\",\n                            onClick: handleClick,\n                            children: \"Ver\"\n                          })]\n                        })]\n                      });\n                    })\n                  }, \"1\")\n                })\n              })\n            })]\n          })\n        })\n      })\n    })]\n  });\n};\n\nexport default GroupAdd;","map":null,"metadata":{},"sourceType":"module"}