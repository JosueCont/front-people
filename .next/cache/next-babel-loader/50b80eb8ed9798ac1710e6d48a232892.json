{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { Layout, Breadcrumb, Row, Col, Typography, Form, Input, Tooltip, Cascader, Select, Checkbox, Button, AutoComplete, Switch, InputNumber, Spin, message, Divider, Tabs } from \"antd\";\nimport MainLayout from \"../../layout/MainLayout\";\nimport Axios from \"axios\";\nimport { LOGIN_URL, APP_ID } from \"../../config/config\";\nconst {\n  Content\n} = Layout;\nconst {\n  Title\n} = Typography;\nconst {\n  TabPane\n} = Tabs;\n\nconst GroupAdd = () => {\n  const [form] = Form.useForm();\n  const router = useRouter();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(null);\n  const {\n    0: edit,\n    1: setEdit\n  } = useState(false);\n  const {\n    0: perms,\n    1: setPerms\n  } = useState([]); //   const [mostrar, setMostrar] = useState(false);\n\n  const {\n    0: getperms,\n    1: setGetperms\n  } = useState(false);\n  const headers = {\n    \"client-id\": APP_ID,\n    \"Content-Type\": \"application/json\"\n  };\n  let data = {};\n\n  const onFinish = values => {\n    console.log(\"Received values of form: \", values);\n    data = values;\n    data.perms = perms;\n\n    if (!edit) {\n      saveGroup();\n    } else {\n      editGroup();\n    }\n  };\n\n  const saveGroup = async () => {\n    setLoading(true);\n    Axios.post(LOGIN_URL + \"/group/create/\", data, {\n      headers: headers\n    }).then(function (response) {\n      if (response.status === 200) {\n        setLoading(false);\n        form.setFieldsValue({\n          name: \"\",\n          perms: []\n        });\n        setPerms([]);\n        router.push({\n          pathname: \"/groups\"\n        });\n        message.success({\n          content: \"Group saved successfully\",\n          className: \"custom-class\",\n          style: {\n            marginTop: \"20vh\"\n          }\n        });\n      }\n    }).catch(function (error) {\n      message.error({\n        content: \"An error occurred\",\n        className: \"custom-class\",\n        style: {\n          marginTop: \"20vh\"\n        }\n      });\n      console.log(error);\n    });\n  };\n\n  const editGroup = async () => {\n    setLoading(true);\n    Axios.post(LOGIN_URL + \"/group/edit/\", data, {\n      headers: headers\n    }).then(function (response) {\n      if (response.status === 200) {\n        setLoading(false);\n        form.setFieldsValue({\n          id: \"\",\n          name: \"\",\n          perms: []\n        });\n        setPerms([]);\n        router.push({\n          pathname: \"/groups\"\n        });\n        message.success({\n          content: \"Group saved successfully\",\n          className: \"custom-class\",\n          style: {\n            marginTop: \"20vh\"\n          }\n        });\n      }\n    }).catch(function (error) {\n      message.error({\n        content: \"An error occurred\",\n        className: \"custom-class\",\n        style: {\n          marginTop: \"20vh\"\n        }\n      });\n      console.log(error);\n    });\n  };\n\n  const getGroup = async id => {\n    setLoading(true);\n    data = {\n      id: id\n    };\n    Axios.post(LOGIN_URL + \"/group/get/\", data, {\n      headers: headers\n    }).then(response => {\n      if (response.status === 200) {\n        let group = response.data.data;\n        form.setFieldsValue({\n          id: group._id.$oid.toString(),\n          name: group.name,\n          perms: group.perms\n        });\n        setPerms(group.perms);\n        setLoading(false);\n\n        if (perms >= 0) {\n          // setMostrar(true);\n          setGetperms(true);\n          checkPerms(group.perms);\n        }\n\n        console.log(\"Perms\", perms);\n      }\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  useEffect(() => {\n    const {\n      id\n    } = router.query;\n    console.log(router.query);\n\n    if (id !== undefined) {\n      getGroup(id);\n      setEdit(true);\n    } else {\n      setEdit(false); //   setMostrar(true);\n    }\n  }, []);\n  let arrayPerms = [];\n\n  function handleClick(e) {\n    console.log(\"The link was clicked.\", e.target.name, e.target.checked);\n\n    if (getperms == false) {\n      let index = perms.indexOf(e.target.name);\n\n      if (index > -1) {\n        if (e.target.checked) {\n          setPerms([...perms, e.target.name]);\n        } else {\n          perms.splice(index, 1);\n        }\n      } else {\n        if (e.target.checked) {\n          setPerms([...perms, e.target.name]);\n        }\n      }\n    }\n  }\n\n  const views = [{\n    name: \"person\",\n    value: \"people.person\"\n  }, {\n    name: \"company\",\n    value: \"people.company\"\n  }, {\n    name: \"comunication\",\n    value: \"people.comunication\"\n  }];\n\n  const checkPerms = perms => {\n    if (perms.length > 0) {\n      perms.forEach(element => {\n        var chkBox = document.getElementById(element);\n\n        if (chkBox != \"undefined\") {\n          if (chkBox.checked == false) {\n            chkBox.click();\n          }\n        }\n      });\n      setGetperms(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxs(MainLayout, {\n    currentKey: \"1\",\n    children: [/*#__PURE__*/_jsxs(Breadcrumb, {\n      style: {\n        margin: \"16px 0\"\n      },\n      children: [/*#__PURE__*/_jsx(Breadcrumb.Item, {\n        children: \"Inicio\"\n      }), /*#__PURE__*/_jsx(Breadcrumb.Item, {\n        children: \"Person\"\n      })]\n    }), /*#__PURE__*/_jsx(Content, {\n      className: \"site-layout\",\n      children: /*#__PURE__*/_jsx(Spin, {\n        tip: \"Loading...\",\n        spinning: loading,\n        children: /*#__PURE__*/_jsx(\"div\", {\n          className: \"site-layout-background\",\n          style: {\n            padding: 24,\n            minHeight: 380,\n            height: \"100%\"\n          },\n          children: /*#__PURE__*/_jsxs(\"div\", {\n            style: {\n              padding: 24\n            },\n            children: [/*#__PURE__*/_jsxs(Row, {\n              children: [/*#__PURE__*/_jsx(Col, {\n                span: 24,\n                children: edit === true ? /*#__PURE__*/_jsx(Title, {\n                  level: 3,\n                  children: \"Editar Grupos\"\n                }) : /*#__PURE__*/_jsx(Title, {\n                  level: 3,\n                  children: \"Crear Grupos\"\n                })\n              }), /*#__PURE__*/_jsx(Divider, {\n                style: {\n                  marginTop: \"2px\"\n                }\n              }), /*#__PURE__*/_jsx(Col, {\n                span: 24,\n                children: /*#__PURE__*/_jsx(Form, {\n                  form: form,\n                  onFinish: onFinish,\n                  layout: \"vertical\",\n                  initialValues: {\n                    id: \"\",\n                    name: \"\",\n                    perms: []\n                  },\n                  scrollToFirstError: true,\n                  children: /*#__PURE__*/_jsxs(Row, {\n                    children: [/*#__PURE__*/_jsx(Col, {\n                      span: 24,\n                      children: /*#__PURE__*/_jsx(\"div\", {\n                        style: {\n                          float: \"right\",\n                          marginBottom: \"5px\"\n                        },\n                        children: /*#__PURE__*/_jsxs(Form.Item, {\n                          span: 24,\n                          children: [/*#__PURE__*/_jsx(Button, {\n                            style: {\n                              marginRight: \"5px\"\n                            },\n                            onClick: () => router.push({\n                              pathname: \"/groups\"\n                            }),\n                            children: \"Regresar\"\n                          }), /*#__PURE__*/_jsx(Button, {\n                            type: \"primary\",\n                            htmlType: \"submit\",\n                            children: \"Guardar\"\n                          })]\n                        })\n                      })\n                    }), /*#__PURE__*/_jsxs(Col, {\n                      lg: 18,\n                      md: 18,\n                      xs: 24,\n                      children: [edit === true ? /*#__PURE__*/_jsx(Form.Item, {\n                        name: \"id\",\n                        hidden: true,\n                        rules: [{\n                          required: true,\n                          message: \"Please input the name!\"\n                        }],\n                        children: /*#__PURE__*/_jsx(Input, {\n                          placeholder: \"Nombre\"\n                        })\n                      }) : null, /*#__PURE__*/_jsx(Form.Item, {\n                        name: \"name\",\n                        rules: [{\n                          required: true,\n                          message: \"Please input the name!\"\n                        }],\n                        span: 24,\n                        children: /*#__PURE__*/_jsx(Input, {\n                          placeholder: \"Nombre\"\n                        })\n                      })]\n                    })]\n                  })\n                })\n              })]\n            }), /*#__PURE__*/_jsx(Row, {\n              children: /*#__PURE__*/_jsx(Col, {\n                span: 24,\n                children: /*#__PURE__*/_jsx(Tabs, {\n                  type: \"card\",\n                  children: /*#__PURE__*/_jsx(TabPane, {\n                    tab: \"People\",\n                    id: \"tabPeople\",\n                    name: \"tabPeople\",\n                    children: views.map(element => {\n                      return /*#__PURE__*/_jsxs(Row, {\n                        style: {\n                          marginTop: \"20px\"\n                        },\n                        children: [/*#__PURE__*/_jsx(Col, {\n                          xl: 12,\n                          md: 4,\n                          xs: 24,\n                          children: element.name\n                        }), /*#__PURE__*/_jsxs(Col, {\n                          xl: 12,\n                          md: 20,\n                          xs: 24,\n                          children: [/*#__PURE__*/_jsx(Checkbox, {\n                            name: element.value + \".can.create\",\n                            id: element.value + \".can.create\",\n                            onClick: handleClick,\n                            children: \"Crear\"\n                          }), /*#__PURE__*/_jsx(Checkbox, {\n                            name: element.value + \".can.edit\",\n                            id: element.value + \".can.edit\",\n                            onClick: handleClick,\n                            children: \"Editar\"\n                          }), /*#__PURE__*/_jsx(Checkbox, {\n                            name: element.value + \".can.delete\",\n                            id: element.value + \".can.delete\",\n                            onClick: handleClick,\n                            children: \"Eliminar\"\n                          }), /*#__PURE__*/_jsx(Checkbox, {\n                            name: element.value + \".can.view\",\n                            id: element.value + \".can.view\",\n                            onClick: handleClick,\n                            children: \"Ver\"\n                          })]\n                        })]\n                      });\n                    })\n                  }, \"1\")\n                })\n              })\n            })]\n          })\n        })\n      })\n    })]\n  });\n};\n\nexport default GroupAdd;","map":null,"metadata":{},"sourceType":"module"}