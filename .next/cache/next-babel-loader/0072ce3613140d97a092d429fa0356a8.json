{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport React, { useEffect, useState } from 'react';\nimport { Tabs, Radio, Row, Col, Breadcrumb, Typography, Button, Select, Form, Image, Input } from 'antd';\nimport MainLayout from \"../../../layout/MainLayout\";\nimport { render } from \"react-dom\";\nimport { useRouter } from \"next/router\";\nimport axiosApi from '../../../libs/axiosApi';\nimport moment from \"moment\";\nimport Vacationform from '../../../components/vacations/Vacationform';\nexport default function HolidaysDetails() {\n  const route = useRouter();\n  const {\n    TabPane\n  } = Tabs;\n  const {\n    Title\n  } = Typography;\n  const {\n    Options\n  } = Select;\n  const {\n    0: details,\n    1: setDetails\n  } = useState(null);\n  const {\n    id\n  } = route.query;\n  const [form] = Form.useForm();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: sending,\n    1: setSending\n  } = useState(false);\n  const {\n    0: daysRequested,\n    1: setDaysRequested\n  } = useState(null);\n  const {\n    0: departureDate,\n    1: setDepartureDate\n  } = useState(null);\n  const {\n    0: returnDate,\n    1: setReturnDate\n  } = useState(null);\n  const {\n    0: availableDays,\n    1: setAvailableDays\n  } = useState(null);\n  const {\n    0: personList,\n    1: setPersonList\n  } = useState(null);\n  const {\n    0: allPersons,\n    1: setAllPersons\n  } = useState(null);\n  const {\n    0: job,\n    1: setJob\n  } = useState(null);\n  const {\n    0: dateOfAdmission,\n    1: setDateOfAdmission\n  } = useState(null);\n\n  const onCancel = () => {\n    route.push(\"/holidays\");\n  };\n\n  const onChangeDepartureDate = (date, dateString) => {\n    console.log('date', date);\n    console.log('dateString', dateString);\n    setDepartureDate(dateString);\n  };\n\n  const onChangeReturnDate = (date, dateString) => {\n    setReturnDate(dateString);\n  };\n\n  const changePerson = value => {\n    console.log(value);\n    let index = allPersons.find(data => data.id === value);\n    console.log(index);\n    setDateOfAdmission(moment(index.date_of_admission).format('DD/MM/YYYY'));\n\n    if (index.job_department.job) {\n      setJob(index.job_department.job.name);\n    }\n  };\n\n  const getDetails = async () => {\n    try {\n      let response = await axiosApi.get(`/person/vacation/${id}/`);\n      let data = response.data;\n      console.log(\"data\", data);\n      setDaysRequested(data.days_requested);\n      setDepartureDate(moment(data.departure_date).format('DD/MM/YYYY'));\n      setReturnDate(moment(data.return_date).format('DD/MM/YYYY'));\n      setAvailableDays(data.available_days);\n      setLoading(false);\n      /* setLoading(false); */\n      //setList(data.results)\n    } catch (e) {\n      console.log(\"error\", e);\n      /* setLoading(false); */\n    }\n  };\n\n  const saveRequest = async values => {\n    console.log(values);\n  };\n\n  useEffect(() => {\n    setLoading(true);\n\n    if (id) {\n      getDetails();\n    }\n  }, [route]);\n  return /*#__PURE__*/_jsxs(MainLayout, {\n    currentKey: \"5\",\n    children: [/*#__PURE__*/_jsxs(Breadcrumb, {\n      className: 'mainBreadcrumb',\n      children: [/*#__PURE__*/_jsx(Breadcrumb.Item, {\n        children: \"Inicio\"\n      }), /*#__PURE__*/_jsx(Breadcrumb.Item, {\n        href: \"/holidays\",\n        children: \"Vacaciones\"\n      }), /*#__PURE__*/_jsx(Breadcrumb.Item, {\n        children: \"Editar solicitud\"\n      })]\n    }, \"Breadcrumb\"), /*#__PURE__*/_jsx(\"div\", {\n      className: \"container back-white\",\n      style: {\n        width: \"100%\",\n        padding: '20px 0'\n      },\n      children: /*#__PURE__*/_jsx(Row, {\n        justify: 'center',\n        children: /*#__PURE__*/_jsx(Col, {\n          span: 23,\n          children: !loading ? /*#__PURE__*/_jsx(Form, {\n            form: form,\n            layout: \"horizontal\",\n            onFinish: saveRequest,\n            children: /*#__PURE__*/_jsx(Vacationform, {\n              returnDate: returnDate,\n              departureDate: departureDate,\n              daysRequested: daysRequested,\n              availableDays: availableDays,\n              sending: sending,\n              dateOfAdmission: dateOfAdmission,\n              job: job,\n              personList: personList,\n              onChangeDepartureDate: onChangeDepartureDate,\n              onCancel: onCancel,\n              changePerson: changePerson\n            })\n          }) : null\n        })\n      })\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}