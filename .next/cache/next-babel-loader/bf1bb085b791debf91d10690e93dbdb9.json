{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Layout, Breadcrumb, Tabs, Form, Input, Modal, Space, Row, Col, Spin, Card, Typography, Select, DatePicker, Button, Image, Switch, Collapse, message, Checkbox, Alert, Table, Upload } from \"antd\";\nimport HeaderCustom from \"../../components/Header\";\nimport Axios from \"axios\";\nimport { API_URL } from \"../../config/config\";\nimport { useEffect, useState } from \"react\";\nimport { WarningOutlined, EditOutlined, DeleteOutlined, ArrowLeftOutlined, InboxOutlined, UploadOutlined, PlusOutlined, FileTextOutlined } from \"@ant-design/icons\";\nimport DocumentModal from \"../../components/modal/document\";\nconst {\n  Content\n} = Layout;\nconst {\n  TabPane\n} = Tabs;\nimport { useRouter } from \"next/router\";\nimport Router from \"next/router\";\nconst {\n  Option\n} = Select;\nimport moment from \"moment\";\nimport TextArea from \"antd/lib/input/TextArea\";\nimport Link from \"next/link\";\nconst {\n  Panel\n} = Collapse;\nconst {\n  Meta\n} = Card;\nconst {\n  RangePicker\n} = DatePicker;\nconst {\n  Dragger\n} = Upload;\n\nconst userDetailForm = () => {\n  const router = useRouter();\n  const {\n    Title\n  } = Typography;\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(true);\n  const {\n    0: loadingTable,\n    1: setLoadingTable\n  } = useState(true);\n  const {\n    0: modal,\n    1: setModal\n  } = useState(false);\n  const {\n    0: personFullName,\n    1: setPersonFullName\n  } = useState(\"\");\n  const {\n    0: photo,\n    1: setPhoto\n  } = useState(\"\");\n  const {\n    0: modalDoc,\n    1: setModalDoc\n  } = useState(false);\n  const {\n    0: deleted,\n    1: setDeleted\n  } = useState({}); ////STATE BOLEAN SWITCH AND CHECKBOX\n\n  const {\n    0: isActive,\n    1: setIsActive\n  } = useState(false);\n  const {\n    0: checkedTravel,\n    1: setCheckedTravel\n  } = useState(false);\n  const {\n    0: checkedResidence,\n    1: setCheckedResidence\n  } = useState(false);\n  const {\n    0: currenlyStuding,\n    1: setCurrenlyStuding\n  } = useState(false); /////ID UPDATE\n\n  const {\n    0: idBankAcc,\n    1: setIdBankAcc\n  } = useState(\"\");\n  const {\n    0: upBankAcc,\n    1: setUpBankAcc\n  } = useState(false);\n  const {\n    0: idPhone,\n    1: setIdPhone\n  } = useState(\"\");\n  const {\n    0: upPhone,\n    1: setUpPhone\n  } = useState(false);\n  const {\n    0: idContEm,\n    1: setIdContEm\n  } = useState(\"\");\n  const {\n    0: upContEm,\n    1: setUpContEm\n  } = useState(false);\n  const {\n    0: idFamily,\n    1: setIdFamily\n  } = useState(\"\");\n  const {\n    0: upFamily,\n    1: setUpFamily\n  } = useState(false);\n  const {\n    0: idTraining,\n    1: setIdTraining\n  } = useState(\"\");\n  const {\n    0: upTraining,\n    1: setUpTraining\n  } = useState(false);\n  const {\n    0: idExperienceJob,\n    1: setIdExperienceJob\n  } = useState(\"\");\n  const {\n    0: upExperienceJob,\n    1: setUpExperienceJob\n  } = useState(false);\n  const {\n    0: idGeneralP,\n    1: setIdGeneralP\n  } = useState(\"\");\n  const {\n    0: idAddressP,\n    1: setIdAddressP\n  } = useState(\"\"); ////FORMS\n\n  const [formPerson] = Form.useForm();\n  const [formGeneralTab] = Form.useForm();\n  const [formPhone] = Form.useForm();\n  const [formAddress] = Form.useForm();\n  const [formFamily] = Form.useForm();\n  const [formContactEmergency] = Form.useForm();\n  const [formTraining] = Form.useForm();\n  const [formExperiencejob] = Form.useForm();\n  const [formBank] = Form.useForm(); ////STATE SELECTS\n\n  const {\n    0: jobs,\n    1: setJobs\n  } = useState([]);\n  const {\n    0: departments,\n    1: setDepartments\n  } = useState([]);\n  const {\n    0: treatments,\n    1: setTreatments\n  } = useState([]);\n  const {\n    0: personType,\n    1: setPersonType\n  } = useState([]);\n  const {\n    0: groups,\n    1: setGroups\n  } = useState([]);\n  const {\n    0: banks,\n    1: setBanks\n  } = useState([]);\n  const {\n    0: relationship,\n    1: setRelationship\n  } = useState([]);\n  const {\n    0: experienceType,\n    1: setExperienceType\n  } = useState([]);\n  const {\n    0: reasonSeparation,\n    1: setReasonSeparation\n  } = useState([]);\n  const {\n    0: laborRelationship,\n    1: setLaborRelationship\n  } = useState([]); ////STATE TABLES\n\n  const {\n    0: phones,\n    1: setPhones\n  } = useState([]);\n  const {\n    0: family,\n    1: setFamily\n  } = useState([]);\n  const {\n    0: contactEmergency,\n    1: setContactEmergency\n  } = useState([]);\n  const {\n    0: training,\n    1: setTraining\n  } = useState([]);\n  const {\n    0: experineceJob,\n    1: setExperienceJob\n  } = useState([]);\n  const {\n    0: bankAccounts,\n    1: setBankAccounts\n  } = useState([]);\n  const {\n    0: documents,\n    1: setDocuments\n  } = useState([]); /////STATE DATE\n\n  const {\n    0: birthDate,\n    1: setBirthDate\n  } = useState(\"\");\n  const {\n    0: birthDateFam,\n    1: setBirthDateFam\n  } = useState(\"\");\n  const {\n    0: dateAdmission,\n    1: setDateAdmission\n  } = useState(\"\");\n  const {\n    0: dateTraining,\n    1: setDateTraining\n  } = useState(\"\");\n  const {\n    0: dateExpjob,\n    1: setDateExpjob\n  } = useState(\"\"); ////DEFAULT SELECT\n\n  const layout = {\n    labelCol: {\n      span: 5\n    },\n    wrapperCol: {\n      span: 10\n    }\n  };\n  const genders = [{\n    label: \"Masculino\",\n    value: 1\n  }, {\n    label: \"Femenino\",\n    value: 2\n  }, {\n    label: \"Otro\",\n    value: 3\n  }];\n  const civilStatus = [{\n    label: \"Soltero(a)\",\n    value: 1\n  }, {\n    label: \"Casado(a)\",\n    value: 2\n  }, {\n    label: \"Viudo(a)\",\n    value: 3\n  }];\n  const typePhones = [{\n    label: \"Alterno\",\n    value: 1\n  }, {\n    label: \"Principal\",\n    value: 2\n  }, {\n    label: \"Recados\",\n    value: 3\n  }];\n  const typeLines = [{\n    label: \"Celular\",\n    value: 1\n  }, {\n    label: \"Fijo\",\n    value: 2\n  }];\n  const typeStreet = [{\n    label: \"Avenida\",\n    value: 1\n  }, {\n    label: \"Boulevard\",\n    value: 2\n  }, {\n    label: \"Calle\",\n    value: 3\n  }]; ////CHANGE DATE\n\n  const onChangeBirthDate = (date, dateString) => {\n    setBirthDate(dateString);\n  };\n\n  const onChangeDateAdmission = (date, dateString) => {\n    setDateAdmission(dateString);\n  };\n\n  const onChangeBDFamily = (date, dateString) => {\n    setBirthDateFam(dateString);\n  };\n\n  const onChangeDateTrainig = (date, dateString) => {\n    setDateTraining(dateString);\n  };\n\n  const onChangeDExJ = (date, dateString) => {\n    setDateExpjob(dateString);\n  }; /////CHANGE CHECKBOX\n\n\n  const checkTravel = () => {\n    checkedTravel ? setCheckedTravel(false) : setCheckedTravel(true);\n  };\n\n  const checkResidence = () => {\n    checkedResidence ? setCheckedResidence(false) : setCheckedResidence(true);\n  };\n\n  const changeCurreStud = () => {\n    currenlyStuding ? setCurrenlyStuding(false) : setCurrenlyStuding(true);\n  }; /////CHANGE SWITCH\n\n\n  const changeStatus = () => {\n    isActive ? setIsActive(false) : setIsActive(true);\n  }; ////LOAD PAGE\n\n\n  useEffect(() => {\n    getValueSelects();\n\n    if (router.query.id) {\n      ///GET PERSON\n      Axios.get(API_URL + `/person/person/${router.query.id}`).then(response => {\n        formPerson.setFieldsValue({\n          first_name: response.data.first_name,\n          flast_name: response.data.flast_name,\n          mlast_name: response.data.mlast_name,\n          gender: response.data.gender,\n          email: response.data.email,\n          curp: response.data.curp,\n          rfc: response.data.rfc,\n          imss: response.data.imss,\n          is_active: response.data.is_active,\n          photo: response.data.photo,\n          civil_status: response.data.civil_status\n        });\n        if (response.data.person_type) formPerson.setFieldsValue({\n          person_type: response.data.person_type.id\n        });\n\n        if (response.data.job_department.department) {\n          formPerson.setFieldsValue({\n            department: response.data.job_department.department.id\n          });\n          Axios.get(API_URL + `/business/department/${response.data.job_department.department.id}/job_for_department/`).then(resp => {\n            if (resp.status === 200) {\n              let job = resp.data;\n              job = job.map(a => {\n                return {\n                  label: a.name,\n                  value: a.id\n                };\n              });\n              setJobs(job);\n              if (response.data.job_department.job) formPerson.setFieldsValue({\n                job: response.data.job_department.job.id\n              });\n            }\n          }).catch(e => {\n            console.log(e);\n          });\n        }\n\n        if (response.data.date_of_admission) formPerson.setFieldsValue({\n          date_of_admission: moment(response.data.date_of_admission)\n        });\n        if (response.data.birth_date) formPerson.setFieldsValue({\n          birth_date: moment(response.data.birth_date)\n        });\n        setDateAdmission(response.data.date_of_admission);\n        setBirthDate(response.data.birth_date);\n        setIsActive(response.data.is_active);\n        if (response.data.photo) setPhoto(response.data.photo);else setPhoto(\"https://khorplus.s3.amazonaws.com/demo/people/person/images/photo-profile/1412021224859/placeholder-profile-sq.jpg\");\n        setLoading(false);\n        setPersonFullName(response.data.first_name + \" \" + response.data.flast_name + \" \" + response.data.mlast_name);\n      }).catch(e => {\n        console.log(e);\n        setLoading(false);\n      }); ///GET GENERAL PERSON\n\n      Axios.get(API_URL + `/person/person/${router.query.id}/general_person/`).then(response => {\n        formGeneralTab.setFieldsValue({\n          place_birth: response.data.place_birth,\n          nationality: response.data.nationality,\n          other_nationality: response.data.other_nationality,\n          availability_travel: response.data.availability_travel,\n          availability_change_residence: response.data.availability_change_residence,\n          allergies: response.data.allergies,\n          blood_type: response.data.blood_type\n        });\n        if (response.data.availability_travel) setCheckedTravel(response.data.availability_travel);\n        if (response.data.availability_change_residence) setCheckedResidence(response.data.availability_change_residence);\n        setIdGeneralP(response.data.id);\n        setLoading(false);\n      }).catch(e => {\n        console.log(e);\n        setLoading(false);\n      }); ///PHONE\n\n      Axios.get(API_URL + `/person/person/${router.query.id}/phone_person/`).then(response => {\n        setPhones(response.data);\n        setLoading(false);\n        setLoadingTable(false);\n      }).catch(e => {\n        console.log(e);\n        setLoading(false);\n        setLoadingTable(false);\n      }); ///ADDRESS\n\n      Axios.get(API_URL + `/person/person/${router.query.id}/address_person/`).then(response => {\n        formAddress.setFieldsValue({\n          street_type: response.data[0].street_type,\n          street: response.data[0].street,\n          numberOne: response.data[0].numberOne,\n          numberTwo: response.data[0].numberTwo,\n          building: response.data[0].building,\n          postalCode: response.data[0].postalCode,\n          suburb: response.data[0].suburb,\n          location: response.data[0].location,\n          reference: response.data[0].reference\n        });\n        setIdAddressP(response.data.id);\n        setLoading(false);\n      }).catch(e => {\n        console.log(e);\n        setLoading(false);\n      }); ///FAMILY\n\n      Axios.get(API_URL + `/person/person/${router.query.id}/family_person/`).then(response => {\n        response.data.map(a => {\n          a.relation = a.relationship.name;\n          a.fullname = a.name + \" \" + a.flast_name + \" \" + a.mlast_name;\n        });\n        setFamily(response.data);\n        setLoading(false);\n        setLoadingTable(false);\n      }).catch(e => {\n        console.log(e);\n        setLoading(false);\n        setLoadingTable(false);\n      }); ///CONTACT EMERGENCY\n\n      Axios.get(API_URL + `/person/person/${router.query.id}/contact_emergency_person/`).then(response => {\n        setContactEmergency(response.data);\n        setLoading(false);\n        setLoadingTable(false);\n      }).catch(e => {\n        console.log(e);\n        setLoading(false);\n        setLoadingTable(false);\n      }); ///TRAINIG\n\n      Axios.get(API_URL + `/person/person/${router.query.id}/training_person/`).then(response => {\n        setTraining(response.data);\n        setLoading(false);\n        setLoadingTable(false);\n      }).catch(e => {\n        console.log(e);\n        setLoading(false);\n        setLoadingTable(false);\n      }); ///JOB EXPERIENCE\n\n      Axios.get(API_URL + `/person/person/${router.query.id}/job_experience_person/`).then(response => {\n        setExperienceJob(response.data);\n        setLoading(false);\n        setLoadingTable(false);\n      }).catch(e => {\n        console.log(e);\n        setLoading(false);\n        setLoadingTable(false);\n      }); ///GET BANK ACCOUNTS\n\n      Axios.get(API_URL + `/person/person/${router.query.id}/bank_account_person/`).then(response => {\n        setBankAccounts(response.data);\n        setLoading(false);\n        setLoadingTable(false);\n      }).catch(e => {\n        console.log(e);\n        setLoading(false);\n        setLoadingTable(false);\n      }); ///GET DOCUMENTS\n\n      Axios.get(API_URL + `/person/person/${router.query.id}/document_person/`).then(response => {\n        setDocuments(response.data);\n        setLoading(false);\n      }).catch(e => {\n        console.log(e);\n        setLoading(false);\n      });\n    }\n  }, [router.query.id]); /////GET DATA SELCTS\n\n  const getValueSelects = async id => {\n    const headers = {\n      \"client-id\": \"5f417a53c37f6275fb614104\",\n      \"Content-Type\": \"application/json\"\n    }; ///GROUPS\n\n    Axios.get(\"https://khonnect.hiumanlab.com/group/list/\", {\n      headers: headers\n    }).then(response => {\n      if (response.status === 200) {\n        let group = response.data.data;\n        group = group.map(a => {\n          return {\n            label: a.name,\n            value: a.id\n          };\n        });\n        setGroups(group);\n      }\n    }).catch(e => {\n      console.log(e);\n    }); /////PERSON TYPE\n\n    Axios.get(API_URL + `/person/person-type/`).then(response => {\n      if (response.status === 200) {\n        let typesPerson = response.data.results;\n        typesPerson = typesPerson.map(a => {\n          return {\n            label: a.name,\n            value: a.id\n          };\n        });\n        setPersonType(typesPerson);\n      }\n    }).catch(e => {\n      console.log(e);\n    }); ////BANK\n\n    Axios.get(API_URL + \"/setup/banks/\").then(response => {\n      if (response.status === 200) {\n        let bank = response.data.results;\n        bank = bank.map(a => {\n          return {\n            label: a.name,\n            value: a.id\n          };\n        });\n        setBanks(bank);\n      }\n    }).catch(e => {\n      console.log(e);\n    }); ////RELATIONSHIP\n\n    Axios.get(API_URL + \"/setup/relationship/\").then(response => {\n      if (response.status === 200) {\n        let relation = response.data.results;\n        relation = relation.map(a => {\n          return {\n            label: a.name,\n            value: a.id\n          };\n        });\n        setRelationship(relation);\n      }\n    }).catch(e => {\n      console.log(e);\n    }); ////LABOR RELATIONSHIP\n\n    Axios.get(API_URL + \"/setup/labor-relationship/\").then(response => {\n      if (response.status === 200) {\n        let relation = response.data.results;\n        relation = relation.map(a => {\n          return {\n            label: a.name,\n            value: a.id\n          };\n        });\n        setLaborRelationship(relation);\n      }\n    }).catch(e => {\n      console.log(e);\n    }); ////RELATIONSHIP\n\n    Axios.get(API_URL + \"/setup/experience-type/\").then(response => {\n      if (response.status === 200) {\n        let experinece = response.data.results;\n        experinece = experinece.map(a => {\n          return {\n            label: a.name,\n            value: a.id\n          };\n        });\n        setExperienceType(experinece);\n      }\n    }).catch(e => {\n      console.log(e);\n    }); ////REASON SEPARATION\n\n    Axios.get(API_URL + \"/setup/reason-separation/\").then(response => {\n      if (response.status === 200) {\n        let reason = response.data.results;\n        reason = reason.map(a => {\n          return {\n            label: a.name,\n            value: a.id\n          };\n        });\n        setReasonSeparation(reason);\n      }\n    }).catch(e => {\n      console.log(e);\n    }); /////DEPARTMENTS\n\n    Axios.get(API_URL + `/business/department/`).then(response => {\n      if (response.status === 200) {\n        let dep = response.data.results;\n        dep = dep.map(a => {\n          return {\n            label: a.name,\n            value: a.id\n          };\n        });\n        setDepartments(dep);\n      }\n    }).catch(e => {\n      console.log(e);\n    });\n  }; ////PERSON\n\n\n  const onFinishPerson = value => {\n    value.birth_date = birthDate;\n    value.date_of_admission = dateAdmission;\n    value.id = router.query.id;\n    value.is_active = isActive;\n    updatePerson(value);\n  };\n\n  const updatePerson = value => {\n    setLoading(true);\n    Axios.put(API_URL + `/person/person/${router.query.id}/`, value).then(response => {\n      formPerson.setFieldsValue({\n        first_name: response.data.first_name,\n        flast_name: response.data.flast_name,\n        mlast_name: response.data.mlast_name,\n        gender: response.data.gender,\n        email: response.data.email,\n        birth_date: moment(response.data.birth_date),\n        curp: response.data.curp,\n        rfc: response.data.rfc,\n        imss: response.data.imss,\n        is_active: response.data.is_active,\n        civil_status: response.data.civil_status,\n        date_of_admission: null\n      });\n      if (response.data.person_type) formPerson.setFieldsValue({\n        person_type: response.data.person_type.id\n      });\n\n      if (response.data.job_department.department) {\n        formPerson.setFieldsValue({\n          department: response.data.job_department.department.id\n        });\n        Axios.get(API_URL + `/business/department/${response.data.job_department.department.id}/job_for_department/`).then(resp => {\n          if (resp.status === 200) {\n            let job = resp.data;\n            job = job.map(a => {\n              return {\n                label: a.name,\n                value: a.id\n              };\n            });\n            setJobs(job);\n            if (response.data.job_department.job) formPerson.setFieldsValue({\n              job: response.data.job_department.job.id\n            });\n          }\n        }).catch(e => {\n          console.log(e);\n        });\n      }\n\n      if (response.data.job_department.job) formPerson.setFieldsValue({\n        job: response.data.job_department.job.id\n      });\n      if (response.data.date_of_admission) formPerson.setFieldsValue({\n        date_of_admission: moment(response.data.date_of_admission)\n      });\n      if (response.data.birth_date) formPerson.setFieldsValue({\n        birth_date: moment(response.data.birth_date)\n      });\n      setBirthDate(response.data.birth_date);\n      setIsActive(response.data.is_active);\n      if (response.data.photo) setPhoto(response.data.photo);\n      setLoading(false);\n      message.success({\n        content: \"Actualizado correctamente.\",\n        className: \"custom-class\"\n      });\n    }).catch(e => {\n      setLoading(false);\n      message.error(\"Error al actualizar, intente de nuevo.\");\n      console.log(e);\n    });\n  };\n\n  const deletePerson = data => {\n    Axios.post(API_URL + `/person/person/delete_by_ids/`, {\n      persons_id: router.query.id\n    }).then(response => {\n      setLoading(false);\n      showModal();\n      message.success(\"Eliminado correctamente.\");\n      Router.push(\"/home\");\n    }).catch(error => {\n      setLoading(false);\n      console.log(error);\n    });\n  }; //////DATOS GENERALES\n\n\n  const formGeneralData = value => {\n    if (idGeneralP != \"\" && idGeneralP != undefined) {\n      value.availability_travel = checkedTravel;\n      value.availability_change_residence = checkedResidence;\n      updateGeneralData(value);\n    } else {\n      value.person = router.query.id;\n      value.availability_travel = checkedTravel;\n      value.availability_change_residence = checkedResidence;\n      saveGeneralData(value);\n    }\n  };\n\n  const saveGeneralData = data => {\n    setLoading(true);\n    Axios.post(API_URL + `/person/general-person/`, data).then(response => {\n      message.success({\n        content: \"Guardado correctamente.\",\n        className: \"custom-class\"\n      });\n      setLoading(false);\n    }).catch(error => {\n      setLoading(false);\n      console.log(error);\n    });\n  };\n\n  const updateGeneralData = data => {\n    setLoading(true);\n    Axios.put(API_URL + `/person/general-person/${idGeneralP}/`, data).then(response => {\n      message.success({\n        content: \"Actualizado correctamente.\",\n        className: \"custom-class\"\n      });\n      setLoading(false);\n    }).catch(error => {\n      setLoading(false);\n      console.log(error);\n    });\n  }; /////TELEFONO\n\n\n  const getPhone = () => {\n    Axios.get(API_URL + `/person/person/${router.query.id}/phone_person/`).then(response => {\n      setPhones(response.data);\n      setLoading(false);\n      setTimeout(() => {\n        setLoadingTable(false);\n      }, 1000);\n    }).catch(e => {\n      console.log(e);\n      setLoading(false);\n      setLoadingTable(false);\n      setTimeout(() => {\n        setLoadingTable(false);\n      }, 1000);\n    });\n  };\n\n  const formFinishPhone = value => {\n    if (upPhone) {\n      value.id = idPhone;\n      value.person = router.query.id;\n      updatePhone(value);\n    } else {\n      value.person = router.query.id;\n      savePhone(value);\n    }\n  };\n\n  const updateFormPhone = item => {\n    formPhone.setFieldsValue({\n      country_code: item.country_code,\n      international_code: item.international_code,\n      line_type: item.line_type,\n      national_code: item.national_code,\n      phone: item.phone,\n      phone_type: item.phone_type\n    });\n    setIdPhone(item.id);\n    setUpPhone(true);\n  };\n\n  const savePhone = data => {\n    Axios.post(API_URL + `/person/phone/`, data).then(response => {\n      message.success({\n        content: \"Guardado correctamente.\",\n        className: \"custom-class\"\n      });\n      setLoading(false);\n      getPhone();\n      formPhone.resetFields();\n    }).catch(error => {\n      console.log(error);\n      setLoading(false);\n    });\n  };\n\n  const updatePhone = data => {\n    setLoading(true);\n    setLoadingTable(true);\n    Axios.put(API_URL + `/person/phone/${data.id}/`, data).then(response => {\n      message.success({\n        content: \"Actualizado correctamente.\",\n        className: \"custom-class\"\n      });\n      setLoading(false);\n      setUpPhone(false);\n      setIdPhone(null);\n      formPhone.resetFields();\n      getPhone();\n      setTimeout(() => {\n        setLoadingTable(false);\n      }, 1000);\n    }).catch(error => {\n      setLoading(false);\n      console.log(error);\n      setTimeout(() => {\n        setLoadingTable(false);\n      }, 1000);\n    });\n  };\n\n  const deletePhone = data => {\n    setLoadingTable(true);\n    Axios.delete(API_URL + `/person/phone/${data}/`).then(response => {\n      message.success({\n        content: \"Eliminado con exito.\",\n        className: \"custom-class\"\n      });\n      setLoading(false);\n      showModal();\n      getPhone();\n      setTimeout(() => {\n        setLoadingTable(false);\n      }, 1000);\n    }).catch(error => {\n      setLoading(false);\n      console.log(error);\n      setTimeout(() => {\n        setLoadingTable(false);\n      }, 1000);\n    });\n  };\n\n  const colPhone = [{\n    title: \"Código de pais\",\n    dataIndex: \"national_code\"\n  }, {\n    title: \"Número\",\n    dataIndex: \"phone\"\n  }, {\n    title: \"Opciones\",\n    render: item => {\n      return /*#__PURE__*/_jsx(\"div\", {\n        children: /*#__PURE__*/_jsxs(Row, {\n          gutter: 16,\n          children: [/*#__PURE__*/_jsx(Col, {\n            className: \"gutter-row\",\n            offset: 1,\n            children: /*#__PURE__*/_jsx(EditOutlined, {\n              style: {\n                fontSize: \"25px\"\n              },\n              onClick: () => updateFormPhone(item)\n            })\n          }), /*#__PURE__*/_jsx(Col, {\n            className: \"gutter-row\",\n            offset: 1,\n            children: /*#__PURE__*/_jsx(DeleteOutlined, {\n              style: {\n                fontSize: \"25px\"\n              },\n              onClick: () => {\n                setDeleteRegister({\n                  id: item.id,\n                  api: \"deletePhone\"\n                });\n              }\n            })\n          })]\n        })\n      });\n    }\n  }]; /////ADDRESS\n\n  const formAddressPerson = value => {\n    if (idAddressP != \"\" && idAddressP != undefined) {\n      updateAddress(value);\n    } else {\n      value.person = router.query.id;\n      saveAddress(value);\n    }\n  };\n\n  const saveAddress = data => {\n    setLoading(true);\n    Axios.post(API_URL + `/person/address/`, data).then(response => {\n      message.success({\n        content: \"Guardado correctamente.\",\n        className: \"custom-class\"\n      });\n      setLoading(false);\n      setIdAddressP(response.data.id);\n    }).catch(error => {\n      setLoading(false);\n      console.log(error);\n    });\n  };\n\n  const updateAddress = data => {\n    setLoading(true);\n    Axios.put(API_URL + `/person/address/${idAddressP}/`, data).then(response => {\n      message.success({\n        content: \"Actualizado correctamente.\",\n        className: \"custom-class\"\n      });\n      setLoading(false);\n    }).catch(error => {\n      setLoading(false);\n      console.log(error);\n    });\n  }; /////FAMILIA\n\n\n  const getFamily = () => {\n    Axios.get(API_URL + `/person/person/${router.query.id}/family_person/`).then(response => {\n      response.data.map(a => {\n        a.relation = a.relationship.name;\n        a.fullname = a.name + \" \" + a.flast_name + \" \" + a.mlast_name;\n      });\n      setFamily(response.data);\n      setLoading(false);\n      setTimeout(() => {\n        setLoadingTable(false);\n      }, 1000);\n    }).catch(e => {\n      console.log(e);\n      setLoading(false);\n      setTimeout(() => {\n        setLoadingTable(false);\n      }, 1000);\n    });\n  };\n\n  const formFinishFamily = value => {\n    if (upFamily) {\n      value.person = router.query.id;\n      value.id = idFamily;\n      value.birth_date = birthDateFam;\n      updateFamily(value);\n    } else {\n      value.person = router.query.id;\n      value.birth_date = birthDateFam;\n      saveFamily(value);\n    }\n  };\n\n  const updateFormFamily = item => {\n    formFamily.setFieldsValue({\n      relationship: item.relationship.id,\n      name: item.name,\n      flast_name: item.flast_name,\n      mlast_name: item.mlast_name,\n      gender: item.gender,\n      life: item.life,\n      benefit: item.benefit,\n      place_birth: item.place_birth,\n      nationality: item.nationality,\n      other_nationality: item.other_nationality\n    });\n    setBirthDateFam(item.birth_date);\n    if (item.birth_date) formFamily.setFieldsValue({\n      birth_date: moment(item.birth_date)\n    });\n    if (item.job) formFamily.setFieldsValue({\n      job: item.job.id\n    });\n    setIdFamily(item.id);\n    setUpFamily(true);\n  };\n\n  const saveFamily = data => {\n    setLoading(true);\n    Axios.post(API_URL + `/person/family/`, data).then(response => {\n      message.success({\n        content: \"Guardado correctamente.\",\n        className: \"custom-class\"\n      });\n      setLoading(false);\n      getFamily();\n      formFamily.resetFields();\n    }).catch(error => {\n      setLoading(false);\n      console.log(error);\n    });\n  };\n\n  const updateFamily = data => {\n    setLoading(true);\n    setLoadingTable(true);\n    Axios.put(API_URL + `/person/family/${data.id}/`, data).then(response => {\n      message.success({\n        content: \"Actualizado correctamente.\",\n        className: \"custom-class\"\n      });\n      setLoading(false);\n      setUpFamily(false);\n      setIdFamily(null);\n      formFamily.resetFields();\n      getFamily();\n      setTimeout(() => {\n        setLoadingTable(false);\n      }, 1000);\n    }).catch(error => {\n      setLoading(false);\n      console.log(error);\n      setTimeout(() => {\n        setLoadingTable(false);\n      }, 1000);\n    });\n  };\n\n  const deleteFamily = data => {\n    setLoadingTable(true);\n    Axios.delete(API_URL + `/person/family/${data}/`).then(response => {\n      message.success({\n        content: \"Eliminado con exito.\",\n        className: \"custom-class\"\n      });\n      setLoading(false);\n      showModal();\n      getFamily();\n      setTimeout(() => {\n        setLoadingTable(false);\n      }, 1000);\n    }).catch(error => {\n      setLoading(false);\n      console.log(error);\n      setTimeout(() => {\n        setLoadingTable(false);\n      }, 1000);\n    });\n  };\n\n  const colFamily = [{\n    title: \"Nombre\",\n    dataIndex: \"fullname\"\n  }, {\n    title: \"Parentesco\",\n    dataIndex: \"relation\"\n  }, {\n    title: \"Beneficio\",\n    dataIndex: \"benefit\"\n  }, {\n    title: \"Opciones\",\n    render: item => {\n      return /*#__PURE__*/_jsx(\"div\", {\n        children: /*#__PURE__*/_jsxs(Row, {\n          gutter: 16,\n          children: [/*#__PURE__*/_jsx(Col, {\n            className: \"gutter-row\",\n            offset: 1,\n            children: /*#__PURE__*/_jsx(EditOutlined, {\n              style: {\n                fontSize: \"25px\"\n              },\n              onClick: () => updateFormFamily(item)\n            })\n          }), /*#__PURE__*/_jsx(Col, {\n            className: \"gutter-row\",\n            offset: 1,\n            children: /*#__PURE__*/_jsx(DeleteOutlined, {\n              style: {\n                fontSize: \"25px\"\n              },\n              onClick: () => {\n                setDeleteRegister({\n                  id: item.id,\n                  api: \"deleteFamily\"\n                });\n              }\n            })\n          })]\n        })\n      });\n    }\n  }]; /////CONTACTO DE EMERGENCIA\n\n  const getContactEmergency = () => {\n    Axios.get(API_URL + `/person/person/${router.query.id}/contact_emergency_person/`).then(response => {\n      setContactEmergency(response.data);\n      setLoading(false);\n      setTimeout(() => {\n        setLoadingTable(false);\n      }, 1000);\n    }).catch(e => {\n      console.log(e);\n      setLoading(false);\n      setTimeout(() => {\n        setLoadingTable(false);\n      }, 1000);\n    });\n  };\n\n  const formFinishContactE = value => {\n    if (upContEm) {\n      value.id = idContEm;\n      updateContEm(value);\n    } else {\n      value.person = router.query.id;\n      saveContactE(value);\n    }\n  };\n\n  const updateFormContEm = item => {\n    formContactEmergency.setFieldsValue({\n      relationship: item.relationship.id,\n      address: item.address,\n      fullname: item.fullname,\n      phone_one: item.phone_one,\n      phone_two: item.phone_two\n    });\n    setIdContEm(item.id);\n    setUpContEm(true);\n  };\n\n  const saveContactE = data => {\n    Axios.post(API_URL + `/person/contact-emergency/`, data).then(response => {\n      message.success({\n        content: \"Guardado correctamente.\",\n        className: \"custom-class\"\n      });\n      setLoading(false);\n      getContactEmergency();\n      formContactEmergency.resetFields();\n    }).catch(error => {\n      setLoading(false);\n      console.log(error);\n    });\n  };\n\n  const updateContEm = data => {\n    setLoading(true);\n    setLoadingTable(true);\n    Axios.put(API_URL + `/person/contact-emergency/${data.id}/`, data).then(response => {\n      message.success({\n        content: \"Actualizado correctamente.\",\n        className: \"custom-class\"\n      });\n      setLoading(false);\n      setUpContEm(false);\n      setIdContEm(null);\n      getContactEmergency();\n      formContactEmergency.resetFields();\n      setTimeout(() => {\n        setLoadingTable(false);\n      }, 1000);\n    }).catch(error => {\n      setLoading(false);\n      console.log(error);\n      setTimeout(() => {\n        setLoadingTable(false);\n      }, 1000);\n    });\n  };\n\n  const deleteContEm = data => {\n    setLoading(true);\n    setLoadingTable(true);\n    Axios.delete(API_URL + `/person/contact-emergency/${data}/`).then(response => {\n      message.success({\n        content: \"Eliminado correctamente.\",\n        className: \"custom-class\"\n      });\n      setLoading(false);\n      getContactEmergency;\n      setTimeout(() => {\n        setLoadingTable(false);\n      }, 1000);\n    }).catch(error => {\n      setLoading(false);\n      console.log(error);\n      setTimeout(() => {\n        setLoadingTable(false);\n      }, 1000);\n    });\n  };\n\n  const colContact = [{\n    title: \"Nombre\",\n    dataIndex: \"fullname\"\n  }, {\n    title: \"Teléfono 1\",\n    dataIndex: \"phone_one\"\n  }, {\n    title: \"Teléfono 2\",\n    dataIndex: \"phone_two\"\n  }, {\n    title: \"Dirección\",\n    dataIndex: \"address\"\n  }, {\n    title: \"Opciones\",\n    render: item => {\n      return /*#__PURE__*/_jsx(\"div\", {\n        children: /*#__PURE__*/_jsxs(Row, {\n          gutter: 16,\n          children: [/*#__PURE__*/_jsx(Col, {\n            className: \"gutter-row\",\n            offset: 1,\n            children: /*#__PURE__*/_jsx(EditOutlined, {\n              style: {\n                fontSize: \"25px\"\n              },\n              onClick: () => updateFormContEm(item)\n            })\n          }), /*#__PURE__*/_jsx(Col, {\n            className: \"gutter-row\",\n            offset: 1,\n            children: /*#__PURE__*/_jsx(DeleteOutlined, {\n              style: {\n                fontSize: \"25px\"\n              },\n              onClick: () => {\n                setDeleteRegister({\n                  id: item.id,\n                  api: \"deleteContEm\"\n                });\n              }\n            })\n          })]\n        })\n      });\n    }\n  }]; /////FORMACION Y HABILIDADES\n\n  const getTraining = () => {\n    setLoadingTable(true);\n    Axios.get(API_URL + `/person/person/${router.query.id}/training_person/`).then(response => {\n      setTraining(response.data);\n      setLoading(false);\n      setTimeout(() => {\n        setLoadingTable(false);\n      }, 1000);\n    }).catch(e => {\n      console.log(e);\n      setLoading(false);\n      setTimeout(() => {\n        setLoadingTable(false);\n      }, 1000);\n    });\n  };\n\n  const formFinishTraining = value => {\n    if (upTraining) {} else {\n      value.since = dateTraining[0];\n      value.until = dateTraining[1];\n      value.currently_studing = currenlyStuding;\n      value.person = router.query.id;\n      saveTraining(value);\n    }\n  };\n\n  const saveTraining = data => {\n    setLoading(true);\n    Axios.post(API_URL + `/person/training/`, data).then(response => {\n      message.success({\n        content: \"Guardado correctamente.\",\n        className: \"custom-class\"\n      });\n      setLoading(false);\n      getTraining();\n      formTraining.resetFields();\n      setTimeout(() => {\n        setLoadingTable(false);\n      }, 1000);\n    }).catch(error => {\n      setLoading(false);\n      console.log(error);\n      setTimeout(() => {\n        setLoadingTable(false);\n      }, 1000);\n    });\n  };\n\n  const colTraining = [{\n    title: \"Escuela\",\n    dataIndex: \"school\"\n  }, {\n    title: \"Fecha inicio\",\n    dataIndex: \"since\"\n  }, {\n    title: \"Fecha fin\",\n    dataIndex: \"until\"\n  }, {\n    title: \"Documento\",\n    dataIndex: \"accreditation_document\"\n  }]; /////EPERIENCIA LABORAL\n\n  const getJobExperience = () => {\n    Axios.get(API_URL + `/person/person/${router.query.id}/job_experience_person/`).then(response => {\n      setExperienceJob(response.data);\n      setLoading(false);\n    }).catch(e => {\n      console.log(e);\n      setLoading(false);\n    });\n  };\n\n  const formFinishJobExp = value => {\n    if (upExperienceJob) {} else {\n      value.person = router.query.id;\n      value.since = dateExpjob[0];\n      value.until = dateExpjob[1];\n      saveJobExp(value);\n    }\n  };\n\n  const saveJobExp = data => {\n    setLoading(true);\n    Axios.post(API_URL + `/person/experience-job/`, data).then(response => {\n      message.success({\n        content: \"Guardado correctamente.\",\n        className: \"custom-class\"\n      });\n      setLoading(false);\n      formExperiencejob.resetFields();\n      getJobExperience();\n    }).catch(error => {\n      setLoading(false);\n      console.log(error);\n    });\n  };\n\n  const colExpJob = [{\n    title: \"Empresa\",\n    dataIndex: \"company\"\n  }, {\n    title: \"Puesto\",\n    dataIndex: \"function\"\n  }]; /////CUENTAS BANCARIAS\n\n  const getBankAccount = () => {\n    setLoadingTable(true);\n    Axios.get(API_URL + `/person/person/${router.query.id}/bank_account_person/`).then(response => {\n      setBankAccounts(response.data);\n      setLoading(false);\n      setTimeout(() => {\n        setLoadingTable(false);\n      }, 1000);\n    }).catch(e => {\n      console.log(e);\n      setLoading(false);\n      setTimeout(() => {\n        setLoadingTable(false);\n      }, 1000);\n    });\n  };\n\n  const formBankAcc = value => {\n    if (upBankAcc) {\n      value.id = idBankAcc;\n      updateBankAcc(value);\n    } else {\n      value.person = router.query.id;\n      saveBankAcc(value);\n    }\n  };\n\n  const updateFormbankAcc = item => {\n    formBank.setFieldsValue({\n      bank: item.bank.id,\n      account_number: item.account_number,\n      interbank_key: item.interbank_key\n    });\n    setIdBankAcc(item.id);\n    setUpBankAcc(true);\n  };\n\n  const saveBankAcc = data => {\n    setLoading(true);\n    Axios.post(API_URL + `/person/bank-account/`, data).then(response => {\n      message.success({\n        content: \"Guardado correctamente.\",\n        className: \"custom-class\"\n      });\n      setLoading(false);\n      getBankAccount();\n      formBank.resetFields();\n    }).catch(error => {\n      setLoading(false);\n      console.log(error);\n    });\n  };\n\n  const updateBankAcc = data => {\n    setLoading(true);\n    setLoadingTable(true);\n    Axios.put(API_URL + `/person/bank-account/${data.id}/`, data).then(response => {\n      message.success({\n        content: \"Actualizado correctamente.\",\n        className: \"custom-class\"\n      });\n      setLoading(false);\n      setUpBankAcc(false);\n      setIdBankAcc(null);\n      formBank.resetFields();\n      getBankAccount();\n      setTimeout(() => {\n        setLoadingTable(false);\n      }, 1000);\n    }).catch(error => {\n      setLoading(false);\n      console.log(error);\n      setTimeout(() => {\n        setLoadingTable(false);\n      }, 1000);\n    });\n  };\n\n  const deleteBankAcc = data => {\n    setLoadingTable(true);\n    Axios.delete(API_URL + `/person/bank-account/${data}/`).then(response => {\n      message.success({\n        content: \"Eliminado con exito.\",\n        className: \"custom-class\"\n      });\n      setLoading(false);\n      showModal();\n      getBankAccount();\n      setTimeout(() => {\n        setLoadingTable(false);\n      }, 1000);\n    }).catch(error => {\n      setLoading(false);\n      console.log(error);\n      setTimeout(() => {\n        setLoadingTable(false);\n      }, 1000);\n    });\n  };\n\n  const colBank = [{\n    title: \"Banco\",\n    render: item => {\n      return /*#__PURE__*/_jsx(_Fragment, {\n        children: item.bank.name\n      });\n    },\n    key: \"id\"\n  }, {\n    title: \"Número de cuenta\",\n    dataIndex: \"account_number\",\n    key: \"account_number\"\n  }, {\n    title: \"Clave interbancaria\",\n    dataIndex: \"interbank_key\",\n    key: \"interbank_key\"\n  }, {\n    title: \"Opciones\",\n    render: item => {\n      return /*#__PURE__*/_jsx(\"div\", {\n        children: /*#__PURE__*/_jsxs(Row, {\n          gutter: 16,\n          children: [/*#__PURE__*/_jsx(Col, {\n            className: \"gutter-row\",\n            offset: 1,\n            children: /*#__PURE__*/_jsx(EditOutlined, {\n              style: {\n                fontSize: \"25px\"\n              },\n              onClick: () => updateFormbankAcc(item)\n            })\n          }), /*#__PURE__*/_jsx(Col, {\n            className: \"gutter-row\",\n            offset: 1,\n            children: /*#__PURE__*/_jsx(DeleteOutlined, {\n              style: {\n                fontSize: \"25px\"\n              },\n              onClick: () => {\n                setDeleteRegister({\n                  id: item.id,\n                  api: \"deleteBankAcc\"\n                });\n              }\n            })\n          })]\n        })\n      });\n    }\n  }]; ////DOCUMENT\n\n  const getDocument = () => {\n    setLoading(true);\n    setLoadingTable(true);\n    Axios.get(API_URL + `/person/person/${router.query.id}/document_person/`).then(response => {\n      setDocuments(response.data);\n      setLoading(false);\n      setTimeout(() => {\n        setLoadingTable(false);\n      }, 1000);\n    }).catch(e => {\n      console.log(e);\n      setLoading(false);\n      setTimeout(() => {\n        setLoadingTable(false);\n      }, 1000);\n    });\n  };\n\n  const getModalDoc = value => {\n    setModalDoc(value);\n    getDocument();\n  };\n\n  const deleteDocument = value => {\n    setLoading(true);\n    Axios.delete(API_URL + `/person/document/${value}/`).then(response => {\n      getDocument();\n      showModal();\n      setLoading(false);\n    }).catch(e => {\n      console.log(e);\n      setLoading(false);\n    });\n  };\n\n  const colDoc = [{\n    title: \"Tipo documento\",\n    render: item => {\n      return /*#__PURE__*/_jsx(_Fragment, {\n        children: item.document_type.name\n      });\n    }\n  }, {\n    title: \"Descripción\",\n    dataIndex: \"description\",\n    key: \"id\"\n  }, {\n    title: \"Documento\",\n    render: item => {\n      return /*#__PURE__*/_jsx(\"div\", {\n        children: /*#__PURE__*/_jsx(Row, {\n          gutter: 16,\n          children: /*#__PURE__*/_jsx(Col, {\n            className: \"gutter-row\",\n            offset: 1,\n            children: /*#__PURE__*/_jsx(\"a\", {\n              href: item.document,\n              children: /*#__PURE__*/_jsx(FileTextOutlined, {\n                style: {\n                  fontSize: \"30px\"\n                }\n              })\n            })\n          })\n        })\n      });\n    }\n  }, {\n    title: \"Opciones\",\n    render: item => {\n      return /*#__PURE__*/_jsx(\"div\", {\n        children: /*#__PURE__*/_jsx(Row, {\n          gutter: 16,\n          children: /*#__PURE__*/_jsx(Col, {\n            className: \"gutter-row\",\n            offset: 1,\n            children: /*#__PURE__*/_jsx(DeleteOutlined, {\n              style: {\n                fontSize: \"25px\"\n              },\n              onClick: () => {\n                setDeleteRegister({\n                  id: item.id,\n                  api: \"deleteDocument\"\n                });\n              }\n            })\n          })\n        })\n      });\n    }\n  }]; /////DELETE REGISTER\n\n  const setDeleteRegister = props => {\n    setDeleted(props);\n    showModal();\n  };\n\n  const deleteRegister = () => {\n    if (deleted.api == \"deleteBankAcc\") deleteBankAcc(deleted.id);\n    if (deleted.api == \"deletePerson\") deletePerson();\n    if (deleted.api == \"deletePhone\") deletePhone(deleted.id);\n    if (deleted.api == \"deleteContEm\") deleteContEm(deleted.id);\n    if (deleted.api == \"deleteFamily\") deleteFamily(deleted.id);\n    if (deleted.api == \"deleteDocument\") deleteDocument(deleted.id);\n  }; //////SHOW MODAL DELETE\n\n\n  const showModal = () => {\n    modal ? setModal(false) : setModal(true);\n  }; /////GET JOBS\n\n\n  const onChangeDepartment = value => {\n    Axios.get(API_URL + `/business/department/${value}/job_for_department/`).then(response => {\n      if (response.status === 200) {\n        let job = response.data;\n        job = job.map(a => {\n          return {\n            label: a.name,\n            value: a.id\n          };\n        });\n        setJobs(job);\n      }\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/_jsxs(Layout, {\n      children: [/*#__PURE__*/_jsx(HeaderCustom, {}), /*#__PURE__*/_jsxs(Content, {\n        className: \"site-layout\",\n        style: {\n          padding: \"0 50px\",\n          marginTop: 64\n        },\n        children: [/*#__PURE__*/_jsxs(Breadcrumb, {\n          style: {\n            margin: \"16px 0\"\n          },\n          children: [/*#__PURE__*/_jsx(Breadcrumb.Item, {\n            children: \"Home\"\n          }), /*#__PURE__*/_jsx(Breadcrumb.Item, {\n            href: \"/home/\",\n            children: \"Person\"\n          }), /*#__PURE__*/_jsx(Breadcrumb.Item, {\n            children: \"Expediente de empleados\"\n          })]\n        }), /*#__PURE__*/_jsx(Spin, {\n          tip: \"Loading...\",\n          spinning: loading,\n          children: /*#__PURE__*/_jsxs(\"div\", {\n            className: \"site-layout-background\",\n            style: {\n              padding: 24,\n              minHeight: 380,\n              height: \"100%\"\n            },\n            children: [/*#__PURE__*/_jsx(Title, {\n              level: 3,\n              children: \"Informaci\\xF3n Personal\"\n            }), /*#__PURE__*/_jsx(Title, {\n              level: 4,\n              style: {\n                marginTop: 0\n              },\n              children: personFullName\n            }), /*#__PURE__*/_jsxs(Card, {\n              bordered: true,\n              children: [/*#__PURE__*/_jsxs(Form, {\n                onFinish: onFinishPerson,\n                layout: \"vertical\",\n                form: formPerson,\n                children: [/*#__PURE__*/_jsxs(Row, {\n                  children: [/*#__PURE__*/_jsx(Col, {\n                    span: 17,\n                    children: /*#__PURE__*/_jsxs(Row, {\n                      children: [/*#__PURE__*/_jsx(Col, {\n                        lg: 7,\n                        xs: 22,\n                        offset: 1,\n                        children: /*#__PURE__*/_jsx(Form.Item, {\n                          name: \"flast_name\",\n                          label: \"Apellido Paterno\",\n                          rules: [{\n                            message: \"Ingresa un apellido paterno\"\n                          }],\n                          children: /*#__PURE__*/_jsx(Input, {})\n                        })\n                      }), /*#__PURE__*/_jsx(Col, {\n                        lg: 7,\n                        xs: 22,\n                        offset: 1,\n                        children: /*#__PURE__*/_jsx(Form.Item, {\n                          name: \"mlast_name\",\n                          label: \"Apellido Materno\",\n                          rules: [{\n                            message: \"Ingresa un apellido paterno\"\n                          }],\n                          children: /*#__PURE__*/_jsx(Input, {})\n                        })\n                      }), /*#__PURE__*/_jsx(Col, {\n                        lg: 7,\n                        xs: 22,\n                        offset: 1,\n                        children: /*#__PURE__*/_jsx(Form.Item, {\n                          name: \"first_name\",\n                          label: \"Nombre(s)\",\n                          rules: [{\n                            message: \"Ingresa un nombre\"\n                          }],\n                          children: /*#__PURE__*/_jsx(Input, {})\n                        })\n                      }), /*#__PURE__*/_jsx(Col, {\n                        lg: 7,\n                        xs: 22,\n                        offset: 1,\n                        children: /*#__PURE__*/_jsx(Form.Item, {\n                          name: \"node\",\n                          label: \"Unidad organizacional\",\n                          children: /*#__PURE__*/_jsx(Input, {})\n                        })\n                      }), /*#__PURE__*/_jsx(Col, {\n                        lg: 7,\n                        xs: 22,\n                        offset: 1,\n                        children: /*#__PURE__*/_jsx(Form.Item, {\n                          name: \"unit\",\n                          label: \"Reporta a \",\n                          children: /*#__PURE__*/_jsx(Input, {})\n                        })\n                      }), /*#__PURE__*/_jsx(Col, {\n                        lg: 7,\n                        xs: 22,\n                        offset: 1,\n                        children: /*#__PURE__*/_jsx(Form.Item, {\n                          name: \"department\",\n                          label: \"Departamento\",\n                          children: /*#__PURE__*/_jsx(Select, {\n                            options: departments,\n                            onChange: onChangeDepartment,\n                            placeholder: \"Departamento\"\n                          })\n                        })\n                      }), /*#__PURE__*/_jsx(Col, {\n                        lg: 7,\n                        xs: 22,\n                        offset: 1,\n                        children: /*#__PURE__*/_jsx(Form.Item, {\n                          name: \"job\",\n                          label: \"Puesto\",\n                          children: /*#__PURE__*/_jsx(Select, {\n                            options: jobs,\n                            placeholder: \"Selecciona un puesto\"\n                          })\n                        })\n                      })]\n                    })\n                  }), /*#__PURE__*/_jsx(Col, {\n                    span: 6,\n                    children: /*#__PURE__*/_jsxs(Row, {\n                      justify: \"center\",\n                      align: \"top\",\n                      children: [/*#__PURE__*/_jsx(Image, {\n                        width: 200,\n                        src: photo\n                      }), /*#__PURE__*/_jsxs(Col, {\n                        children: [/*#__PURE__*/_jsx(Form.Item, {\n                          name: \"date_of_admission\",\n                          label: \"Fecha de ingreso\",\n                          children: /*#__PURE__*/_jsx(DatePicker, {\n                            onChange: onChangeDateAdmission,\n                            moment: \"YYYY-MM-DD\"\n                          })\n                        }), /*#__PURE__*/_jsx(Switch, {\n                          checked: isActive,\n                          onClick: changeStatus,\n                          checkedChildren: \"Activo\",\n                          unCheckedChildren: \"Inactivo\"\n                        })]\n                      })]\n                    })\n                  })]\n                }), /*#__PURE__*/_jsx(Collapse, {\n                  children: /*#__PURE__*/_jsxs(Panel, {\n                    header: \"Informacion adicional\",\n                    children: [/*#__PURE__*/_jsx(Col, {\n                      children: /*#__PURE__*/_jsxs(Row, {\n                        flex: true,\n                        children: [/*#__PURE__*/_jsx(Col, {\n                          lg: 6,\n                          xs: 22,\n                          offset: 1,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"email\",\n                            label: \"Direcci\\xF3n de E-Mail\",\n                            rules: [{\n                              message: \"Ingresa un email\"\n                            }],\n                            children: /*#__PURE__*/_jsx(Input, {\n                              disabled: true\n                            })\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          lg: 6,\n                          xs: 22,\n                          offset: 1,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"birth_date\",\n                            label: \"Fecha de nacimiento\",\n                            children: /*#__PURE__*/_jsx(DatePicker, {\n                              style: {\n                                width: \"100%\"\n                              },\n                              onChange: onChangeBirthDate,\n                              moment: \"YYYY-MM-DD\",\n                              placeholder: \"Fecha de nacimiento\"\n                            })\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          lg: 6,\n                          xs: 22,\n                          offset: 1,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"civil_status\",\n                            label: \"Estado Civil\",\n                            children: /*#__PURE__*/_jsx(Select, {\n                              options: civilStatus\n                            })\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          lg: 6,\n                          xs: 22,\n                          offset: 1,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"gender\",\n                            label: \"G\\xE9nero\",\n                            children: /*#__PURE__*/_jsx(Select, {\n                              options: genders\n                            })\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          lg: 6,\n                          xs: 22,\n                          offset: 1,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"curp\",\n                            label: \"CURP\",\n                            children: /*#__PURE__*/_jsx(Input, {})\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          lg: 6,\n                          xs: 22,\n                          offset: 1,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"rfc\",\n                            label: \"RFC\",\n                            children: /*#__PURE__*/_jsx(Input, {})\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          lg: 6,\n                          xs: 22,\n                          offset: 1,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"imss\",\n                            label: \"IMSS\",\n                            children: /*#__PURE__*/_jsx(Input, {})\n                          })\n                        })]\n                      })\n                    }), /*#__PURE__*/_jsx(Row, {\n                      flex: true,\n                      children: /*#__PURE__*/_jsx(Form.Item, {\n                        children: /*#__PURE__*/_jsx(Button, {\n                          type: \"primary\",\n                          htmlType: \"submit\",\n                          children: \"Guardar\"\n                        })\n                      })\n                    })]\n                  })\n                })]\n              }), /*#__PURE__*/_jsxs(Collapse, {\n                accordion: true,\n                children: [/*#__PURE__*/_jsx(Panel, {\n                  header: \"Datos generales\",\n                  children: /*#__PURE__*/_jsxs(Form, {\n                    layout: \"vertical\",\n                    form: formGeneralTab,\n                    onFinish: formGeneralData,\n                    children: [/*#__PURE__*/_jsx(Col, {\n                      span: 24,\n                      children: /*#__PURE__*/_jsxs(Row, {\n                        children: [/*#__PURE__*/_jsx(Col, {\n                          lg: 6,\n                          xs: 22,\n                          offset: 1,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"place_birth\",\n                            label: \"Lugar de nacimiento\",\n                            children: /*#__PURE__*/_jsx(Input, {})\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          lg: 6,\n                          xs: 22,\n                          offset: 1,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"nationality\",\n                            label: \"Nacionalidad\",\n                            children: /*#__PURE__*/_jsx(Input, {})\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          lg: 6,\n                          xs: 22,\n                          offset: 1,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"other_nationality\",\n                            label: \"Otra nacionalidad\",\n                            children: /*#__PURE__*/_jsx(Input, {})\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          lg: 6,\n                          xs: 22,\n                          offset: 1,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"allergies\",\n                            label: \"Alergias\",\n                            children: /*#__PURE__*/_jsx(Input, {})\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          lg: 6,\n                          xs: 22,\n                          offset: 1,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"blood_type\",\n                            label: \"Tipo de sangre\",\n                            children: /*#__PURE__*/_jsx(Input, {})\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          lg: 6,\n                          xs: 22,\n                          offset: 1,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"availability_travel\",\n                            label: \"Disponibilidad para viajar\",\n                            children: /*#__PURE__*/_jsx(Checkbox, {\n                              onClick: checkTravel,\n                              checked: checkedTravel\n                            })\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          lg: 6,\n                          xs: 22,\n                          offset: 1,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            label: \"Cambio de residencia\",\n                            children: /*#__PURE__*/_jsx(Checkbox, {\n                              onClick: checkResidence,\n                              checked: checkedResidence\n                            })\n                          })\n                        })]\n                      })\n                    }), /*#__PURE__*/_jsx(Row, {\n                      flex: true,\n                      children: /*#__PURE__*/_jsx(Form.Item, {\n                        children: /*#__PURE__*/_jsx(Button, {\n                          type: \"primary\",\n                          htmlType: \"submit\",\n                          children: \"Guardar\"\n                        })\n                      })\n                    })]\n                  })\n                }), /*#__PURE__*/_jsxs(Panel, {\n                  header: \"Tel\\xE9fono\",\n                  children: [/*#__PURE__*/_jsxs(Form, {\n                    layout: \"vertical\",\n                    form: formPhone,\n                    onFinish: formFinishPhone,\n                    children: [/*#__PURE__*/_jsx(Col, {\n                      children: /*#__PURE__*/_jsxs(Row, {\n                        flex: true,\n                        children: [/*#__PURE__*/_jsx(Col, {\n                          lg: 6,\n                          xs: 22,\n                          offset: 1,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"phone_type\",\n                            label: \"Tipo de telefono\",\n                            children: /*#__PURE__*/_jsx(Select, {\n                              options: typePhones\n                            })\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          lg: 6,\n                          xs: 22,\n                          offset: 1,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"line_type\",\n                            label: \"Tipo de linea\",\n                            children: /*#__PURE__*/_jsx(Select, {\n                              options: typeLines\n                            })\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          lg: 6,\n                          xs: 22,\n                          offset: 1,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"international_code\",\n                            label: \"C\\xF3digo internacional\",\n                            children: /*#__PURE__*/_jsx(Input, {})\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          lg: 6,\n                          xs: 22,\n                          offset: 1,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"national_code\",\n                            label: \"C\\xF3digo de pais\",\n                            children: /*#__PURE__*/_jsx(Input, {})\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          lg: 6,\n                          xs: 22,\n                          offset: 1,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"country_code\",\n                            label: \"C\\xF3digo de ciudad\",\n                            children: /*#__PURE__*/_jsx(Input, {})\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          lg: 6,\n                          xs: 22,\n                          offset: 1,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"phone\",\n                            label: \"N\\xFAmero telef\\xF3nico\",\n                            children: /*#__PURE__*/_jsx(Input, {})\n                          })\n                        })]\n                      })\n                    }), /*#__PURE__*/_jsx(Row, {\n                      flex: true,\n                      children: /*#__PURE__*/_jsx(Form.Item, {\n                        children: /*#__PURE__*/_jsx(Button, {\n                          type: \"primary\",\n                          htmlType: \"submit\",\n                          children: \"Guardar\"\n                        })\n                      })\n                    })]\n                  }), /*#__PURE__*/_jsx(Spin, {\n                    tip: \"Loading...\",\n                    spinning: loadingTable,\n                    children: /*#__PURE__*/_jsx(Table, {\n                      columns: colPhone,\n                      dataSource: phones\n                    })\n                  })]\n                }), /*#__PURE__*/_jsx(Panel, {\n                  header: \"Direcci\\xF3n\",\n                  children: /*#__PURE__*/_jsxs(Form, {\n                    layout: \"vertical\",\n                    form: formAddress,\n                    onFinish: formAddressPerson,\n                    children: [/*#__PURE__*/_jsx(Col, {\n                      children: /*#__PURE__*/_jsxs(Row, {\n                        flex: true,\n                        children: [/*#__PURE__*/_jsx(Col, {\n                          lg: 6,\n                          xs: 22,\n                          offset: 1,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"street_type\",\n                            label: \"Tipo de calle\",\n                            children: /*#__PURE__*/_jsx(Select, {\n                              options: typeStreet\n                            })\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          lg: 6,\n                          xs: 22,\n                          offset: 1,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"street\",\n                            label: \"Calle\",\n                            children: /*#__PURE__*/_jsx(Input, {})\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          lg: 6,\n                          xs: 22,\n                          offset: 1,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"numberOne\",\n                            label: \"N\\xFAmero exterior\",\n                            children: /*#__PURE__*/_jsx(Input, {})\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          lg: 6,\n                          xs: 22,\n                          offset: 1,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"numberTwo\",\n                            label: \"N\\xFAmero interior\",\n                            children: /*#__PURE__*/_jsx(Input, {})\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          lg: 6,\n                          xs: 22,\n                          offset: 1,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"building\",\n                            label: \"Edificio\",\n                            children: /*#__PURE__*/_jsx(Input, {})\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          lg: 6,\n                          xs: 22,\n                          offset: 1,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"postalCode\",\n                            label: \"C\\xF3digo postal\",\n                            children: /*#__PURE__*/_jsx(Input, {})\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          lg: 6,\n                          xs: 22,\n                          offset: 1,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"suburb\",\n                            label: \"Suburbio\",\n                            children: /*#__PURE__*/_jsx(Input, {})\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          lg: 6,\n                          xs: 22,\n                          offset: 1,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"location\",\n                            label: \"Ubicacion\",\n                            children: /*#__PURE__*/_jsx(Input, {})\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          lg: 6,\n                          xs: 22,\n                          offset: 1,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"reference\",\n                            label: \"Referencia\",\n                            children: /*#__PURE__*/_jsx(Input, {})\n                          })\n                        })]\n                      })\n                    }), /*#__PURE__*/_jsx(Row, {\n                      flex: true,\n                      children: /*#__PURE__*/_jsx(Form.Item, {\n                        children: /*#__PURE__*/_jsx(Button, {\n                          type: \"primary\",\n                          htmlType: \"submit\",\n                          children: \"Guardar\"\n                        })\n                      })\n                    })]\n                  })\n                }), /*#__PURE__*/_jsxs(Panel, {\n                  header: \"Familia\",\n                  children: [/*#__PURE__*/_jsxs(Form, {\n                    layout: \"vertical\",\n                    form: formFamily,\n                    onFinish: formFinishFamily,\n                    children: [/*#__PURE__*/_jsx(Col, {\n                      children: /*#__PURE__*/_jsxs(Row, {\n                        flex: true,\n                        children: [/*#__PURE__*/_jsx(Col, {\n                          lg: 6,\n                          xs: 22,\n                          offset: 1,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"relationship\",\n                            label: \"Parentesco\",\n                            children: /*#__PURE__*/_jsx(Select, {\n                              options: relationship\n                            })\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          lg: 6,\n                          xs: 22,\n                          offset: 1,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"job\",\n                            label: \"Puesto de trabajo\",\n                            children: /*#__PURE__*/_jsx(Select, {\n                              options: jobs\n                            })\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          lg: 6,\n                          xs: 22,\n                          offset: 1,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"name\",\n                            label: \"Nombre\",\n                            children: /*#__PURE__*/_jsx(Input, {})\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          lg: 6,\n                          xs: 22,\n                          offset: 1,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"flast_name\",\n                            label: \"Apellido paterno\",\n                            children: /*#__PURE__*/_jsx(Input, {})\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          lg: 6,\n                          xs: 22,\n                          offset: 1,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"mlast_name\",\n                            label: \"Apellido materno\",\n                            children: /*#__PURE__*/_jsx(Input, {})\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          lg: 6,\n                          xs: 22,\n                          offset: 1,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"gender\",\n                            label: \"Genero\",\n                            children: /*#__PURE__*/_jsx(Select, {\n                              options: genders\n                            })\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          lg: 6,\n                          xs: 22,\n                          offset: 1,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"liffe\",\n                            label: \"\\xBFVive?\",\n                            children: /*#__PURE__*/_jsx(Checkbox, {})\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          lg: 6,\n                          xs: 22,\n                          offset: 1,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"birth_date\",\n                            label: \"Fecha de nacimiento\",\n                            children: /*#__PURE__*/_jsx(DatePicker, {\n                              style: {\n                                width: \"100%\"\n                              },\n                              onChange: onChangeBDFamily,\n                              moment: \"YYYY-MM-DD\"\n                            })\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          lg: 6,\n                          xs: 22,\n                          offset: 1,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"place_birth\",\n                            label: \"Lugar de nacimiento\",\n                            children: /*#__PURE__*/_jsx(Input, {})\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          lg: 6,\n                          xs: 22,\n                          offset: 1,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"nationality\",\n                            label: \"Nacionalidad\",\n                            children: /*#__PURE__*/_jsx(Input, {})\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          lg: 6,\n                          xs: 22,\n                          offset: 1,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"other_nationality\",\n                            label: \"Otra nacionalidad\",\n                            children: /*#__PURE__*/_jsx(Input, {})\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          lg: 6,\n                          xs: 22,\n                          offset: 1,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"benefit\",\n                            label: \"% Beneficio\",\n                            children: /*#__PURE__*/_jsx(Input, {})\n                          })\n                        })]\n                      })\n                    }), /*#__PURE__*/_jsx(Row, {\n                      flex: true,\n                      children: /*#__PURE__*/_jsx(Form.Item, {\n                        children: /*#__PURE__*/_jsx(Button, {\n                          type: \"primary\",\n                          htmlType: \"submit\",\n                          children: \"Guardar\"\n                        })\n                      })\n                    })]\n                  }), /*#__PURE__*/_jsx(Spin, {\n                    tip: \"Loading...\",\n                    spinning: loadingTable,\n                    children: /*#__PURE__*/_jsx(Table, {\n                      columns: colFamily,\n                      dataSource: family\n                    })\n                  })]\n                }), /*#__PURE__*/_jsxs(Panel, {\n                  header: \"Contactos de Emergencia\",\n                  children: [/*#__PURE__*/_jsxs(Form, {\n                    layout: \"vertical\",\n                    form: formContactEmergency,\n                    onFinish: formFinishContactE,\n                    children: [/*#__PURE__*/_jsx(Col, {\n                      children: /*#__PURE__*/_jsxs(Row, {\n                        flex: true,\n                        children: [/*#__PURE__*/_jsx(Col, {\n                          lg: 6,\n                          xs: 22,\n                          offset: 1,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"relationship\",\n                            label: \"Parentesco\",\n                            children: /*#__PURE__*/_jsx(Select, {\n                              options: relationship\n                            })\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          lg: 6,\n                          xs: 22,\n                          offset: 1,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"fullname\",\n                            label: \"Nombre completo\",\n                            children: /*#__PURE__*/_jsx(Input, {})\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          lg: 6,\n                          xs: 22,\n                          offset: 1,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"phone_one\",\n                            label: \"Tel\\xE9fono 1\",\n                            children: /*#__PURE__*/_jsx(Input, {})\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          lg: 6,\n                          xs: 22,\n                          offset: 1,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"phone_two\",\n                            label: \"Tel\\xE9fono 2\",\n                            children: /*#__PURE__*/_jsx(Input, {})\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          lg: 13,\n                          xs: 22,\n                          offset: 1,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"address\",\n                            label: \"Direcci\\xF3n\",\n                            children: /*#__PURE__*/_jsx(Input, {})\n                          })\n                        })]\n                      })\n                    }), /*#__PURE__*/_jsx(Row, {\n                      flex: true,\n                      children: /*#__PURE__*/_jsx(Form.Item, {\n                        children: /*#__PURE__*/_jsx(Button, {\n                          type: \"primary\",\n                          htmlType: \"submit\",\n                          children: \"Guardar\"\n                        })\n                      })\n                    })]\n                  }), /*#__PURE__*/_jsx(Spin, {\n                    tip: \"Loading...\",\n                    spinning: loadingTable,\n                    children: /*#__PURE__*/_jsx(Table, {\n                      columns: colContact,\n                      dataSource: contactEmergency\n                    })\n                  })]\n                }), /*#__PURE__*/_jsxs(Panel, {\n                  header: \"Formaci\\xF3n/Habilidades\",\n                  children: [/*#__PURE__*/_jsxs(Form, {\n                    layout: \"vertical\",\n                    form: formTraining,\n                    onFinish: formFinishTraining,\n                    children: [/*#__PURE__*/_jsx(Col, {\n                      children: /*#__PURE__*/_jsxs(Row, {\n                        flex: true,\n                        children: [/*#__PURE__*/_jsx(Col, {\n                          lg: 6,\n                          xs: 22,\n                          offset: 1,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"school\",\n                            label: \"Escuela\",\n                            children: /*#__PURE__*/_jsx(Input, {})\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          lg: 6,\n                          xs: 22,\n                          offset: 1,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"since\",\n                            label: \"Fecha Inicio-Fin\",\n                            children: /*#__PURE__*/_jsx(Space, {\n                              direction: \"vertical\",\n                              size: 12,\n                              children: /*#__PURE__*/_jsx(RangePicker, {\n                                style: {\n                                  width: \"100%\"\n                                },\n                                onChange: onChangeDateTrainig\n                              })\n                            })\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          lg: 6,\n                          xs: 22,\n                          offset: 1,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"accreditation_document\",\n                            label: \"Documento de acreditaci\\xF3n\",\n                            children: /*#__PURE__*/_jsx(Input, {})\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          lg: 6,\n                          xs: 22,\n                          offset: 1,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"currently_studing\",\n                            label: \"Estudia actualmente\",\n                            children: /*#__PURE__*/_jsx(Checkbox, {\n                              onChange: changeCurreStud,\n                              checked: currenlyStuding\n                            })\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          lg: 6,\n                          xs: 22,\n                          offset: 1,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"completed_period\",\n                            label: \"Periodo completado\",\n                            children: /*#__PURE__*/_jsx(Input, {})\n                          })\n                        })]\n                      })\n                    }), /*#__PURE__*/_jsx(Row, {\n                      flex: true,\n                      children: /*#__PURE__*/_jsx(Form.Item, {\n                        children: /*#__PURE__*/_jsx(Button, {\n                          type: \"primary\",\n                          htmlType: \"submit\",\n                          children: \"Guardar\"\n                        })\n                      })\n                    })]\n                  }), /*#__PURE__*/_jsx(Spin, {\n                    tip: \"Loading...\",\n                    spinning: loadingTable,\n                    children: /*#__PURE__*/_jsx(Table, {\n                      columns: colTraining,\n                      dataSource: training\n                    })\n                  })]\n                }), /*#__PURE__*/_jsxs(Panel, {\n                  header: \"Experiencia laboral\",\n                  children: [/*#__PURE__*/_jsxs(Form, {\n                    layout: \"vertical\",\n                    form: formExperiencejob,\n                    onFinish: formFinishJobExp,\n                    children: [/*#__PURE__*/_jsx(Col, {\n                      children: /*#__PURE__*/_jsxs(Row, {\n                        flex: true,\n                        children: [/*#__PURE__*/_jsx(Col, {\n                          lg: 6,\n                          xs: 22,\n                          offset: 1,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"experience_type\",\n                            label: \"Tipo de experiencia\",\n                            children: /*#__PURE__*/_jsx(Select, {\n                              options: experienceType\n                            })\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          lg: 6,\n                          xs: 22,\n                          offset: 1,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"labor_relationship\",\n                            label: \"Relaci\\xF3n laboral\",\n                            children: /*#__PURE__*/_jsx(Select, {\n                              options: laborRelationship\n                            })\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          lg: 6,\n                          xs: 22,\n                          offset: 1,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"reason_separation\",\n                            label: \"Motivo de separaci\\xF3n\",\n                            children: /*#__PURE__*/_jsx(Select, {\n                              options: reasonSeparation\n                            })\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          lg: 6,\n                          xs: 22,\n                          offset: 1,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"company\",\n                            label: \"Empresa\",\n                            children: /*#__PURE__*/_jsx(Input, {})\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          lg: 6,\n                          xs: 22,\n                          offset: 1,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"since\",\n                            label: \"Fecha de inicio\",\n                            children: /*#__PURE__*/_jsx(RangePicker, {\n                              onChange: onChangeDExJ\n                            })\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          lg: 6,\n                          xs: 22,\n                          offset: 1,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"turn\",\n                            label: \"Giro empresarial\",\n                            children: /*#__PURE__*/_jsx(Input, {})\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          lg: 6,\n                          xs: 22,\n                          offset: 1,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"function\",\n                            label: \"Funciones\",\n                            children: /*#__PURE__*/_jsx(Input, {})\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          lg: 6,\n                          xs: 22,\n                          offset: 1,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"starting_salary\",\n                            label: \"Salario incial\",\n                            children: /*#__PURE__*/_jsx(Input, {})\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          lg: 6,\n                          xs: 22,\n                          offset: 1,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"last_salary\",\n                            label: \"Salario final\",\n                            children: /*#__PURE__*/_jsx(Input, {})\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          lg: 6,\n                          xs: 22,\n                          offset: 1,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"immediate_boos\",\n                            label: \"Jefe inmediato\",\n                            children: /*#__PURE__*/_jsx(Input, {})\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          lg: 6,\n                          xs: 22,\n                          offset: 1,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"address_company\",\n                            label: \"Direcci\\xF3n de la empresa\",\n                            children: /*#__PURE__*/_jsx(Input, {})\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          lg: 6,\n                          xs: 22,\n                          offset: 1,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"phone_company\",\n                            label: \"Tel\\xE9fono de la empresa\",\n                            children: /*#__PURE__*/_jsx(Input, {})\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          lg: 6,\n                          xs: 22,\n                          offset: 1,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"notes\",\n                            label: \"Notas\",\n                            children: /*#__PURE__*/_jsx(TextArea, {})\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          lg: 6,\n                          xs: 22,\n                          offset: 1,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"cv\",\n                            label: \"Curriculum\",\n                            children: /*#__PURE__*/_jsx(TextArea, {})\n                          })\n                        })]\n                      })\n                    }), /*#__PURE__*/_jsx(Row, {\n                      flex: true,\n                      children: /*#__PURE__*/_jsx(Form.Item, {\n                        children: /*#__PURE__*/_jsx(Button, {\n                          type: \"primary\",\n                          htmlType: \"submit\",\n                          children: \"Guardar\"\n                        })\n                      })\n                    })]\n                  }), /*#__PURE__*/_jsx(Spin, {\n                    tip: \"Loading...\",\n                    spinning: loadingTable,\n                    children: /*#__PURE__*/_jsx(Table, {\n                      columns: colExpJob,\n                      dataSource: experineceJob\n                    })\n                  })]\n                }), /*#__PURE__*/_jsxs(Panel, {\n                  header: \"Cuentas bancarias\",\n                  children: [/*#__PURE__*/_jsxs(Form, {\n                    layout: \"vertical\",\n                    form: formBank,\n                    onFinish: formBankAcc,\n                    children: [/*#__PURE__*/_jsx(Col, {\n                      children: /*#__PURE__*/_jsxs(Row, {\n                        flex: true,\n                        children: [/*#__PURE__*/_jsx(Col, {\n                          lg: 6,\n                          xs: 22,\n                          offset: 1,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"bank\",\n                            label: \"Banco\",\n                            children: /*#__PURE__*/_jsx(Select, {\n                              options: banks\n                            })\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          lg: 6,\n                          xs: 22,\n                          offset: 1,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"account_number\",\n                            label: \"N\\xFAmero de cuenta\",\n                            children: /*#__PURE__*/_jsx(Input, {})\n                          })\n                        }), /*#__PURE__*/_jsx(Col, {\n                          lg: 6,\n                          xs: 22,\n                          offset: 1,\n                          children: /*#__PURE__*/_jsx(Form.Item, {\n                            name: \"interbank_key\",\n                            label: \"Clave interbancaria\",\n                            children: /*#__PURE__*/_jsx(Input, {})\n                          })\n                        })]\n                      })\n                    }), /*#__PURE__*/_jsx(Row, {\n                      flex: true,\n                      children: /*#__PURE__*/_jsx(Form.Item, {\n                        children: /*#__PURE__*/_jsx(Button, {\n                          type: \"primary\",\n                          htmlType: \"submit\",\n                          children: \"Guardar\"\n                        })\n                      })\n                    })]\n                  }), /*#__PURE__*/_jsx(Spin, {\n                    tip: \"Loading...\",\n                    spinning: loadingTable,\n                    children: /*#__PURE__*/_jsx(Table, {\n                      columns: colBank,\n                      dataSource: bankAccounts\n                    })\n                  })]\n                }), /*#__PURE__*/_jsxs(Panel, {\n                  header: \"Documentos\",\n                  children: [/*#__PURE__*/_jsx(Row, {\n                    flex: true,\n                    children: /*#__PURE__*/_jsx(Col, {\n                      style: {\n                        padding: \"2%\"\n                      },\n                      children: /*#__PURE__*/_jsx(Button, {\n                        icon: /*#__PURE__*/_jsx(PlusOutlined, {}),\n                        type: \"primary\",\n                        onClick: () => getModalDoc(true),\n                        children: \"Agregar\"\n                      })\n                    })\n                  }), /*#__PURE__*/_jsx(Spin, {\n                    tip: \"Loading...\",\n                    spinning: loadingTable,\n                    children: /*#__PURE__*/_jsx(Table, {\n                      columns: colDoc,\n                      dataSource: documents\n                    })\n                  })]\n                }), /*#__PURE__*/_jsxs(Panel, {\n                  header: \"Eliminar\",\n                  children: [/*#__PURE__*/_jsx(Alert, {\n                    message: \"Warning\",\n                    description: \"Al eliminar a una persona perder\\xE1 todos los datos relacionados a ella de manera permanente.\",\n                    type: \"warning\",\n                    showIcon: true\n                  }), /*#__PURE__*/_jsx(Row, {\n                    style: {\n                      padding: \"2%\"\n                    },\n                    children: /*#__PURE__*/_jsx(Col, {\n                      children: /*#__PURE__*/_jsx(Button, {\n                        type: \"primary\",\n                        danger: true,\n                        icon: /*#__PURE__*/_jsx(WarningOutlined, {}),\n                        onClick: () => setDeleteRegister({\n                          id: \"\",\n                          api: \"deletePerson\"\n                        }),\n                        children: \"Eliminar persona\"\n                      })\n                    })\n                  })]\n                })]\n              })]\n            }), /*#__PURE__*/_jsx(Row, {\n              flex: true,\n              children: /*#__PURE__*/_jsx(Col, {\n                style: {\n                  padding: \"2%\"\n                },\n                children: /*#__PURE__*/_jsx(Button, {\n                  icon: /*#__PURE__*/_jsx(ArrowLeftOutlined, {}),\n                  type: \"primary\",\n                  onClick: () => Router.push(\"/home\"),\n                  children: \"Regresar\"\n                })\n              })\n            })]\n          })\n        })]\n      }), /*#__PURE__*/_jsx(Modal, {\n        title: \"Modal\",\n        visible: modal,\n        onOk: deleteRegister,\n        onCancel: showModal,\n        okText: \"Si, Eliminar\",\n        cancelText: \"Cancelar\",\n        children: /*#__PURE__*/_jsx(Alert, {\n          message: \"Warning\",\n          description: \"Al eliminar este registro perder\\xE1 todos los datos relacionados a el de manera permanente. \\xBFEst\\xE1 seguro de querer eliminarlo?\",\n          type: \"warning\",\n          showIcon: true\n        })\n      }), /*#__PURE__*/_jsx(DocumentModal, {\n        close: getModalDoc,\n        visible: modalDoc,\n        person: router.query.id\n      })]\n    })\n  });\n};\n\nexport default userDetailForm;","map":null,"metadata":{},"sourceType":"module"}