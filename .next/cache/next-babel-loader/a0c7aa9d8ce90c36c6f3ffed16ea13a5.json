{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { render } from \"react-dom\";\nimport MainLayout from \"../../../layout/MainLayout\";\nimport { Row, Col, Table, Breadcrumb, Button, Form, Input, Select, DatePicker, Space } from \"antd\";\nimport { DeleteOutlined, EditOutlined, InfoCircleOutlined, SearchOutlined, PlusOutlined } from \"@ant-design/icons\";\nimport axiosApi from \"../../../libs/axiosApi\";\nimport Moment from \"moment\";\nimport { useRouter } from \"next/router\";\nimport cookie from \"js-cookie\";\nimport { EyeOutlined } from '@ant-design/icons';\nexport default function Releases() {\n  /* React */\n  const {\n    Column\n  } = Table;\n  const {\n    Option\n  } = Select;\n  const {\n    RangePicker\n  } = DatePicker;\n  /* const childRef = useRef(); */\n\n  const route = useRouter();\n  /* Variables */\n\n  const {\n    0: list,\n    1: setList\n  } = useState([]);\n  let userToken = cookie.get(\"userToken\") ? cookie.get(\"userToken\") : null;\n\n  const getNotifications = async () => {\n    try {\n      let response = await axiosApi.get(`/noticenter/notification/`);\n      let data = response.data;\n      setList(data.results);\n    } catch (e) {\n      console.log(e);\n      /* setLoading(false); */\n    }\n  };\n\n  const GotoDetails = details => {\n    console.log('details', details);\n    route.push('./releases/' + details.id + '/details');\n  };\n\n  const GoToUserNotifications = props => {\n    return /*#__PURE__*/_jsx(Button, {\n      onClick: () => route.push('./releases/' + props.notification_id + '/users'),\n      type: \"text\",\n      children: \"Ver\"\n    });\n  };\n\n  useEffect(() => {\n    getNotifications();\n  }, []);\n  return /*#__PURE__*/_jsxs(MainLayout, {\n    currentKey: \"4.1\",\n    children: [/*#__PURE__*/_jsxs(Breadcrumb, {\n      children: [/*#__PURE__*/_jsx(Breadcrumb.Item, {\n        children: \"Inicio\"\n      }, \"home\"), /*#__PURE__*/_jsx(Breadcrumb.Item, {\n        children: \"Comunicados\"\n      }, \"releases\")]\n    }, \"Breadcrumb\"), /*#__PURE__*/_jsxs(\"div\", {\n      className: \"container\",\n      style: {\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxs(Row, {\n        justify: \"space-between\",\n        children: [/*#__PURE__*/_jsx(Col, {\n          children: /*#__PURE__*/_jsxs(Form, {\n            name: \"filter\",\n            layout: \"inline\",\n            children: [/*#__PURE__*/_jsx(Form.Item, {\n              name: \"send_by\",\n              label: \"Enviado por\",\n              children: /*#__PURE__*/_jsx(Input, {})\n            }, \"send_by\"), /*#__PURE__*/_jsx(Form.Item, {\n              name: \"category\",\n              label: \"Categor\\xEDa\",\n              children: /*#__PURE__*/_jsxs(Select, {\n                style: {\n                  width: 150\n                },\n                children: [/*#__PURE__*/_jsx(Option, {\n                  value: \"rmb\",\n                  children: \"RMB\"\n                }, \"item_1\"), /*#__PURE__*/_jsx(Option, {\n                  value: \"dollar\",\n                  children: \"Dollar\"\n                }, \"item_2\")]\n              }, \"select\")\n            }, \"category\"), /*#__PURE__*/_jsx(Form.Item, {\n              name: \"send_date\",\n              label: \"Fecha de envio\",\n              children: /*#__PURE__*/_jsx(RangePicker, {})\n            }, \"send_date\")]\n          }, \"form\")\n        }), /*#__PURE__*/_jsx(Col, {\n          children: /*#__PURE__*/_jsxs(Button, {\n            onClick: () => route.push('releases/new'),\n            style: {\n              background: \"#fa8c16\",\n              fontWeight: \"bold\",\n              color: \"white\"\n            },\n            children: [/*#__PURE__*/_jsx(PlusOutlined, {}), \"Agregar nuevo comunicado\"]\n          }, \"add\")\n        })]\n      }, \"row1\"), /*#__PURE__*/_jsx(Row, {\n        children: /*#__PURE__*/_jsx(Col, {\n          span: 24,\n          children: /*#__PURE__*/_jsxs(Table, {\n            dataSource: list,\n            className: 'mainTable',\n            children: [/*#__PURE__*/_jsx(Column, {\n              title: \"Categor\\xEDa\",\n              dataIndex: \"title\"\n            }, \"title\"), /*#__PURE__*/_jsx(Column, {\n              title: \"Enviado por\",\n              dataIndex: \"created_by\",\n              render: (text, record) => text.first_name + ' ' + text.flast_name\n            }, \"send_by\"), /*#__PURE__*/_jsx(Column, {\n              title: \"Categor\\xEDa\",\n              dataIndex: \"category\",\n              render: (text, record) => text == 1 ? 'Aviso' : 'Noticia'\n            }, \"cat\"), /*#__PURE__*/_jsx(Column, {\n              title: \"Fecha\",\n              dataIndex: \"timestamp\",\n              render: (text, record) => Moment(text).format('DD / MM / YYYY')\n            }, \"date\"), /*#__PURE__*/_jsx(Column, {\n              title: \"Recibieron\",\n              render: (text, record) => /*#__PURE__*/_jsx(GoToUserNotifications, {\n                notification_id: record.id\n              }, 'goUser' + record.id)\n            }, \"recibieron\"), /*#__PURE__*/_jsx(Column, {\n              title: \"Acciones\",\n              render: (text, record) => /*#__PURE__*/_jsx(EyeOutlined, {\n                onClick: () => GotoDetails(record)\n              }, 'goDetails_' + record.id)\n            }, \"action\")]\n          }, \"releases_table\")\n        })\n      }, \"row2\")]\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}